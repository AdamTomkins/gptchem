diff --git a/experiments/03_classification/cv/cv-classification_results_2.pdf b/experiments/03_classification/cv/cv-classification_results_2.pdf
index 8532c2a..c551a73 100644
Binary files a/experiments/03_classification/cv/cv-classification_results_2.pdf and b/experiments/03_classification/cv/cv-classification_results_2.pdf differ
diff --git a/experiments/03_classification/cv/cv-classification_results_5.pdf b/experiments/03_classification/cv/cv-classification_results_5.pdf
index c3a6dee..27d3836 100644
Binary files a/experiments/03_classification/cv/cv-classification_results_5.pdf and b/experiments/03_classification/cv/cv-classification_results_5.pdf differ
diff --git a/experiments/03_classification/cv/gptchemcache/cache.db b/experiments/03_classification/cv/gptchemcache/cache.db
index 327f90a..ae48c35 100644
Binary files a/experiments/03_classification/cv/gptchemcache/cache.db and b/experiments/03_classification/cv/gptchemcache/cache.db differ
diff --git a/experiments/03_classification/cv/gptchemcache/cache.db-wal b/experiments/03_classification/cv/gptchemcache/cache.db-wal
index e69de29..e4f0558 100644
Binary files a/experiments/03_classification/cv/gptchemcache/cache.db-wal and b/experiments/03_classification/cv/gptchemcache/cache.db-wal differ
diff --git a/experiments/03_classification/cv/plot_results.ipynb b/experiments/03_classification/cv/plot_results.ipynb
index 17050b4..32f9f4a 100644
--- a/experiments/03_classification/cv/plot_results.ipynb
+++ b/experiments/03_classification/cv/plot_results.ipynb
@@ -2,9 +2,18 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 41,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "The autoreload extension is already loaded. To reload it, use:\n",
+      "  %reload_ext autoreload\n"
+     ]
+    }
+   ],
    "source": [
     "%load_ext autoreload\n",
     "%autoreload 2"
@@ -12,7 +21,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 42,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -33,6 +42,242 @@
     "%matplotlib inline"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": 43,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "crabnet_out = glob('out-crabnet/*.pkl')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 44,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "extracted_crabnet_res = []\n",
+    "\n",
+    "for out in crabnet_out:\n",
+    "    out = load_pickle(out)\n",
+    "    res = {\n",
+    "        \"train_size\": out[\"train_size\"],\n",
+    "        \"frac_valid\": out[\"frac_valid\"],\n",
+    "        \"accuracy\": out[\"accuracy\"],\n",
+    "        \"f1_macro\": out[\"f1_macro\"],\n",
+    "        \"f1_micro\": out[\"f1_micro\"],\n",
+    "        \"kappa\": out[\"kappa\"],\n",
+    "    }\n",
+    "\n",
+    "    extracted_crabnet_res.append(res)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 45,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "extracted_crabnet_res = pd.DataFrame(extracted_crabnet_res)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 46,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "extracted_crabnet_res_grouped = extracted_crabnet_res.groupby(\"train_size\").agg(\n",
+    "    [\"mean\", \"std\", sem]\n",
+    ")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 47,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead tr th {\n",
+       "        text-align: left;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead tr:last-of-type th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr>\n",
+       "      <th></th>\n",
+       "      <th colspan=\"3\" halign=\"left\">frac_valid</th>\n",
+       "      <th colspan=\"3\" halign=\"left\">accuracy</th>\n",
+       "      <th colspan=\"3\" halign=\"left\">f1_macro</th>\n",
+       "      <th colspan=\"3\" halign=\"left\">f1_micro</th>\n",
+       "      <th colspan=\"3\" halign=\"left\">kappa</th>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th></th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>train_size</th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>10</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.580000</td>\n",
+       "      <td>0.048990</td>\n",
+       "      <td>0.024495</td>\n",
+       "      <td>0.574443</td>\n",
+       "      <td>0.049401</td>\n",
+       "      <td>0.024701</td>\n",
+       "      <td>0.580000</td>\n",
+       "      <td>0.048990</td>\n",
+       "      <td>0.024495</td>\n",
+       "      <td>0.160000</td>\n",
+       "      <td>0.097980</td>\n",
+       "      <td>0.048990</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>20</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.609000</td>\n",
+       "      <td>0.036347</td>\n",
+       "      <td>0.011494</td>\n",
+       "      <td>0.598513</td>\n",
+       "      <td>0.046742</td>\n",
+       "      <td>0.014781</td>\n",
+       "      <td>0.609000</td>\n",
+       "      <td>0.036347</td>\n",
+       "      <td>0.011494</td>\n",
+       "      <td>0.218000</td>\n",
+       "      <td>0.072694</td>\n",
+       "      <td>0.022988</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>50</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.654719</td>\n",
+       "      <td>0.058758</td>\n",
+       "      <td>0.019586</td>\n",
+       "      <td>0.647273</td>\n",
+       "      <td>0.065298</td>\n",
+       "      <td>0.021766</td>\n",
+       "      <td>0.654719</td>\n",
+       "      <td>0.058758</td>\n",
+       "      <td>0.019586</td>\n",
+       "      <td>0.308978</td>\n",
+       "      <td>0.118679</td>\n",
+       "      <td>0.039560</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>100</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.725581</td>\n",
+       "      <td>0.074998</td>\n",
+       "      <td>0.023716</td>\n",
+       "      <td>0.723322</td>\n",
+       "      <td>0.075733</td>\n",
+       "      <td>0.023949</td>\n",
+       "      <td>0.725581</td>\n",
+       "      <td>0.074998</td>\n",
+       "      <td>0.023716</td>\n",
+       "      <td>0.450676</td>\n",
+       "      <td>0.149985</td>\n",
+       "      <td>0.047429</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "           frac_valid            accuracy                      f1_macro  \\\n",
+       "                 mean  std  sem      mean       std       sem      mean   \n",
+       "train_size                                                                \n",
+       "10                1.0  0.0  0.0  0.580000  0.048990  0.024495  0.574443   \n",
+       "20                1.0  0.0  0.0  0.609000  0.036347  0.011494  0.598513   \n",
+       "50                1.0  0.0  0.0  0.654719  0.058758  0.019586  0.647273   \n",
+       "100               1.0  0.0  0.0  0.725581  0.074998  0.023716  0.723322   \n",
+       "\n",
+       "                                f1_micro                         kappa  \\\n",
+       "                 std       sem      mean       std       sem      mean   \n",
+       "train_size                                                               \n",
+       "10          0.049401  0.024701  0.580000  0.048990  0.024495  0.160000   \n",
+       "20          0.046742  0.014781  0.609000  0.036347  0.011494  0.218000   \n",
+       "50          0.065298  0.021766  0.654719  0.058758  0.019586  0.308978   \n",
+       "100         0.075733  0.023949  0.725581  0.074998  0.023716  0.450676   \n",
+       "\n",
+       "                                \n",
+       "                 std       sem  \n",
+       "train_size                      \n",
+       "10          0.097980  0.048990  \n",
+       "20          0.072694  0.022988  \n",
+       "50          0.118679  0.039560  \n",
+       "100         0.149985  0.047429  "
+      ]
+     },
+     "execution_count": 47,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "extracted_crabnet_res_grouped"
+   ]
+  },
   {
    "cell_type": "markdown",
    "metadata": {},
@@ -42,7 +287,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": 48,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -51,7 +296,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 49,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -60,7 +305,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 50,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -79,22 +324,26 @@
     "        \"representation\": out[\"representation\"] if \"representation\" in out else \"mofid\",\n",
     "    }\n",
     "\n",
-    "    baseline_res = {\n",
-    "        \"train_size\": out[\"num_train_points\"],\n",
-    "        \"accuracy\": out[\"baseline\"][\"accuracy\"],\n",
-    "        \"f1_macro\": out[\"baseline\"][\"f1_macro\"],\n",
-    "        \"f1_micro\": out[\"baseline\"][\"f1_micro\"],\n",
-    "        \"kappa\": out[\"baseline\"][\"kappa\"],\n",
-    "        \"num_classes\": out[\"num_classes\"],\n",
-    "    }\n",
+    "    try:\n",
+    "        baseline_res = {\n",
+    "            \"train_size\": out[\"num_train_points\"],\n",
+    "            \"accuracy\": out[\"baseline\"][\"accuracy\"],\n",
+    "            \"f1_macro\": out[\"baseline\"][\"f1_macro\"],\n",
+    "            \"f1_micro\": out[\"baseline\"][\"f1_micro\"],\n",
+    "            \"kappa\": out[\"baseline\"][\"kappa\"],\n",
+    "            \"num_classes\": out[\"num_classes\"],\n",
+    "        }  \n",
+    "        baseline.append(baseline_res)\n",
+    "    except Exception:\n",
+    "        pass\n",
     "\n",
     "    extracted_res.append(res)\n",
-    "    baseline.append(baseline_res)"
+    "   "
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": 51,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -104,7 +353,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 52,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -115,7 +364,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 53,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -124,7 +373,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 10,
+   "execution_count": 54,
    "metadata": {},
    "outputs": [
     {
@@ -213,8 +462,31 @@
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
-       "      <th rowspan=\"8\" valign=\"top\">2</th>\n",
-       "      <th rowspan=\"2\" valign=\"top\">10</th>\n",
+       "      <th rowspan=\"12\" valign=\"top\">2</th>\n",
+       "      <th rowspan=\"3\" valign=\"top\">10</th>\n",
+       "      <th>composition</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.556667</td>\n",
+       "      <td>0.073711</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.042557</td>\n",
+       "      <td>0.499398</td>\n",
+       "      <td>0.154432</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.089161</td>\n",
+       "      <td>0.556667</td>\n",
+       "      <td>0.073711</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.042557</td>\n",
+       "      <td>0.113333</td>\n",
+       "      <td>0.147422</td>\n",
+       "      <td>3</td>\n",
+       "      <td>8.511430e-02</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
        "      <th>grouped_mof</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
@@ -261,7 +533,30 @@
        "      <td>3.528298e-02</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th rowspan=\"2\" valign=\"top\">20</th>\n",
+       "      <th rowspan=\"3\" valign=\"top\">20</th>\n",
+       "      <th>composition</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.600000</td>\n",
+       "      <td>0.043589</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.025166</td>\n",
+       "      <td>0.556970</td>\n",
+       "      <td>0.075090</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.043353</td>\n",
+       "      <td>0.600000</td>\n",
+       "      <td>0.043589</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.025166</td>\n",
+       "      <td>0.200000</td>\n",
+       "      <td>0.087178</td>\n",
+       "      <td>3</td>\n",
+       "      <td>5.033223e-02</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
        "      <th>grouped_mof</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
@@ -308,7 +603,30 @@
        "      <td>3.211092e-02</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th rowspan=\"2\" valign=\"top\">50</th>\n",
+       "      <th rowspan=\"3\" valign=\"top\">50</th>\n",
+       "      <th>composition</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.752688</td>\n",
+       "      <td>0.045620</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.032258</td>\n",
+       "      <td>0.751780</td>\n",
+       "      <td>0.046588</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.032943</td>\n",
+       "      <td>0.752688</td>\n",
+       "      <td>0.045620</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.032258</td>\n",
+       "      <td>0.505736</td>\n",
+       "      <td>0.090379</td>\n",
+       "      <td>2</td>\n",
+       "      <td>6.390771e-02</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
        "      <th>grouped_mof</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
@@ -355,7 +673,30 @@
        "      <td>4.095988e-02</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th rowspan=\"2\" valign=\"top\">100</th>\n",
+       "      <th rowspan=\"3\" valign=\"top\">100</th>\n",
+       "      <th>composition</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.767442</td>\n",
+       "      <td>0.098666</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.069767</td>\n",
+       "      <td>0.767114</td>\n",
+       "      <td>0.099130</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.070095</td>\n",
+       "      <td>0.767442</td>\n",
+       "      <td>0.098666</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.069767</td>\n",
+       "      <td>0.534480</td>\n",
+       "      <td>0.198151</td>\n",
+       "      <td>2</td>\n",
+       "      <td>1.401142e-01</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
        "      <th>grouped_mof</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
@@ -402,8 +743,31 @@
        "      <td>2.531930e-02</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th rowspan=\"8\" valign=\"top\">5</th>\n",
-       "      <th rowspan=\"2\" valign=\"top\">10</th>\n",
+       "      <th rowspan=\"12\" valign=\"top\">5</th>\n",
+       "      <th rowspan=\"3\" valign=\"top\">10</th>\n",
+       "      <th>composition</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.243333</td>\n",
+       "      <td>0.037859</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.021858</td>\n",
+       "      <td>0.195361</td>\n",
+       "      <td>0.065380</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.037747</td>\n",
+       "      <td>0.243333</td>\n",
+       "      <td>0.037859</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.021858</td>\n",
+       "      <td>0.054167</td>\n",
+       "      <td>0.047324</td>\n",
+       "      <td>3</td>\n",
+       "      <td>2.732266e-02</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
        "      <th>grouped_mof</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
@@ -450,7 +814,30 @@
        "      <td>9.939050e-03</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th rowspan=\"2\" valign=\"top\">20</th>\n",
+       "      <th rowspan=\"3\" valign=\"top\">20</th>\n",
+       "      <th>composition</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.280000</td>\n",
+       "      <td>0.072111</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.041633</td>\n",
+       "      <td>0.244772</td>\n",
+       "      <td>0.084619</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.048855</td>\n",
+       "      <td>0.280000</td>\n",
+       "      <td>0.072111</td>\n",
+       "      <td>3</td>\n",
+       "      <td>0.041633</td>\n",
+       "      <td>0.100000</td>\n",
+       "      <td>0.090139</td>\n",
+       "      <td>3</td>\n",
+       "      <td>5.204165e-02</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
        "      <th>grouped_mof</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
@@ -497,7 +884,30 @@
        "      <td>1.561249e-02</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th rowspan=\"2\" valign=\"top\">50</th>\n",
+       "      <th rowspan=\"3\" valign=\"top\">50</th>\n",
+       "      <th>composition</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.268817</td>\n",
+       "      <td>0.045620</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.032258</td>\n",
+       "      <td>0.273199</td>\n",
+       "      <td>0.047100</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.033304</td>\n",
+       "      <td>0.268817</td>\n",
+       "      <td>0.045620</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.032258</td>\n",
+       "      <td>0.087313</td>\n",
+       "      <td>0.054806</td>\n",
+       "      <td>2</td>\n",
+       "      <td>3.875357e-02</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
        "      <th>grouped_mof</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
@@ -544,7 +954,30 @@
        "      <td>2.146000e-02</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th rowspan=\"2\" valign=\"top\">100</th>\n",
+       "      <th rowspan=\"3\" valign=\"top\">100</th>\n",
+       "      <th>composition</th>\n",
+       "      <td>1.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.395349</td>\n",
+       "      <td>0.131555</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.093023</td>\n",
+       "      <td>0.394167</td>\n",
+       "      <td>0.139155</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.098398</td>\n",
+       "      <td>0.395349</td>\n",
+       "      <td>0.131555</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.093023</td>\n",
+       "      <td>0.244408</td>\n",
+       "      <td>0.168269</td>\n",
+       "      <td>2</td>\n",
+       "      <td>1.189840e-01</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
        "      <th>grouped_mof</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
@@ -598,105 +1031,145 @@
        "                                      frac_valid                  accuracy  \\\n",
        "                                            mean  std count  sem      mean   \n",
        "num_classes train_size representation                                        \n",
-       "2           10         grouped_mof           1.0  0.0     4  0.0  0.512500   \n",
+       "2           10         composition           1.0  0.0     3  0.0  0.556667   \n",
+       "                       grouped_mof           1.0  0.0     4  0.0  0.512500   \n",
        "                       mofid                 1.0  0.0    10  0.0  0.553000   \n",
-       "            20         grouped_mof           1.0  0.0     4  0.0  0.542500   \n",
+       "            20         composition           1.0  0.0     3  0.0  0.600000   \n",
+       "                       grouped_mof           1.0  0.0     4  0.0  0.542500   \n",
        "                       mofid                 1.0  0.0    10  0.0  0.560000   \n",
-       "            50         grouped_mof           1.0  0.0     3  0.0  0.573477   \n",
+       "            50         composition           1.0  0.0     2  0.0  0.752688   \n",
+       "                       grouped_mof           1.0  0.0     3  0.0  0.573477   \n",
        "                       mofid                 1.0  0.0    10  0.0  0.573118   \n",
-       "            100        grouped_mof           1.0  0.0     3  0.0  0.604651   \n",
+       "            100        composition           1.0  0.0     2  0.0  0.767442   \n",
+       "                       grouped_mof           1.0  0.0     3  0.0  0.604651   \n",
        "                       mofid                 1.0  0.0     8  0.0  0.604651   \n",
-       "5           10         grouped_mof           1.0  0.0     4  0.0  0.207500   \n",
+       "5           10         composition           1.0  0.0     3  0.0  0.243333   \n",
+       "                       grouped_mof           1.0  0.0     4  0.0  0.207500   \n",
        "                       mofid                 1.0  0.0    10  0.0  0.251000   \n",
-       "            20         grouped_mof           1.0  0.0     3  0.0  0.220000   \n",
+       "            20         composition           1.0  0.0     3  0.0  0.280000   \n",
+       "                       grouped_mof           1.0  0.0     3  0.0  0.220000   \n",
        "                       mofid                 1.0  0.0    10  0.0  0.256000   \n",
-       "            50         grouped_mof           1.0  0.0     3  0.0  0.240143   \n",
+       "            50         composition           1.0  0.0     2  0.0  0.268817   \n",
+       "                       grouped_mof           1.0  0.0     3  0.0  0.240143   \n",
        "                       mofid                 1.0  0.0    10  0.0  0.261290   \n",
-       "            100        grouped_mof           1.0  0.0     3  0.0  0.341085   \n",
+       "            100        composition           1.0  0.0     2  0.0  0.395349   \n",
+       "                       grouped_mof           1.0  0.0     3  0.0  0.341085   \n",
        "                       mofid                 1.0  0.0     8  0.0  0.287791   \n",
        "\n",
        "                                                                 f1_macro  \\\n",
        "                                            std count       sem      mean   \n",
        "num_classes train_size representation                                       \n",
-       "2           10         grouped_mof     0.009574     4  0.004787  0.449607   \n",
+       "2           10         composition     0.073711     3  0.042557  0.499398   \n",
+       "                       grouped_mof     0.009574     4  0.004787  0.449607   \n",
        "                       mofid           0.055787    10  0.017641  0.518027   \n",
-       "            20         grouped_mof     0.041932     4  0.020966  0.537650   \n",
+       "            20         composition     0.043589     3  0.025166  0.556970   \n",
+       "                       grouped_mof     0.041932     4  0.020966  0.537650   \n",
        "                       mofid           0.050772    10  0.016055  0.549742   \n",
-       "            50         grouped_mof     0.034565     3  0.019956  0.570586   \n",
+       "            50         composition     0.045620     2  0.032258  0.751780   \n",
+       "                       grouped_mof     0.034565     3  0.019956  0.570586   \n",
        "                       mofid           0.064526    10  0.020405  0.569785   \n",
-       "            100        grouped_mof     0.023256     3  0.013427  0.603683   \n",
+       "            100        composition     0.098666     2  0.069767  0.767114   \n",
+       "                       grouped_mof     0.023256     3  0.013427  0.603683   \n",
        "                       mofid           0.035159     8  0.012431  0.602092   \n",
-       "5           10         grouped_mof     0.034034     4  0.017017  0.144229   \n",
+       "5           10         composition     0.037859     3  0.021858  0.195361   \n",
+       "                       grouped_mof     0.034034     4  0.017017  0.144229   \n",
        "                       mofid           0.025144    10  0.007951  0.215703   \n",
-       "            20         grouped_mof     0.000000     3  0.000000  0.207771   \n",
+       "            20         composition     0.072111     3  0.041633  0.244772   \n",
+       "                       grouped_mof     0.000000     3  0.000000  0.207771   \n",
        "                       mofid           0.039497    10  0.012490  0.230515   \n",
-       "            50         grouped_mof     0.027060     3  0.015623  0.233749   \n",
+       "            50         composition     0.045620     2  0.032258  0.273199   \n",
+       "                       grouped_mof     0.027060     3  0.015623  0.233749   \n",
        "                       mofid           0.054369    10  0.017193  0.247117   \n",
-       "            100        grouped_mof     0.048411     3  0.027950  0.323882   \n",
+       "            100        composition     0.131555     2  0.093023  0.394167   \n",
+       "                       grouped_mof     0.048411     3  0.027950  0.323882   \n",
        "                       mofid           0.086960     8  0.030745  0.278979   \n",
        "\n",
        "                                                                 f1_micro  \\\n",
        "                                            std count       sem      mean   \n",
        "num_classes train_size representation                                       \n",
-       "2           10         grouped_mof     0.073214     4  0.036607  0.512500   \n",
+       "2           10         composition     0.154432     3  0.089161  0.556667   \n",
+       "                       grouped_mof     0.073214     4  0.036607  0.512500   \n",
        "                       mofid           0.080284    10  0.025388  0.553000   \n",
-       "            20         grouped_mof     0.045621     4  0.022811  0.542500   \n",
+       "            20         composition     0.075090     3  0.043353  0.600000   \n",
+       "                       grouped_mof     0.045621     4  0.022811  0.542500   \n",
        "                       mofid           0.047968    10  0.015169  0.560000   \n",
-       "            50         grouped_mof     0.034909     3  0.020155  0.573477   \n",
+       "            50         composition     0.046588     2  0.032943  0.752688   \n",
+       "                       grouped_mof     0.034909     3  0.020155  0.573477   \n",
        "                       mofid           0.065441    10  0.020694  0.573118   \n",
-       "            100        grouped_mof     0.022459     3  0.012967  0.604651   \n",
+       "            100        composition     0.099130     2  0.070095  0.767442   \n",
+       "                       grouped_mof     0.022459     3  0.012967  0.604651   \n",
        "                       mofid           0.035030     8  0.012385  0.604651   \n",
-       "5           10         grouped_mof     0.029346     4  0.014673  0.207500   \n",
+       "5           10         composition     0.065380     3  0.037747  0.243333   \n",
+       "                       grouped_mof     0.029346     4  0.014673  0.207500   \n",
        "                       mofid           0.032994    10  0.010434  0.251000   \n",
-       "            20         grouped_mof     0.010889     3  0.006287  0.220000   \n",
+       "            20         composition     0.084619     3  0.048855  0.280000   \n",
+       "                       grouped_mof     0.010889     3  0.006287  0.220000   \n",
        "                       mofid           0.043017    10  0.013603  0.256000   \n",
-       "            50         grouped_mof     0.021978     3  0.012689  0.240143   \n",
+       "            50         composition     0.047100     2  0.033304  0.268817   \n",
+       "                       grouped_mof     0.021978     3  0.012689  0.240143   \n",
        "                       mofid           0.050583    10  0.015996  0.261290   \n",
-       "            100        grouped_mof     0.051753     3  0.029880  0.341085   \n",
+       "            100        composition     0.139155     2  0.098398  0.395349   \n",
+       "                       grouped_mof     0.051753     3  0.029880  0.341085   \n",
        "                       mofid           0.092790     8  0.032806  0.287791   \n",
        "\n",
        "                                                                    kappa  \\\n",
        "                                            std count       sem      mean   \n",
        "num_classes train_size representation                                       \n",
-       "2           10         grouped_mof     0.009574     4  0.004787  0.025000   \n",
+       "2           10         composition     0.073711     3  0.042557  0.113333   \n",
+       "                       grouped_mof     0.009574     4  0.004787  0.025000   \n",
        "                       mofid           0.055787    10  0.017641  0.106000   \n",
-       "            20         grouped_mof     0.041932     4  0.020966  0.085000   \n",
+       "            20         composition     0.043589     3  0.025166  0.200000   \n",
+       "                       grouped_mof     0.041932     4  0.020966  0.085000   \n",
        "                       mofid           0.050772    10  0.016055  0.120000   \n",
-       "            50         grouped_mof     0.034565     3  0.019956  0.147798   \n",
+       "            50         composition     0.045620     2  0.032258  0.505736   \n",
+       "                       grouped_mof     0.034565     3  0.019956  0.147798   \n",
        "                       mofid           0.064526    10  0.020405  0.144891   \n",
-       "            100        grouped_mof     0.023256     3  0.013427  0.210798   \n",
+       "            100        composition     0.098666     2  0.069767  0.534480   \n",
+       "                       grouped_mof     0.023256     3  0.013427  0.210798   \n",
        "                       mofid           0.035159     8  0.012431  0.208965   \n",
-       "5           10         grouped_mof     0.034034     4  0.017017  0.009375   \n",
+       "5           10         composition     0.037859     3  0.021858  0.054167   \n",
+       "                       grouped_mof     0.034034     4  0.017017  0.009375   \n",
        "                       mofid           0.025144    10  0.007951  0.063750   \n",
-       "            20         grouped_mof     0.000000     3  0.000000  0.025000   \n",
+       "            20         composition     0.072111     3  0.041633  0.100000   \n",
+       "                       grouped_mof     0.000000     3  0.000000  0.025000   \n",
        "                       mofid           0.039497    10  0.012490  0.070000   \n",
-       "            50         grouped_mof     0.027060     3  0.015623  0.050910   \n",
+       "            50         composition     0.045620     2  0.032258  0.087313   \n",
+       "                       grouped_mof     0.027060     3  0.015623  0.050910   \n",
        "                       mofid           0.054369    10  0.017193  0.076953   \n",
-       "            100        grouped_mof     0.048411     3  0.027950  0.174537   \n",
+       "            100        composition     0.131555     2  0.093023  0.244408   \n",
+       "                       grouped_mof     0.048411     3  0.027950  0.174537   \n",
        "                       mofid           0.086960     8  0.030745  0.109617   \n",
        "\n",
        "                                                                     \n",
        "                                            std count           sem  \n",
        "num_classes train_size representation                                \n",
-       "2           10         grouped_mof     0.019149     4  9.574271e-03  \n",
+       "2           10         composition     0.147422     3  8.511430e-02  \n",
+       "                       grouped_mof     0.019149     4  9.574271e-03  \n",
        "                       mofid           0.111575    10  3.528298e-02  \n",
-       "            20         grouped_mof     0.083865     4  4.193249e-02  \n",
+       "            20         composition     0.087178     3  5.033223e-02  \n",
+       "                       grouped_mof     0.083865     4  4.193249e-02  \n",
        "                       mofid           0.101544    10  3.211092e-02  \n",
-       "            50         grouped_mof     0.069808     3  4.030380e-02  \n",
+       "            50         composition     0.090379     2  6.390771e-02  \n",
+       "                       grouped_mof     0.069808     3  4.030380e-02  \n",
        "                       mofid           0.129527    10  4.095988e-02  \n",
-       "            100        grouped_mof     0.048145     3  2.779634e-02  \n",
+       "            100        composition     0.198151     2  1.401142e-01  \n",
+       "                       grouped_mof     0.048145     3  2.779634e-02  \n",
        "                       mofid           0.071614     8  2.531930e-02  \n",
-       "5           10         grouped_mof     0.042543     4  2.127144e-02  \n",
+       "5           10         composition     0.047324     3  2.732266e-02  \n",
+       "                       grouped_mof     0.042543     4  2.127144e-02  \n",
        "                       mofid           0.031430    10  9.939050e-03  \n",
-       "            20         grouped_mof     0.000000     3  2.453269e-18  \n",
+       "            20         composition     0.090139     3  5.204165e-02  \n",
+       "                       grouped_mof     0.000000     3  2.453269e-18  \n",
        "                       mofid           0.049371    10  1.561249e-02  \n",
-       "            50         grouped_mof     0.034558     3  1.995185e-02  \n",
+       "            50         composition     0.054806     2  3.875357e-02  \n",
+       "                       grouped_mof     0.034558     3  1.995185e-02  \n",
        "                       mofid           0.067862    10  2.146000e-02  \n",
-       "            100        grouped_mof     0.061320     3  3.540297e-02  \n",
+       "            100        composition     0.168269     2  1.189840e-01  \n",
+       "                       grouped_mof     0.061320     3  3.540297e-02  \n",
        "                       mofid           0.108756     8  3.845106e-02  "
       ]
      },
-     "execution_count": 10,
+     "execution_count": 54,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -707,7 +1180,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 13,
+   "execution_count": 55,
    "metadata": {},
    "outputs": [
     {
@@ -979,7 +1452,7 @@
        "            100         0.024655  0.715013  0.101983    11  0.030749  "
       ]
      },
-     "execution_count": 13,
+     "execution_count": 55,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -990,12 +1463,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 14,
+   "execution_count": 56,
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 325x444.984 with 4 Axes>"
       ]
@@ -1038,7 +1511,7 @@
     "        grouped_res.loc[2, :, \"grouped_mof\"].index,\n",
     "        grouped_res.loc[2, :, \"grouped_mof\"][metric][\"mean\"],\n",
     "        marker=\"o\",\n",
-    "        label=\"GPT-grouped_mof\",\n",
+    "        label=\"GPT-grouped SMILES\",\n",
     "    )\n",
     "    ax[i].fill_between(\n",
     "        grouped_res.loc[2, :, \"grouped_mof\"].index,\n",
@@ -1049,6 +1522,22 @@
     "        alpha=0.2,\n",
     "    )\n",
     "\n",
+    "\n",
+    "    ax[i].plot(\n",
+    "        grouped_res.loc[2, :, \"composition\"].index,\n",
+    "        grouped_res.loc[2, :, \"composition\"][metric][\"mean\"],\n",
+    "        marker=\"o\",\n",
+    "        label=\"GPT-composition\",\n",
+    "    )\n",
+    "    ax[i].fill_between(\n",
+    "        grouped_res.loc[2, :, \"composition\"].index,\n",
+    "        grouped_res.loc[2, :, \"composition\"][metric][\"mean\"]\n",
+    "        - grouped_res.loc[2, :, \"composition\"][metric][\"sem\"],\n",
+    "        grouped_res.loc[2, :, \"composition\"][metric][\"mean\"]\n",
+    "        + grouped_res.loc[2, :, \"composition\"][metric][\"sem\"],\n",
+    "        alpha=0.2,\n",
+    "    )\n",
+    "\n",
     "    ax[i].plot(\n",
     "        grouped_baseline_res.loc[2, :].index,\n",
     "        grouped_baseline_res.loc[2, :][metric][\"mean\"],\n",
@@ -1064,6 +1553,21 @@
     "        alpha=0.2,\n",
     "    )\n",
     "\n",
+    "    ax[i].plot(\n",
+    "        extracted_crabnet_res_grouped.index,\n",
+    "        extracted_crabnet_res_grouped[metric][\"mean\"],\n",
+    "        marker=\"o\",\n",
+    "        label=\"CrabNet\",\n",
+    "    )\n",
+    "    ax[i].fill_between(\n",
+    "        extracted_crabnet_res_grouped.index,\n",
+    "        extracted_crabnet_res_grouped[metric][\"mean\"]\n",
+    "        - extracted_crabnet_res_grouped[metric][\"sem\"],\n",
+    "        extracted_crabnet_res_grouped[metric][\"mean\"]\n",
+    "        + extracted_crabnet_res_grouped[metric][\"sem\"],\n",
+    "        alpha=0.2,\n",
+    "    )\n",
+    "\n",
     "ax[-1].set_xlabel(\"training size\", labelpad=4)\n",
     "# ax[0].legend()\n",
     "\n",
@@ -1080,23 +1584,23 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 15,
+   "execution_count": 59,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "0.20209849818657477"
+       "0.23650683088985897"
       ]
      },
-     "execution_count": 15,
+     "execution_count": 59,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
     "find_learning_curve_intersection(\n",
-    "    grouped_res.loc[2, :, \"grouped_mof\"][\"f1_macro\"][\"mean\"].values[0],\n",
+    "    grouped_res.loc[2, :, \"composition\"][\"f1_macro\"][\"mean\"].values[0],\n",
     "    fit_learning_curve(\n",
     "        grouped_baseline_res.loc[2, :].index,\n",
     "        grouped_baseline_res.loc[2, :][\"f1_macro\"][\"mean\"],\n",
@@ -1106,12 +1610,38 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 16,
+   "execution_count": 60,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0.7644745271864758"
+      ]
+     },
+     "execution_count": 60,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "find_learning_curve_intersection(\n",
+    "    grouped_res.loc[2, :, \"composition\"][\"f1_macro\"][\"mean\"].values[0],\n",
+    "    fit_learning_curve(\n",
+    "        extracted_crabnet_res_grouped.index,\n",
+    "        extracted_crabnet_res_grouped[\"f1_macro\"][\"mean\"],\n",
+    "    )[0],\n",
+    ") / 10"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 58,
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 325x444.984 with 4 Axes>"
       ]
@@ -1154,7 +1684,7 @@
     "        grouped_res.loc[5, :, \"grouped_mof\"].index,\n",
     "        grouped_res.loc[5, :, \"grouped_mof\"][metric][\"mean\"],\n",
     "        marker=\"o\",\n",
-    "        label=\"GPT-grouped_mof\",\n",
+    "        label=\"GPT-grouped SMILES\",\n",
     "    )\n",
     "    ax[i].fill_between(\n",
     "        grouped_res.loc[5, :, \"grouped_mof\"].index,\n",
@@ -1165,6 +1695,22 @@
     "        alpha=0.5,\n",
     "    )\n",
     "\n",
+    "\n",
+    "    ax[i].plot(\n",
+    "        grouped_res.loc[5, :, \"composition\"].index,\n",
+    "        grouped_res.loc[5, :, \"composition\"][metric][\"mean\"],\n",
+    "        marker=\"o\",\n",
+    "        label=\"GPT-composition\",\n",
+    "    )\n",
+    "    ax[i].fill_between(\n",
+    "        grouped_res.loc[5, :, \"composition\"].index,\n",
+    "        grouped_res.loc[5, :, \"composition\"][metric][\"mean\"]\n",
+    "        - grouped_res.loc[5, :, \"composition\"][metric][\"sem\"],\n",
+    "        grouped_res.loc[5, :, \"composition\"][metric][\"mean\"]\n",
+    "        + grouped_res.loc[5, :, \"composition\"][metric][\"sem\"],\n",
+    "        alpha=0.2,\n",
+    "    )\n",
+    "\n",
     "    ax[i].plot(\n",
     "        grouped_baseline_res.loc[5, :].index,\n",
     "        grouped_baseline_res.loc[5, :][metric][\"mean\"],\n",
diff --git a/experiments/03_classification/hea_single_vs_multiphase/figures/lc_data/UnnamedModel_lc.csv b/experiments/03_classification/hea_single_vs_multiphase/figures/lc_data/UnnamedModel_lc.csv
index fe0fb95..a2e99d0 100644
--- a/experiments/03_classification/hea_single_vs_multiphase/figures/lc_data/UnnamedModel_lc.csv
+++ b/experiments/03_classification/hea_single_vs_multiphase/figures/lc_data/UnnamedModel_lc.csv
@@ -1,11 +1,10 @@
 epoch,train loss,val loss,swa
-0.0,0.5010746322572232,0.50279953032732,n
-19.0,0.21241923347115516,0.24707550331950187,y
-39.0,0.11000111536122859,0.10215804199688136,y
-59.0,0.06401308171916753,0.09953873388003558,y
-79.0,0.021701567856880644,0.05403862175170957,y
-99.0,0.0027796866786681785,0.0791785214762277,y
-119.0,0.0006305223373297578,0.05875224610801331,y
-139.0,0.0010831744907302322,0.05368950096610945,y
-159.0,0.022742998305309563,0.052877844674864706,y
-179.0,0.00034346225625401654,0.05775283866848602,y
+0.0,0.4995689865201712,0.4995375841856003,n
+19.0,0.17047575050964953,0.1598437564447522,y
+39.0,0.12348047170089557,0.12450795955955982,y
+59.0,0.13076505955250467,0.12591777821071445,y
+79.0,0.03770275096982516,0.06883882861820893,y
+99.0,0.021946366959206275,0.09410826648993016,y
+119.0,0.010828014728963664,0.07509480590330397,y
+139.0,3.693648945086936e-05,0.07204637811316865,y
+159.0,0.012985667371086062,0.0790960738643621,y
diff --git a/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db b/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db
index 327f90a..ffbc830 100644
Binary files a/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db and b/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db differ
diff --git a/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db-shm b/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db-shm
index fe9ac28..e9f3d0e 100644
Binary files a/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db-shm and b/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db-shm differ
diff --git a/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db-wal b/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db-wal
index 6376f92..6faeb44 100644
Binary files a/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db-wal and b/experiments/03_classification/hea_single_vs_multiphase/gptchemcache/cache.db-wal differ
diff --git a/experiments/03_classification/hea_single_vs_multiphase/hea_single_vs_multiphase_classifier.pdf b/experiments/03_classification/hea_single_vs_multiphase/hea_single_vs_multiphase_classifier.pdf
index ab62ac6..5b552b0 100644
Binary files a/experiments/03_classification/hea_single_vs_multiphase/hea_single_vs_multiphase_classifier.pdf and b/experiments/03_classification/hea_single_vs_multiphase/hea_single_vs_multiphase_classifier.pdf differ
diff --git a/experiments/03_classification/hea_single_vs_multiphase/plot_results.ipynb b/experiments/03_classification/hea_single_vs_multiphase/plot_results.ipynb
index 6fb26cd..c424c4c 100644
--- a/experiments/03_classification/hea_single_vs_multiphase/plot_results.ipynb
+++ b/experiments/03_classification/hea_single_vs_multiphase/plot_results.ipynb
@@ -2,9 +2,18 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 21,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "The autoreload extension is already loaded. To reload it, use:\n",
+      "  %reload_ext autoreload\n"
+     ]
+    }
+   ],
    "source": [
     "%load_ext autoreload\n",
     "%autoreload 2"
@@ -12,7 +21,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 22,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -52,7 +61,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": 23,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -61,7 +70,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 24,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -89,7 +98,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 25,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -98,7 +107,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": 26,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -111,7 +120,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 27,
    "metadata": {},
    "outputs": [
     {
@@ -258,154 +267,154 @@
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">stratified</th>\n",
        "      <th>10</th>\n",
-       "      <td>0.4932</td>\n",
-       "      <td>0.032554</td>\n",
-       "      <td>0.010294</td>\n",
-       "      <td>0.492937</td>\n",
-       "      <td>0.032661</td>\n",
-       "      <td>1.032825e-02</td>\n",
-       "      <td>0.4932</td>\n",
-       "      <td>0.032554</td>\n",
-       "      <td>0.010294</td>\n",
-       "      <td>-0.0136</td>\n",
-       "      <td>0.065107</td>\n",
-       "      <td>0.020589</td>\n",
+       "      <td>0.5144</td>\n",
+       "      <td>0.019340</td>\n",
+       "      <td>0.006116</td>\n",
+       "      <td>0.513791</td>\n",
+       "      <td>0.019551</td>\n",
+       "      <td>6.182487e-03</td>\n",
+       "      <td>0.5144</td>\n",
+       "      <td>0.019340</td>\n",
+       "      <td>0.006116</td>\n",
+       "      <td>0.0288</td>\n",
+       "      <td>0.038680</td>\n",
+       "      <td>0.012232</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>20</th>\n",
-       "      <td>0.5128</td>\n",
-       "      <td>0.031315</td>\n",
-       "      <td>0.009903</td>\n",
-       "      <td>0.511805</td>\n",
-       "      <td>0.031538</td>\n",
-       "      <td>9.973257e-03</td>\n",
-       "      <td>0.5128</td>\n",
-       "      <td>0.031315</td>\n",
-       "      <td>0.009903</td>\n",
-       "      <td>0.0256</td>\n",
-       "      <td>0.062630</td>\n",
-       "      <td>0.019805</td>\n",
+       "      <td>0.4976</td>\n",
+       "      <td>0.020239</td>\n",
+       "      <td>0.006400</td>\n",
+       "      <td>0.496893</td>\n",
+       "      <td>0.019600</td>\n",
+       "      <td>6.198017e-03</td>\n",
+       "      <td>0.4976</td>\n",
+       "      <td>0.020239</td>\n",
+       "      <td>0.006400</td>\n",
+       "      <td>-0.0048</td>\n",
+       "      <td>0.040477</td>\n",
+       "      <td>0.012800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>50</th>\n",
-       "      <td>0.4964</td>\n",
-       "      <td>0.037259</td>\n",
-       "      <td>0.011782</td>\n",
-       "      <td>0.495275</td>\n",
-       "      <td>0.037685</td>\n",
-       "      <td>1.191713e-02</td>\n",
-       "      <td>0.4964</td>\n",
-       "      <td>0.037259</td>\n",
-       "      <td>0.011782</td>\n",
-       "      <td>-0.0072</td>\n",
-       "      <td>0.074519</td>\n",
-       "      <td>0.023565</td>\n",
+       "      <td>0.4952</td>\n",
+       "      <td>0.033931</td>\n",
+       "      <td>0.010730</td>\n",
+       "      <td>0.494706</td>\n",
+       "      <td>0.033952</td>\n",
+       "      <td>1.073645e-02</td>\n",
+       "      <td>0.4952</td>\n",
+       "      <td>0.033931</td>\n",
+       "      <td>0.010730</td>\n",
+       "      <td>-0.0096</td>\n",
+       "      <td>0.067861</td>\n",
+       "      <td>0.021460</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>100</th>\n",
-       "      <td>0.4860</td>\n",
-       "      <td>0.028174</td>\n",
-       "      <td>0.008909</td>\n",
-       "      <td>0.485587</td>\n",
-       "      <td>0.028131</td>\n",
-       "      <td>8.895752e-03</td>\n",
-       "      <td>0.4860</td>\n",
-       "      <td>0.028174</td>\n",
-       "      <td>0.008909</td>\n",
-       "      <td>-0.0280</td>\n",
-       "      <td>0.056348</td>\n",
-       "      <td>0.017819</td>\n",
+       "      <td>0.5192</td>\n",
+       "      <td>0.029743</td>\n",
+       "      <td>0.009405</td>\n",
+       "      <td>0.518928</td>\n",
+       "      <td>0.029598</td>\n",
+       "      <td>9.359800e-03</td>\n",
+       "      <td>0.5192</td>\n",
+       "      <td>0.029743</td>\n",
+       "      <td>0.009405</td>\n",
+       "      <td>0.0384</td>\n",
+       "      <td>0.059485</td>\n",
+       "      <td>0.018811</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>200</th>\n",
-       "      <td>0.4848</td>\n",
-       "      <td>0.030451</td>\n",
-       "      <td>0.009630</td>\n",
-       "      <td>0.484391</td>\n",
-       "      <td>0.030445</td>\n",
-       "      <td>9.627647e-03</td>\n",
-       "      <td>0.4848</td>\n",
-       "      <td>0.030451</td>\n",
-       "      <td>0.009630</td>\n",
-       "      <td>-0.0304</td>\n",
-       "      <td>0.060903</td>\n",
-       "      <td>0.019259</td>\n",
+       "      <td>0.4964</td>\n",
+       "      <td>0.047082</td>\n",
+       "      <td>0.014889</td>\n",
+       "      <td>0.495584</td>\n",
+       "      <td>0.047405</td>\n",
+       "      <td>1.499085e-02</td>\n",
+       "      <td>0.4964</td>\n",
+       "      <td>0.047082</td>\n",
+       "      <td>0.014889</td>\n",
+       "      <td>-0.0072</td>\n",
+       "      <td>0.094164</td>\n",
+       "      <td>0.029777</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">uniform</th>\n",
        "      <th>10</th>\n",
-       "      <td>0.5100</td>\n",
-       "      <td>0.031340</td>\n",
-       "      <td>0.009911</td>\n",
-       "      <td>0.509835</td>\n",
-       "      <td>0.031344</td>\n",
-       "      <td>9.911956e-03</td>\n",
-       "      <td>0.5100</td>\n",
-       "      <td>0.031340</td>\n",
-       "      <td>0.009911</td>\n",
-       "      <td>0.0200</td>\n",
-       "      <td>0.062681</td>\n",
-       "      <td>0.019821</td>\n",
+       "      <td>0.4804</td>\n",
+       "      <td>0.029421</td>\n",
+       "      <td>0.009304</td>\n",
+       "      <td>0.479555</td>\n",
+       "      <td>0.029368</td>\n",
+       "      <td>9.286882e-03</td>\n",
+       "      <td>0.4804</td>\n",
+       "      <td>0.029421</td>\n",
+       "      <td>0.009304</td>\n",
+       "      <td>-0.0392</td>\n",
+       "      <td>0.058842</td>\n",
+       "      <td>0.018608</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>20</th>\n",
        "      <td>0.5092</td>\n",
-       "      <td>0.020832</td>\n",
-       "      <td>0.006588</td>\n",
-       "      <td>0.509046</td>\n",
-       "      <td>0.020823</td>\n",
-       "      <td>6.584701e-03</td>\n",
+       "      <td>0.032389</td>\n",
+       "      <td>0.010242</td>\n",
+       "      <td>0.508114</td>\n",
+       "      <td>0.032601</td>\n",
+       "      <td>1.030946e-02</td>\n",
        "      <td>0.5092</td>\n",
-       "      <td>0.020832</td>\n",
-       "      <td>0.006588</td>\n",
+       "      <td>0.032389</td>\n",
+       "      <td>0.010242</td>\n",
        "      <td>0.0184</td>\n",
-       "      <td>0.041663</td>\n",
-       "      <td>0.013175</td>\n",
+       "      <td>0.064779</td>\n",
+       "      <td>0.020485</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>50</th>\n",
-       "      <td>0.4980</td>\n",
-       "      <td>0.036673</td>\n",
-       "      <td>0.011597</td>\n",
-       "      <td>0.496695</td>\n",
-       "      <td>0.036573</td>\n",
-       "      <td>1.156533e-02</td>\n",
-       "      <td>0.4980</td>\n",
-       "      <td>0.036673</td>\n",
-       "      <td>0.011597</td>\n",
-       "      <td>-0.0040</td>\n",
-       "      <td>0.073345</td>\n",
-       "      <td>0.023194</td>\n",
+       "      <td>0.4964</td>\n",
+       "      <td>0.021287</td>\n",
+       "      <td>0.006732</td>\n",
+       "      <td>0.496098</td>\n",
+       "      <td>0.021196</td>\n",
+       "      <td>6.702712e-03</td>\n",
+       "      <td>0.4964</td>\n",
+       "      <td>0.021287</td>\n",
+       "      <td>0.006732</td>\n",
+       "      <td>-0.0072</td>\n",
+       "      <td>0.042575</td>\n",
+       "      <td>0.013463</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>100</th>\n",
-       "      <td>0.5096</td>\n",
-       "      <td>0.031844</td>\n",
-       "      <td>0.010070</td>\n",
-       "      <td>0.508945</td>\n",
-       "      <td>0.032052</td>\n",
-       "      <td>1.013582e-02</td>\n",
-       "      <td>0.5096</td>\n",
-       "      <td>0.031844</td>\n",
-       "      <td>0.010070</td>\n",
-       "      <td>0.0192</td>\n",
-       "      <td>0.063688</td>\n",
-       "      <td>0.020140</td>\n",
+       "      <td>0.5048</td>\n",
+       "      <td>0.023762</td>\n",
+       "      <td>0.007514</td>\n",
+       "      <td>0.504321</td>\n",
+       "      <td>0.023949</td>\n",
+       "      <td>7.573231e-03</td>\n",
+       "      <td>0.5048</td>\n",
+       "      <td>0.023762</td>\n",
+       "      <td>0.007514</td>\n",
+       "      <td>0.0096</td>\n",
+       "      <td>0.047524</td>\n",
+       "      <td>0.015028</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>200</th>\n",
-       "      <td>0.5032</td>\n",
-       "      <td>0.045168</td>\n",
-       "      <td>0.014283</td>\n",
-       "      <td>0.502787</td>\n",
-       "      <td>0.045174</td>\n",
-       "      <td>1.428541e-02</td>\n",
-       "      <td>0.5032</td>\n",
-       "      <td>0.045168</td>\n",
-       "      <td>0.014283</td>\n",
-       "      <td>0.0064</td>\n",
-       "      <td>0.090337</td>\n",
-       "      <td>0.028567</td>\n",
+       "      <td>0.4916</td>\n",
+       "      <td>0.025048</td>\n",
+       "      <td>0.007921</td>\n",
+       "      <td>0.491016</td>\n",
+       "      <td>0.024765</td>\n",
+       "      <td>7.831355e-03</td>\n",
+       "      <td>0.4916</td>\n",
+       "      <td>0.025048</td>\n",
+       "      <td>0.007921</td>\n",
+       "      <td>-0.0168</td>\n",
+       "      <td>0.050095</td>\n",
+       "      <td>0.015841</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
@@ -420,16 +429,16 @@
        "              50           0.5000  0.000000  0.000000  0.333333  0.000000   \n",
        "              100          0.5000  0.000000  0.000000  0.333333  0.000000   \n",
        "              200          0.5000  0.000000  0.000000  0.333333  0.000000   \n",
-       "stratified    10           0.4932  0.032554  0.010294  0.492937  0.032661   \n",
-       "              20           0.5128  0.031315  0.009903  0.511805  0.031538   \n",
-       "              50           0.4964  0.037259  0.011782  0.495275  0.037685   \n",
-       "              100          0.4860  0.028174  0.008909  0.485587  0.028131   \n",
-       "              200          0.4848  0.030451  0.009630  0.484391  0.030445   \n",
-       "uniform       10           0.5100  0.031340  0.009911  0.509835  0.031344   \n",
-       "              20           0.5092  0.020832  0.006588  0.509046  0.020823   \n",
-       "              50           0.4980  0.036673  0.011597  0.496695  0.036573   \n",
-       "              100          0.5096  0.031844  0.010070  0.508945  0.032052   \n",
-       "              200          0.5032  0.045168  0.014283  0.502787  0.045174   \n",
+       "stratified    10           0.5144  0.019340  0.006116  0.513791  0.019551   \n",
+       "              20           0.4976  0.020239  0.006400  0.496893  0.019600   \n",
+       "              50           0.4952  0.033931  0.010730  0.494706  0.033952   \n",
+       "              100          0.5192  0.029743  0.009405  0.518928  0.029598   \n",
+       "              200          0.4964  0.047082  0.014889  0.495584  0.047405   \n",
+       "uniform       10           0.4804  0.029421  0.009304  0.479555  0.029368   \n",
+       "              20           0.5092  0.032389  0.010242  0.508114  0.032601   \n",
+       "              50           0.4964  0.021287  0.006732  0.496098  0.021196   \n",
+       "              100          0.5048  0.023762  0.007514  0.504321  0.023949   \n",
+       "              200          0.4916  0.025048  0.007921  0.491016  0.024765   \n",
        "\n",
        "                                       f1_micro                       kappa  \\\n",
        "                                   sem     mean       std       sem    mean   \n",
@@ -439,16 +448,16 @@
        "              50          1.850372e-17   0.5000  0.000000  0.000000  0.0000   \n",
        "              100         1.850372e-17   0.5000  0.000000  0.000000  0.0000   \n",
        "              200         1.850372e-17   0.5000  0.000000  0.000000  0.0000   \n",
-       "stratified    10          1.032825e-02   0.4932  0.032554  0.010294 -0.0136   \n",
-       "              20          9.973257e-03   0.5128  0.031315  0.009903  0.0256   \n",
-       "              50          1.191713e-02   0.4964  0.037259  0.011782 -0.0072   \n",
-       "              100         8.895752e-03   0.4860  0.028174  0.008909 -0.0280   \n",
-       "              200         9.627647e-03   0.4848  0.030451  0.009630 -0.0304   \n",
-       "uniform       10          9.911956e-03   0.5100  0.031340  0.009911  0.0200   \n",
-       "              20          6.584701e-03   0.5092  0.020832  0.006588  0.0184   \n",
-       "              50          1.156533e-02   0.4980  0.036673  0.011597 -0.0040   \n",
-       "              100         1.013582e-02   0.5096  0.031844  0.010070  0.0192   \n",
-       "              200         1.428541e-02   0.5032  0.045168  0.014283  0.0064   \n",
+       "stratified    10          6.182487e-03   0.5144  0.019340  0.006116  0.0288   \n",
+       "              20          6.198017e-03   0.4976  0.020239  0.006400 -0.0048   \n",
+       "              50          1.073645e-02   0.4952  0.033931  0.010730 -0.0096   \n",
+       "              100         9.359800e-03   0.5192  0.029743  0.009405  0.0384   \n",
+       "              200         1.499085e-02   0.4964  0.047082  0.014889 -0.0072   \n",
+       "uniform       10          9.286882e-03   0.4804  0.029421  0.009304 -0.0392   \n",
+       "              20          1.030946e-02   0.5092  0.032389  0.010242  0.0184   \n",
+       "              50          6.702712e-03   0.4964  0.021287  0.006732 -0.0072   \n",
+       "              100         7.573231e-03   0.5048  0.023762  0.007514  0.0096   \n",
+       "              200         7.831355e-03   0.4916  0.025048  0.007921 -0.0168   \n",
        "\n",
        "                                              \n",
        "                               std       sem  \n",
@@ -458,19 +467,19 @@
        "              50          0.000000  0.000000  \n",
        "              100         0.000000  0.000000  \n",
        "              200         0.000000  0.000000  \n",
-       "stratified    10          0.065107  0.020589  \n",
-       "              20          0.062630  0.019805  \n",
-       "              50          0.074519  0.023565  \n",
-       "              100         0.056348  0.017819  \n",
-       "              200         0.060903  0.019259  \n",
-       "uniform       10          0.062681  0.019821  \n",
-       "              20          0.041663  0.013175  \n",
-       "              50          0.073345  0.023194  \n",
-       "              100         0.063688  0.020140  \n",
-       "              200         0.090337  0.028567  "
+       "stratified    10          0.038680  0.012232  \n",
+       "              20          0.040477  0.012800  \n",
+       "              50          0.067861  0.021460  \n",
+       "              100         0.059485  0.018811  \n",
+       "              200         0.094164  0.029777  \n",
+       "uniform       10          0.058842  0.018608  \n",
+       "              20          0.064779  0.020485  \n",
+       "              50          0.042575  0.013463  \n",
+       "              100         0.047524  0.015028  \n",
+       "              200         0.050095  0.015841  "
       ]
      },
-     "execution_count": 7,
+     "execution_count": 27,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -486,6 +495,84 @@
     "## Load the results"
    ]
   },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "### CrabNet"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 28,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "crabnet = glob('out-crabnet/*.pkl')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 29,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "50"
+      ]
+     },
+     "execution_count": 29,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "len(crabnet)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "extracted_crabnet_res = []\n",
+    "\n",
+    "for out in crabnet:\n",
+    "    out = load_pickle(out)\n",
+    "    res = {\n",
+    "        \"train_size\": out[\"train_size\"],\n",
+    "        \"frac_valid\": out[\"frac_valid\"],\n",
+    "        \"accuracy\": out[\"accuracy\"],\n",
+    "        \"f1_macro\": out[\"f1_macro\"],\n",
+    "        \"f1_micro\": out[\"f1_micro\"],\n",
+    "        \"kappa\": out[\"kappa\"],\n",
+    "    }\n",
+    "\n",
+    "    extracted_crabnet_res.append(res)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 31,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "extracted_crabnet_res = pd.DataFrame(extracted_crabnet_res)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 43,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "extracted_crabnet_res_grouped = extracted_crabnet_res.groupby(\"train_size\").agg(\n",
+    "    [\"mean\", \"std\", sem]\n",
+    ")"
+   ]
+  },
   {
    "cell_type": "markdown",
    "metadata": {},
@@ -495,7 +582,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 8,
+   "execution_count": 32,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -504,7 +591,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 33,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -526,7 +613,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 10,
+   "execution_count": 34,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -535,12 +622,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
+   "execution_count": 42,
    "metadata": {},
    "outputs": [],
    "source": [
     "extracted_automatminer_res_grouped = extracted_automatminer_res.groupby(\"train_size\").agg(\n",
-    "    [\"mean\", \"std\", \"sem\"]\n",
+    "    [\"mean\", \"std\", sem]\n",
     ")"
    ]
   },
@@ -553,7 +640,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 12,
+   "execution_count": 36,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -562,7 +649,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 13,
+   "execution_count": 37,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -571,7 +658,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 14,
+   "execution_count": 44,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -596,7 +683,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 15,
+   "execution_count": 45,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -605,7 +692,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 16,
+   "execution_count": 46,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -614,7 +701,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 17,
+   "execution_count": 47,
    "metadata": {},
    "outputs": [
     {
@@ -867,7 +954,7 @@
        "[5 rows x 24 columns]"
       ]
      },
-     "execution_count": 17,
+     "execution_count": 47,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -878,12 +965,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 18,
+   "execution_count": 54,
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 325x444.984 with 4 Axes>"
       ]
@@ -930,6 +1017,24 @@
     "    color=\"C1\",\n",
     ")\n",
     "\n",
+    "\n",
+    "ax[0].plot(\n",
+    "    extracted_crabnet_res_grouped.index,\n",
+    "    extracted_crabnet_res_grouped[\"accuracy\"][\"mean\"],\n",
+    "    marker=\"o\",\n",
+    "    label=\"CrabNet\",\n",
+    ")\n",
+    "\n",
+    "ax[0].fill_between(\n",
+    "    extracted_crabnet_res_grouped.index,\n",
+    "    extracted_crabnet_res_grouped[\"accuracy\"][\"mean\"]\n",
+    "    - extracted_crabnet_res_grouped[\"accuracy\"][\"sem\"],\n",
+    "    extracted_crabnet_res_grouped[\"accuracy\"][\"mean\"]\n",
+    "    + extracted_crabnet_res_grouped[\"accuracy\"][\"sem\"],\n",
+    "    alpha=0.2,\n",
+    "    color=\"C2\",\n",
+    ")\n",
+    "\n",
     "# add the dummy models\n",
     "for i, estimator in enumerate(estimators):\n",
     "    ax[0].plot(\n",
@@ -937,7 +1042,7 @@
     "        dummy_grouped.loc[estimator, :][\"accuracy\"][\"mean\"],\n",
     "        label=estimator.replace(\"_\", \" \"),\n",
     "        marker=\"o\",\n",
-    "        color=f\"C{i+2}\",\n",
+    "        color=f\"C{i+3}\",\n",
     "    )\n",
     "    ax[0].fill_between(\n",
     "        dummy_grouped.loc[estimator, :][\"accuracy\"][\"mean\"].index,\n",
@@ -946,7 +1051,7 @@
     "        dummy_grouped.loc[estimator, :][\"accuracy\"][\"mean\"]\n",
     "        + dummy_grouped.loc[estimator, :][\"accuracy\"][\"sem\"],\n",
     "        alpha=0.2,\n",
-    "        color=f\"C{i+2}\",\n",
+    "        color=f\"C{i+3}\",\n",
     "    )\n",
     "\n",
     "\n",
@@ -984,6 +1089,23 @@
     "    color=\"C1\",\n",
     ")\n",
     "\n",
+    "ax[1].plot(\n",
+    "    extracted_crabnet_res_grouped.index,\n",
+    "    extracted_crabnet_res_grouped[\"f1_macro\"][\"mean\"],\n",
+    "    marker=\"o\",\n",
+    "    label=\"CrabNet\",\n",
+    ")\n",
+    "\n",
+    "ax[1].fill_between(\n",
+    "    extracted_crabnet_res_grouped.index,\n",
+    "    extracted_crabnet_res_grouped[\"f1_macro\"][\"mean\"]\n",
+    "    - extracted_crabnet_res_grouped[\"f1_macro\"][\"sem\"],\n",
+    "    extracted_crabnet_res_grouped[\"f1_macro\"][\"mean\"]\n",
+    "    + extracted_crabnet_res_grouped[\"f1_macro\"][\"sem\"],\n",
+    "    alpha=0.2,\n",
+    "    color=\"C2\",\n",
+    ")\n",
+    "\n",
     "# add the dummy models\n",
     "for i, estimator in enumerate(estimators):\n",
     "    ax[1].plot(\n",
@@ -1038,6 +1160,23 @@
     "    color=\"C1\",\n",
     ")\n",
     "\n",
+    "ax[2].plot(\n",
+    "    extracted_crabnet_res_grouped.index,\n",
+    "    extracted_crabnet_res_grouped[\"f1_micro\"][\"mean\"],\n",
+    "    marker=\"o\",\n",
+    "    label=\"CrabNet\",\n",
+    ")\n",
+    "\n",
+    "ax[2].fill_between(\n",
+    "    extracted_crabnet_res_grouped.index,\n",
+    "    extracted_crabnet_res_grouped[\"f1_micro\"][\"mean\"]\n",
+    "    - extracted_crabnet_res_grouped[\"f1_micro\"][\"sem\"],\n",
+    "    extracted_crabnet_res_grouped[\"f1_micro\"][\"mean\"]\n",
+    "    + extracted_crabnet_res_grouped[\"f1_micro\"][\"sem\"],\n",
+    "    alpha=0.2,\n",
+    "    color=\"C2\",\n",
+    ")\n",
+    "\n",
     "# add the dummy models\n",
     "for i, estimator in enumerate(estimators):\n",
     "    ax[2].plot(\n",
@@ -1045,7 +1184,7 @@
     "        dummy_grouped.loc[estimator, :][\"f1_micro\"][\"mean\"],\n",
     "        label=estimator.replace(\"_\", \" \"),\n",
     "        marker=\"o\",\n",
-    "        color=f\"C{i+2}\",\n",
+    "        color=f\"C{i+3}\",\n",
     "    )\n",
     "    ax[2].fill_between(\n",
     "        dummy_grouped.loc[estimator, :][\"f1_micro\"][\"mean\"].index,\n",
@@ -1054,7 +1193,7 @@
     "        dummy_grouped.loc[estimator, :][\"f1_micro\"][\"mean\"]\n",
     "        + dummy_grouped.loc[estimator, :][\"f1_micro\"][\"sem\"],\n",
     "        alpha=0.2,\n",
-    "        color=f\"C{i+2}\",\n",
+    "        color=f\"C{i+3}\",\n",
     "    )\n",
     "\n",
     "\n",
@@ -1093,6 +1232,23 @@
     "    color=\"C1\",\n",
     ")\n",
     "\n",
+    "ax[3].plot(\n",
+    "    extracted_crabnet_res_grouped.index,\n",
+    "    extracted_crabnet_res_grouped[\"kappa\"][\"mean\"],\n",
+    "    marker=\"o\",\n",
+    "    label=\"CrabNet\",\n",
+    ")\n",
+    "\n",
+    "ax[3].fill_between(\n",
+    "    extracted_crabnet_res_grouped.index,\n",
+    "    extracted_crabnet_res_grouped[\"kappa\"][\"mean\"]\n",
+    "    - extracted_crabnet_res_grouped[\"kappa\"][\"sem\"],\n",
+    "    extracted_crabnet_res_grouped[\"kappa\"][\"mean\"]\n",
+    "    + extracted_crabnet_res_grouped[\"kappa\"][\"sem\"],\n",
+    "    alpha=0.2,\n",
+    "    color=\"C2\",\n",
+    ")\n",
+    "\n",
     "# add the dummy models\n",
     "for i, estimator in enumerate(estimators):\n",
     "    ax[3].plot(\n",
@@ -1100,7 +1256,7 @@
     "        dummy_grouped.loc[estimator, :][\"kappa\"][\"mean\"],\n",
     "        label=estimator.replace(\"_\", \" \"),\n",
     "        marker=\"o\",\n",
-    "        color=f\"C{i+2}\",\n",
+    "        color=f\"C{i+3}\",\n",
     "    )\n",
     "    ax[3].fill_between(\n",
     "        dummy_grouped.loc[estimator, :][\"kappa\"][\"mean\"].index,\n",
@@ -1109,7 +1265,7 @@
     "        dummy_grouped.loc[estimator, :][\"kappa\"][\"mean\"]\n",
     "        + dummy_grouped.loc[estimator, :][\"kappa\"][\"sem\"],\n",
     "        alpha=0.2,\n",
-    "        color=f\"C{i+2}\",\n",
+    "        color=f\"C{i+3}\",\n",
     "    )\n",
     "\n",
     "\n",
@@ -1155,6 +1311,32 @@
     ") / 10"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": 55,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "9.02343136381952"
+      ]
+     },
+     "execution_count": 55,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "find_learning_curve_intersection(\n",
+    "    extracted_res_grouped[\"f1_macro\"][\"mean\"].values[0],\n",
+    "    fit_learning_curve(\n",
+    "        extracted_crabnet_res_grouped.index,\n",
+    "        extracted_crabnet_res_grouped[\"f1_macro\"][\"mean\"],\n",
+    "    )[0],\n",
+    ") / 10"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": 20,
diff --git a/experiments/03_classification/mof_water_stability/mof_water_stability.pdf b/experiments/03_classification/mof_water_stability/mof_water_stability.pdf
index f64ef6e..4131c52 100644
Binary files a/experiments/03_classification/mof_water_stability/mof_water_stability.pdf and b/experiments/03_classification/mof_water_stability/mof_water_stability.pdf differ
diff --git a/experiments/03_classification/mof_water_stability/plot_results.ipynb b/experiments/03_classification/mof_water_stability/plot_results.ipynb
index b120486..bd264be 100644
--- a/experiments/03_classification/mof_water_stability/plot_results.ipynb
+++ b/experiments/03_classification/mof_water_stability/plot_results.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 18,
+   "execution_count": 16,
    "metadata": {},
    "outputs": [
     {
@@ -26,7 +26,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
+   "execution_count": 17,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -56,7 +56,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 20,
+   "execution_count": 18,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -65,7 +65,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": 19,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -74,31 +74,30 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 22,
+   "execution_count": 20,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "[{'train_size': 10,\n",
-       "  'predictions': (#159) [1,1,1,1,1,1,1,1,1,1...],\n",
-       "  'xgboost': {'accuracy': 0.7547169811320755,\n",
-       "   'acc_macro': 0.7547169811320755,\n",
-       "   'racc': 0.7547169811320755,\n",
+       "[{'train_size': 20,\n",
+       "  'predictions': (#149) [1,1,1,1,0,1,1,0,0,1...],\n",
+       "  'xgboost': {'accuracy': 0.7583892617449665,\n",
+       "   'acc_macro': 0.7583892617449665,\n",
+       "   'racc': 0.7583892617449665,\n",
        "   'kappa': 0.0,\n",
        "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.43010752688172044,\n",
-       "   'f1_micro': 0.7547169811320755,\n",
+       "   'f1_macro': 0.4312977099236641,\n",
+       "   'f1_micro': 0.7583892617449665,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#159) [0,1,0,1,1,1,1,1,1,1...],\n",
+       "   'all_y_true': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
        "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1]),\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),\n",
        "   'valid_indices': [0,\n",
        "    1,\n",
        "    2,\n",
@@ -247,35 +246,24 @@
        "    145,\n",
        "    146,\n",
        "    147,\n",
-       "    148,\n",
-       "    149,\n",
-       "    150,\n",
-       "    151,\n",
-       "    152,\n",
-       "    153,\n",
-       "    154,\n",
-       "    155,\n",
-       "    156,\n",
-       "    157,\n",
-       "    158],\n",
+       "    148],\n",
        "   'might_have_rounded_floats': False},\n",
-       "  'tabpfn': {'accuracy': 0.7421383647798742,\n",
-       "   'acc_macro': 0.7421383647798742,\n",
-       "   'racc': 0.7483090067639729,\n",
-       "   'kappa': -0.02451673738802471,\n",
+       "  'tabpfn': {'accuracy': 0.7114093959731543,\n",
+       "   'acc_macro': 0.7114093959731543,\n",
+       "   'racc': 0.6439349578847801,\n",
+       "   'kappa': 0.18950031625553418,\n",
        "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.4259927797833935,\n",
-       "   'f1_micro': 0.7421383647798742,\n",
+       "   'f1_macro': 0.5945193342193532,\n",
+       "   'f1_micro': 0.7114093959731543,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#159) [0,1,0,1,1,1,1,1,1,1...],\n",
-       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1]),\n",
+       "   'all_y_true': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
+       "          1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n",
+       "          1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n",
+       "          0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n",
+       "          1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1]),\n",
        "   'valid_indices': [0,\n",
        "    1,\n",
        "    2,\n",
@@ -424,17 +412,7 @@
        "    145,\n",
        "    146,\n",
        "    147,\n",
-       "    148,\n",
-       "    149,\n",
-       "    150,\n",
-       "    151,\n",
-       "    152,\n",
-       "    153,\n",
-       "    154,\n",
-       "    155,\n",
-       "    156,\n",
-       "    157,\n",
-       "    158],\n",
+       "    148],\n",
        "   'might_have_rounded_floats': False},\n",
        "  'base_model': 'ada',\n",
        "  'batch_size': None,\n",
@@ -442,24 +420,24 @@
        "  'learning_rate_multiplier': 0.02,\n",
        "  'run_name': None,\n",
        "  'wandb_sync': False,\n",
-       "  'outdir': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230209_063647',\n",
-       "  'train_filename': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230209_063647/train.jsonl',\n",
+       "  'outdir': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230211_112033',\n",
+       "  'train_filename': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230211_112033/train.jsonl',\n",
        "  'valid_filename': 'None',\n",
-       "  'model_name': 'ada:ft-lsmoepfl-2023-02-09-06-46-07',\n",
-       "  'ft_id': 'ft-x6AGPsq4XACC1TOQATnEucHc',\n",
-       "  'date': '20230209_074709',\n",
-       "  'train_file_id': 'file-v3WmebB5FW4kL4G4z82m3Drv',\n",
+       "  'model_name': 'ada:ft-lsmoepfl-2023-02-11-10-54-04',\n",
+       "  'ft_id': 'ft-O52nv3yqKb6WwnDUovcn5lbo',\n",
+       "  'date': '20230211_115443',\n",
+       "  'train_file_id': 'file-51CaniKxd25DJzBC58iwVFZH',\n",
        "  'valid_file_id': None,\n",
-       "  'accuracy': 0.7232704402515723,\n",
-       "  'acc_macro': 0.7232704402515723,\n",
-       "  'racc': 0.7386970452118191,\n",
-       "  'kappa': -0.05903723887375117,\n",
+       "  'accuracy': 0.6241610738255033,\n",
+       "  'acc_macro': 0.6241610738255033,\n",
+       "  'racc': 0.6196567722174676,\n",
+       "  'kappa': 0.01184272856466142,\n",
        "  'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "  'f1_macro': 0.4197080291970803,\n",
-       "  'f1_micro': 0.7232704402515723,\n",
+       "  'f1_macro': 0.505452821242295,\n",
+       "  'f1_micro': 0.6241610738255033,\n",
        "  'frac_valid': 1.0,\n",
-       "  'all_y_true': (#159) [0,1,0,1,1,1,1,1,1,1...],\n",
-       "  'all_y_pred': (#159) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "  'all_y_true': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "  'all_y_pred': (#149) [1,1,1,1,0,1,1,0,0,1...],\n",
        "  'valid_indices': [0,\n",
        "   1,\n",
        "   2,\n",
@@ -608,17 +586,7 @@
        "   145,\n",
        "   146,\n",
        "   147,\n",
-       "   148,\n",
-       "   149,\n",
-       "   150,\n",
-       "   151,\n",
-       "   152,\n",
-       "   153,\n",
-       "   154,\n",
-       "   155,\n",
-       "   156,\n",
-       "   157,\n",
-       "   158],\n",
+       "   148],\n",
        "  'might_have_rounded_floats': False},\n",
        " {'train_size': 10,\n",
        "  'predictions': (#159) [1,1,1,1,1,1,1,1,1,1...],\n",
@@ -630,7 +598,7 @@
        "   'f1_macro': 0.43010752688172044,\n",
        "   'f1_micro': 0.7547169811320755,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#159) [1,1,0,1,1,1,1,1,1,1...],\n",
+       "   'all_y_true': (#159) [0,1,0,1,1,1,1,1,1,1...],\n",
        "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
@@ -799,20 +767,20 @@
        "    157,\n",
        "    158],\n",
        "   'might_have_rounded_floats': False},\n",
-       "  'tabpfn': {'accuracy': 0.7547169811320755,\n",
-       "   'acc_macro': 0.7547169811320755,\n",
-       "   'racc': 0.7547169811320755,\n",
-       "   'kappa': 0.0,\n",
+       "  'tabpfn': {'accuracy': 0.7421383647798742,\n",
+       "   'acc_macro': 0.7421383647798742,\n",
+       "   'racc': 0.7483090067639729,\n",
+       "   'kappa': -0.02451673738802471,\n",
        "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.43010752688172044,\n",
-       "   'f1_micro': 0.7547169811320755,\n",
+       "   'f1_macro': 0.4259927797833935,\n",
+       "   'f1_micro': 0.7421383647798742,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#159) [1,1,0,1,1,1,1,1,1,1...],\n",
+       "   'all_y_true': (#159) [0,1,0,1,1,1,1,1,1,1...],\n",
        "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1]),\n",
@@ -982,23 +950,23 @@
        "  'learning_rate_multiplier': 0.02,\n",
        "  'run_name': None,\n",
        "  'wandb_sync': False,\n",
-       "  'outdir': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230208_070231',\n",
-       "  'train_filename': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230208_070231/train.jsonl',\n",
+       "  'outdir': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230209_063647',\n",
+       "  'train_filename': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230209_063647/train.jsonl',\n",
        "  'valid_filename': 'None',\n",
-       "  'model_name': 'ada:ft-lsmoepfl-2023-02-08-06-53-41',\n",
-       "  'ft_id': 'ft-lOPAd82dyyGaSJUXhyYxy0e5',\n",
-       "  'date': '20230208_075448',\n",
-       "  'train_file_id': 'file-XdGsu9hhdIca4UINMpLw3AO3',\n",
+       "  'model_name': 'ada:ft-lsmoepfl-2023-02-09-06-46-07',\n",
+       "  'ft_id': 'ft-x6AGPsq4XACC1TOQATnEucHc',\n",
+       "  'date': '20230209_074709',\n",
+       "  'train_file_id': 'file-v3WmebB5FW4kL4G4z82m3Drv',\n",
        "  'valid_file_id': None,\n",
-       "  'accuracy': 0.7295597484276729,\n",
-       "  'acc_macro': 0.7295597484276729,\n",
-       "  'racc': 0.7419010323958705,\n",
-       "  'kappa': -0.04781609195402338,\n",
+       "  'accuracy': 0.7232704402515723,\n",
+       "  'acc_macro': 0.7232704402515723,\n",
+       "  'racc': 0.7386970452118191,\n",
+       "  'kappa': -0.05903723887375117,\n",
        "  'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "  'f1_macro': 0.4218181818181818,\n",
-       "  'f1_micro': 0.7295597484276729,\n",
+       "  'f1_macro': 0.4197080291970803,\n",
+       "  'f1_micro': 0.7232704402515723,\n",
        "  'frac_valid': 1.0,\n",
-       "  'all_y_true': (#159) [1,1,0,1,1,1,1,1,1,1...],\n",
+       "  'all_y_true': (#159) [0,1,0,1,1,1,1,1,1,1...],\n",
        "  'all_y_pred': (#159) [1,1,1,1,1,1,1,1,1,1...],\n",
        "  'valid_indices': [0,\n",
        "   1,\n",
@@ -1160,104 +1128,25 @@
        "   157,\n",
        "   158],\n",
        "  'might_have_rounded_floats': False},\n",
-       " {'train_size': 100,\n",
-       "  'predictions': (#69) [1,1,1,1,1,0,1,1,1,1...],\n",
-       "  'xgboost': {'accuracy': 0.7681159420289855,\n",
-       "   'acc_macro': 0.7681159420289855,\n",
-       "   'racc': 0.6286494433942449,\n",
-       "   'kappa': 0.37556561085972845,\n",
-       "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.6877828054298643,\n",
-       "   'f1_micro': 0.7681159420289855,\n",
-       "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#69) [1,1,0,1,1,1,1,1,0,1...],\n",
-       "   'all_y_pred': array([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
-       "          0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
-       "          1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
-       "          1, 1, 0]),\n",
-       "   'valid_indices': [0,\n",
-       "    1,\n",
-       "    2,\n",
-       "    3,\n",
-       "    4,\n",
-       "    5,\n",
-       "    6,\n",
-       "    7,\n",
-       "    8,\n",
-       "    9,\n",
-       "    10,\n",
-       "    11,\n",
-       "    12,\n",
-       "    13,\n",
-       "    14,\n",
-       "    15,\n",
-       "    16,\n",
-       "    17,\n",
-       "    18,\n",
-       "    19,\n",
-       "    20,\n",
-       "    21,\n",
-       "    22,\n",
-       "    23,\n",
-       "    24,\n",
-       "    25,\n",
-       "    26,\n",
-       "    27,\n",
-       "    28,\n",
-       "    29,\n",
-       "    30,\n",
-       "    31,\n",
-       "    32,\n",
-       "    33,\n",
-       "    34,\n",
-       "    35,\n",
-       "    36,\n",
-       "    37,\n",
-       "    38,\n",
-       "    39,\n",
-       "    40,\n",
-       "    41,\n",
-       "    42,\n",
-       "    43,\n",
-       "    44,\n",
-       "    45,\n",
-       "    46,\n",
-       "    47,\n",
-       "    48,\n",
-       "    49,\n",
-       "    50,\n",
-       "    51,\n",
-       "    52,\n",
-       "    53,\n",
-       "    54,\n",
-       "    55,\n",
-       "    56,\n",
-       "    57,\n",
-       "    58,\n",
-       "    59,\n",
-       "    60,\n",
-       "    61,\n",
-       "    62,\n",
-       "    63,\n",
-       "    64,\n",
-       "    65,\n",
-       "    66,\n",
-       "    67,\n",
-       "    68],\n",
-       "   'might_have_rounded_floats': False},\n",
-       "  'tabpfn': {'accuracy': 0.855072463768116,\n",
-       "   'acc_macro': 0.855072463768116,\n",
-       "   'racc': 0.6727578239865575,\n",
-       "   'kappa': 0.5571245186136072,\n",
+       " {'train_size': 10,\n",
+       "  'predictions': (#159) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "  'xgboost': {'accuracy': 0.7547169811320755,\n",
+       "   'acc_macro': 0.7547169811320755,\n",
+       "   'racc': 0.7547169811320755,\n",
+       "   'kappa': 0.0,\n",
        "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.775974025974026,\n",
-       "   'f1_micro': 0.855072463768116,\n",
+       "   'f1_macro': 0.43010752688172044,\n",
+       "   'f1_micro': 0.7547169811320755,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#69) [1,1,0,1,1,1,1,1,0,1...],\n",
-       "   'all_y_pred': array([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
-       "          0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
-       "          1, 1, 1]),\n",
+       "   'all_y_true': (#159) [1,1,0,1,1,1,1,1,1,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1]),\n",
        "   'valid_indices': [0,\n",
        "    1,\n",
        "    2,\n",
@@ -1326,32 +1215,1619 @@
        "    65,\n",
        "    66,\n",
        "    67,\n",
-       "    68],\n",
-       "   'might_have_rounded_floats': False},\n",
-       "  'base_model': 'ada',\n",
-       "  'batch_size': None,\n",
-       "  'n_epochs': 8,\n",
+       "    68,\n",
+       "    69,\n",
+       "    70,\n",
+       "    71,\n",
+       "    72,\n",
+       "    73,\n",
+       "    74,\n",
+       "    75,\n",
+       "    76,\n",
+       "    77,\n",
+       "    78,\n",
+       "    79,\n",
+       "    80,\n",
+       "    81,\n",
+       "    82,\n",
+       "    83,\n",
+       "    84,\n",
+       "    85,\n",
+       "    86,\n",
+       "    87,\n",
+       "    88,\n",
+       "    89,\n",
+       "    90,\n",
+       "    91,\n",
+       "    92,\n",
+       "    93,\n",
+       "    94,\n",
+       "    95,\n",
+       "    96,\n",
+       "    97,\n",
+       "    98,\n",
+       "    99,\n",
+       "    100,\n",
+       "    101,\n",
+       "    102,\n",
+       "    103,\n",
+       "    104,\n",
+       "    105,\n",
+       "    106,\n",
+       "    107,\n",
+       "    108,\n",
+       "    109,\n",
+       "    110,\n",
+       "    111,\n",
+       "    112,\n",
+       "    113,\n",
+       "    114,\n",
+       "    115,\n",
+       "    116,\n",
+       "    117,\n",
+       "    118,\n",
+       "    119,\n",
+       "    120,\n",
+       "    121,\n",
+       "    122,\n",
+       "    123,\n",
+       "    124,\n",
+       "    125,\n",
+       "    126,\n",
+       "    127,\n",
+       "    128,\n",
+       "    129,\n",
+       "    130,\n",
+       "    131,\n",
+       "    132,\n",
+       "    133,\n",
+       "    134,\n",
+       "    135,\n",
+       "    136,\n",
+       "    137,\n",
+       "    138,\n",
+       "    139,\n",
+       "    140,\n",
+       "    141,\n",
+       "    142,\n",
+       "    143,\n",
+       "    144,\n",
+       "    145,\n",
+       "    146,\n",
+       "    147,\n",
+       "    148,\n",
+       "    149,\n",
+       "    150,\n",
+       "    151,\n",
+       "    152,\n",
+       "    153,\n",
+       "    154,\n",
+       "    155,\n",
+       "    156,\n",
+       "    157,\n",
+       "    158],\n",
+       "   'might_have_rounded_floats': False},\n",
+       "  'tabpfn': {'accuracy': 0.7547169811320755,\n",
+       "   'acc_macro': 0.7547169811320755,\n",
+       "   'racc': 0.7547169811320755,\n",
+       "   'kappa': 0.0,\n",
+       "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
+       "   'f1_macro': 0.43010752688172044,\n",
+       "   'f1_micro': 0.7547169811320755,\n",
+       "   'frac_valid': 1.0,\n",
+       "   'all_y_true': (#159) [1,1,0,1,1,1,1,1,1,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1]),\n",
+       "   'valid_indices': [0,\n",
+       "    1,\n",
+       "    2,\n",
+       "    3,\n",
+       "    4,\n",
+       "    5,\n",
+       "    6,\n",
+       "    7,\n",
+       "    8,\n",
+       "    9,\n",
+       "    10,\n",
+       "    11,\n",
+       "    12,\n",
+       "    13,\n",
+       "    14,\n",
+       "    15,\n",
+       "    16,\n",
+       "    17,\n",
+       "    18,\n",
+       "    19,\n",
+       "    20,\n",
+       "    21,\n",
+       "    22,\n",
+       "    23,\n",
+       "    24,\n",
+       "    25,\n",
+       "    26,\n",
+       "    27,\n",
+       "    28,\n",
+       "    29,\n",
+       "    30,\n",
+       "    31,\n",
+       "    32,\n",
+       "    33,\n",
+       "    34,\n",
+       "    35,\n",
+       "    36,\n",
+       "    37,\n",
+       "    38,\n",
+       "    39,\n",
+       "    40,\n",
+       "    41,\n",
+       "    42,\n",
+       "    43,\n",
+       "    44,\n",
+       "    45,\n",
+       "    46,\n",
+       "    47,\n",
+       "    48,\n",
+       "    49,\n",
+       "    50,\n",
+       "    51,\n",
+       "    52,\n",
+       "    53,\n",
+       "    54,\n",
+       "    55,\n",
+       "    56,\n",
+       "    57,\n",
+       "    58,\n",
+       "    59,\n",
+       "    60,\n",
+       "    61,\n",
+       "    62,\n",
+       "    63,\n",
+       "    64,\n",
+       "    65,\n",
+       "    66,\n",
+       "    67,\n",
+       "    68,\n",
+       "    69,\n",
+       "    70,\n",
+       "    71,\n",
+       "    72,\n",
+       "    73,\n",
+       "    74,\n",
+       "    75,\n",
+       "    76,\n",
+       "    77,\n",
+       "    78,\n",
+       "    79,\n",
+       "    80,\n",
+       "    81,\n",
+       "    82,\n",
+       "    83,\n",
+       "    84,\n",
+       "    85,\n",
+       "    86,\n",
+       "    87,\n",
+       "    88,\n",
+       "    89,\n",
+       "    90,\n",
+       "    91,\n",
+       "    92,\n",
+       "    93,\n",
+       "    94,\n",
+       "    95,\n",
+       "    96,\n",
+       "    97,\n",
+       "    98,\n",
+       "    99,\n",
+       "    100,\n",
+       "    101,\n",
+       "    102,\n",
+       "    103,\n",
+       "    104,\n",
+       "    105,\n",
+       "    106,\n",
+       "    107,\n",
+       "    108,\n",
+       "    109,\n",
+       "    110,\n",
+       "    111,\n",
+       "    112,\n",
+       "    113,\n",
+       "    114,\n",
+       "    115,\n",
+       "    116,\n",
+       "    117,\n",
+       "    118,\n",
+       "    119,\n",
+       "    120,\n",
+       "    121,\n",
+       "    122,\n",
+       "    123,\n",
+       "    124,\n",
+       "    125,\n",
+       "    126,\n",
+       "    127,\n",
+       "    128,\n",
+       "    129,\n",
+       "    130,\n",
+       "    131,\n",
+       "    132,\n",
+       "    133,\n",
+       "    134,\n",
+       "    135,\n",
+       "    136,\n",
+       "    137,\n",
+       "    138,\n",
+       "    139,\n",
+       "    140,\n",
+       "    141,\n",
+       "    142,\n",
+       "    143,\n",
+       "    144,\n",
+       "    145,\n",
+       "    146,\n",
+       "    147,\n",
+       "    148,\n",
+       "    149,\n",
+       "    150,\n",
+       "    151,\n",
+       "    152,\n",
+       "    153,\n",
+       "    154,\n",
+       "    155,\n",
+       "    156,\n",
+       "    157,\n",
+       "    158],\n",
+       "   'might_have_rounded_floats': False},\n",
+       "  'base_model': 'ada',\n",
+       "  'batch_size': None,\n",
+       "  'n_epochs': 8,\n",
+       "  'learning_rate_multiplier': 0.02,\n",
+       "  'run_name': None,\n",
+       "  'wandb_sync': False,\n",
+       "  'outdir': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230208_070231',\n",
+       "  'train_filename': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230208_070231/train.jsonl',\n",
+       "  'valid_filename': 'None',\n",
+       "  'model_name': 'ada:ft-lsmoepfl-2023-02-08-06-53-41',\n",
+       "  'ft_id': 'ft-lOPAd82dyyGaSJUXhyYxy0e5',\n",
+       "  'date': '20230208_075448',\n",
+       "  'train_file_id': 'file-XdGsu9hhdIca4UINMpLw3AO3',\n",
+       "  'valid_file_id': None,\n",
+       "  'accuracy': 0.7295597484276729,\n",
+       "  'acc_macro': 0.7295597484276729,\n",
+       "  'racc': 0.7419010323958705,\n",
+       "  'kappa': -0.04781609195402338,\n",
+       "  'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
+       "  'f1_macro': 0.4218181818181818,\n",
+       "  'f1_micro': 0.7295597484276729,\n",
+       "  'frac_valid': 1.0,\n",
+       "  'all_y_true': (#159) [1,1,0,1,1,1,1,1,1,1...],\n",
+       "  'all_y_pred': (#159) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "  'valid_indices': [0,\n",
+       "   1,\n",
+       "   2,\n",
+       "   3,\n",
+       "   4,\n",
+       "   5,\n",
+       "   6,\n",
+       "   7,\n",
+       "   8,\n",
+       "   9,\n",
+       "   10,\n",
+       "   11,\n",
+       "   12,\n",
+       "   13,\n",
+       "   14,\n",
+       "   15,\n",
+       "   16,\n",
+       "   17,\n",
+       "   18,\n",
+       "   19,\n",
+       "   20,\n",
+       "   21,\n",
+       "   22,\n",
+       "   23,\n",
+       "   24,\n",
+       "   25,\n",
+       "   26,\n",
+       "   27,\n",
+       "   28,\n",
+       "   29,\n",
+       "   30,\n",
+       "   31,\n",
+       "   32,\n",
+       "   33,\n",
+       "   34,\n",
+       "   35,\n",
+       "   36,\n",
+       "   37,\n",
+       "   38,\n",
+       "   39,\n",
+       "   40,\n",
+       "   41,\n",
+       "   42,\n",
+       "   43,\n",
+       "   44,\n",
+       "   45,\n",
+       "   46,\n",
+       "   47,\n",
+       "   48,\n",
+       "   49,\n",
+       "   50,\n",
+       "   51,\n",
+       "   52,\n",
+       "   53,\n",
+       "   54,\n",
+       "   55,\n",
+       "   56,\n",
+       "   57,\n",
+       "   58,\n",
+       "   59,\n",
+       "   60,\n",
+       "   61,\n",
+       "   62,\n",
+       "   63,\n",
+       "   64,\n",
+       "   65,\n",
+       "   66,\n",
+       "   67,\n",
+       "   68,\n",
+       "   69,\n",
+       "   70,\n",
+       "   71,\n",
+       "   72,\n",
+       "   73,\n",
+       "   74,\n",
+       "   75,\n",
+       "   76,\n",
+       "   77,\n",
+       "   78,\n",
+       "   79,\n",
+       "   80,\n",
+       "   81,\n",
+       "   82,\n",
+       "   83,\n",
+       "   84,\n",
+       "   85,\n",
+       "   86,\n",
+       "   87,\n",
+       "   88,\n",
+       "   89,\n",
+       "   90,\n",
+       "   91,\n",
+       "   92,\n",
+       "   93,\n",
+       "   94,\n",
+       "   95,\n",
+       "   96,\n",
+       "   97,\n",
+       "   98,\n",
+       "   99,\n",
+       "   100,\n",
+       "   101,\n",
+       "   102,\n",
+       "   103,\n",
+       "   104,\n",
+       "   105,\n",
+       "   106,\n",
+       "   107,\n",
+       "   108,\n",
+       "   109,\n",
+       "   110,\n",
+       "   111,\n",
+       "   112,\n",
+       "   113,\n",
+       "   114,\n",
+       "   115,\n",
+       "   116,\n",
+       "   117,\n",
+       "   118,\n",
+       "   119,\n",
+       "   120,\n",
+       "   121,\n",
+       "   122,\n",
+       "   123,\n",
+       "   124,\n",
+       "   125,\n",
+       "   126,\n",
+       "   127,\n",
+       "   128,\n",
+       "   129,\n",
+       "   130,\n",
+       "   131,\n",
+       "   132,\n",
+       "   133,\n",
+       "   134,\n",
+       "   135,\n",
+       "   136,\n",
+       "   137,\n",
+       "   138,\n",
+       "   139,\n",
+       "   140,\n",
+       "   141,\n",
+       "   142,\n",
+       "   143,\n",
+       "   144,\n",
+       "   145,\n",
+       "   146,\n",
+       "   147,\n",
+       "   148,\n",
+       "   149,\n",
+       "   150,\n",
+       "   151,\n",
+       "   152,\n",
+       "   153,\n",
+       "   154,\n",
+       "   155,\n",
+       "   156,\n",
+       "   157,\n",
+       "   158],\n",
+       "  'might_have_rounded_floats': False},\n",
+       " {'train_size': 10,\n",
+       "  'predictions': (#159) [1,1,1,1,1,1,1,0,1,1...],\n",
+       "  'xgboost': {'accuracy': 0.7547169811320755,\n",
+       "   'acc_macro': 0.7547169811320755,\n",
+       "   'racc': 0.7547169811320755,\n",
+       "   'kappa': 0.0,\n",
+       "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
+       "   'f1_macro': 0.43010752688172044,\n",
+       "   'f1_micro': 0.7547169811320755,\n",
+       "   'frac_valid': 1.0,\n",
+       "   'all_y_true': (#159) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1]),\n",
+       "   'valid_indices': [0,\n",
+       "    1,\n",
+       "    2,\n",
+       "    3,\n",
+       "    4,\n",
+       "    5,\n",
+       "    6,\n",
+       "    7,\n",
+       "    8,\n",
+       "    9,\n",
+       "    10,\n",
+       "    11,\n",
+       "    12,\n",
+       "    13,\n",
+       "    14,\n",
+       "    15,\n",
+       "    16,\n",
+       "    17,\n",
+       "    18,\n",
+       "    19,\n",
+       "    20,\n",
+       "    21,\n",
+       "    22,\n",
+       "    23,\n",
+       "    24,\n",
+       "    25,\n",
+       "    26,\n",
+       "    27,\n",
+       "    28,\n",
+       "    29,\n",
+       "    30,\n",
+       "    31,\n",
+       "    32,\n",
+       "    33,\n",
+       "    34,\n",
+       "    35,\n",
+       "    36,\n",
+       "    37,\n",
+       "    38,\n",
+       "    39,\n",
+       "    40,\n",
+       "    41,\n",
+       "    42,\n",
+       "    43,\n",
+       "    44,\n",
+       "    45,\n",
+       "    46,\n",
+       "    47,\n",
+       "    48,\n",
+       "    49,\n",
+       "    50,\n",
+       "    51,\n",
+       "    52,\n",
+       "    53,\n",
+       "    54,\n",
+       "    55,\n",
+       "    56,\n",
+       "    57,\n",
+       "    58,\n",
+       "    59,\n",
+       "    60,\n",
+       "    61,\n",
+       "    62,\n",
+       "    63,\n",
+       "    64,\n",
+       "    65,\n",
+       "    66,\n",
+       "    67,\n",
+       "    68,\n",
+       "    69,\n",
+       "    70,\n",
+       "    71,\n",
+       "    72,\n",
+       "    73,\n",
+       "    74,\n",
+       "    75,\n",
+       "    76,\n",
+       "    77,\n",
+       "    78,\n",
+       "    79,\n",
+       "    80,\n",
+       "    81,\n",
+       "    82,\n",
+       "    83,\n",
+       "    84,\n",
+       "    85,\n",
+       "    86,\n",
+       "    87,\n",
+       "    88,\n",
+       "    89,\n",
+       "    90,\n",
+       "    91,\n",
+       "    92,\n",
+       "    93,\n",
+       "    94,\n",
+       "    95,\n",
+       "    96,\n",
+       "    97,\n",
+       "    98,\n",
+       "    99,\n",
+       "    100,\n",
+       "    101,\n",
+       "    102,\n",
+       "    103,\n",
+       "    104,\n",
+       "    105,\n",
+       "    106,\n",
+       "    107,\n",
+       "    108,\n",
+       "    109,\n",
+       "    110,\n",
+       "    111,\n",
+       "    112,\n",
+       "    113,\n",
+       "    114,\n",
+       "    115,\n",
+       "    116,\n",
+       "    117,\n",
+       "    118,\n",
+       "    119,\n",
+       "    120,\n",
+       "    121,\n",
+       "    122,\n",
+       "    123,\n",
+       "    124,\n",
+       "    125,\n",
+       "    126,\n",
+       "    127,\n",
+       "    128,\n",
+       "    129,\n",
+       "    130,\n",
+       "    131,\n",
+       "    132,\n",
+       "    133,\n",
+       "    134,\n",
+       "    135,\n",
+       "    136,\n",
+       "    137,\n",
+       "    138,\n",
+       "    139,\n",
+       "    140,\n",
+       "    141,\n",
+       "    142,\n",
+       "    143,\n",
+       "    144,\n",
+       "    145,\n",
+       "    146,\n",
+       "    147,\n",
+       "    148,\n",
+       "    149,\n",
+       "    150,\n",
+       "    151,\n",
+       "    152,\n",
+       "    153,\n",
+       "    154,\n",
+       "    155,\n",
+       "    156,\n",
+       "    157,\n",
+       "    158],\n",
+       "   'might_have_rounded_floats': False},\n",
+       "  'tabpfn': {'accuracy': 0.7735849056603774,\n",
+       "   'acc_macro': 0.7735849056603774,\n",
+       "   'racc': 0.7451050195799217,\n",
+       "   'kappa': 0.11173184357541911,\n",
+       "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
+       "   'f1_macro': 0.5062111801242236,\n",
+       "   'f1_micro': 0.7735849056603774,\n",
+       "   'frac_valid': 1.0,\n",
+       "   'all_y_true': (#159) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1]),\n",
+       "   'valid_indices': [0,\n",
+       "    1,\n",
+       "    2,\n",
+       "    3,\n",
+       "    4,\n",
+       "    5,\n",
+       "    6,\n",
+       "    7,\n",
+       "    8,\n",
+       "    9,\n",
+       "    10,\n",
+       "    11,\n",
+       "    12,\n",
+       "    13,\n",
+       "    14,\n",
+       "    15,\n",
+       "    16,\n",
+       "    17,\n",
+       "    18,\n",
+       "    19,\n",
+       "    20,\n",
+       "    21,\n",
+       "    22,\n",
+       "    23,\n",
+       "    24,\n",
+       "    25,\n",
+       "    26,\n",
+       "    27,\n",
+       "    28,\n",
+       "    29,\n",
+       "    30,\n",
+       "    31,\n",
+       "    32,\n",
+       "    33,\n",
+       "    34,\n",
+       "    35,\n",
+       "    36,\n",
+       "    37,\n",
+       "    38,\n",
+       "    39,\n",
+       "    40,\n",
+       "    41,\n",
+       "    42,\n",
+       "    43,\n",
+       "    44,\n",
+       "    45,\n",
+       "    46,\n",
+       "    47,\n",
+       "    48,\n",
+       "    49,\n",
+       "    50,\n",
+       "    51,\n",
+       "    52,\n",
+       "    53,\n",
+       "    54,\n",
+       "    55,\n",
+       "    56,\n",
+       "    57,\n",
+       "    58,\n",
+       "    59,\n",
+       "    60,\n",
+       "    61,\n",
+       "    62,\n",
+       "    63,\n",
+       "    64,\n",
+       "    65,\n",
+       "    66,\n",
+       "    67,\n",
+       "    68,\n",
+       "    69,\n",
+       "    70,\n",
+       "    71,\n",
+       "    72,\n",
+       "    73,\n",
+       "    74,\n",
+       "    75,\n",
+       "    76,\n",
+       "    77,\n",
+       "    78,\n",
+       "    79,\n",
+       "    80,\n",
+       "    81,\n",
+       "    82,\n",
+       "    83,\n",
+       "    84,\n",
+       "    85,\n",
+       "    86,\n",
+       "    87,\n",
+       "    88,\n",
+       "    89,\n",
+       "    90,\n",
+       "    91,\n",
+       "    92,\n",
+       "    93,\n",
+       "    94,\n",
+       "    95,\n",
+       "    96,\n",
+       "    97,\n",
+       "    98,\n",
+       "    99,\n",
+       "    100,\n",
+       "    101,\n",
+       "    102,\n",
+       "    103,\n",
+       "    104,\n",
+       "    105,\n",
+       "    106,\n",
+       "    107,\n",
+       "    108,\n",
+       "    109,\n",
+       "    110,\n",
+       "    111,\n",
+       "    112,\n",
+       "    113,\n",
+       "    114,\n",
+       "    115,\n",
+       "    116,\n",
+       "    117,\n",
+       "    118,\n",
+       "    119,\n",
+       "    120,\n",
+       "    121,\n",
+       "    122,\n",
+       "    123,\n",
+       "    124,\n",
+       "    125,\n",
+       "    126,\n",
+       "    127,\n",
+       "    128,\n",
+       "    129,\n",
+       "    130,\n",
+       "    131,\n",
+       "    132,\n",
+       "    133,\n",
+       "    134,\n",
+       "    135,\n",
+       "    136,\n",
+       "    137,\n",
+       "    138,\n",
+       "    139,\n",
+       "    140,\n",
+       "    141,\n",
+       "    142,\n",
+       "    143,\n",
+       "    144,\n",
+       "    145,\n",
+       "    146,\n",
+       "    147,\n",
+       "    148,\n",
+       "    149,\n",
+       "    150,\n",
+       "    151,\n",
+       "    152,\n",
+       "    153,\n",
+       "    154,\n",
+       "    155,\n",
+       "    156,\n",
+       "    157,\n",
+       "    158],\n",
+       "   'might_have_rounded_floats': False},\n",
+       "  'base_model': 'ada',\n",
+       "  'batch_size': None,\n",
+       "  'n_epochs': 8,\n",
+       "  'learning_rate_multiplier': 0.02,\n",
+       "  'run_name': None,\n",
+       "  'wandb_sync': False,\n",
+       "  'outdir': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230211_104423',\n",
+       "  'train_filename': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230211_104423/train.jsonl',\n",
+       "  'valid_filename': 'None',\n",
+       "  'model_name': 'ada:ft-lsmoepfl-2023-02-11-10-16-45',\n",
+       "  'ft_id': 'ft-BD0bwEalByTMF0kDZ49JbTKy',\n",
+       "  'date': '20230211_111834',\n",
+       "  'train_file_id': 'file-Kt1SRKTOLAx1OhbzPyznBY3I',\n",
+       "  'valid_file_id': None,\n",
+       "  'accuracy': 0.7358490566037735,\n",
+       "  'acc_macro': 0.7358490566037735,\n",
+       "  'racc': 0.7322890708437166,\n",
+       "  'kappa': 0.013297872340425287,\n",
+       "  'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
+       "  'f1_macro': 0.46627237851662406,\n",
+       "  'f1_micro': 0.7358490566037735,\n",
+       "  'frac_valid': 1.0,\n",
+       "  'all_y_true': (#159) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "  'all_y_pred': (#159) [1,1,1,1,1,1,1,0,1,1...],\n",
+       "  'valid_indices': [0,\n",
+       "   1,\n",
+       "   2,\n",
+       "   3,\n",
+       "   4,\n",
+       "   5,\n",
+       "   6,\n",
+       "   7,\n",
+       "   8,\n",
+       "   9,\n",
+       "   10,\n",
+       "   11,\n",
+       "   12,\n",
+       "   13,\n",
+       "   14,\n",
+       "   15,\n",
+       "   16,\n",
+       "   17,\n",
+       "   18,\n",
+       "   19,\n",
+       "   20,\n",
+       "   21,\n",
+       "   22,\n",
+       "   23,\n",
+       "   24,\n",
+       "   25,\n",
+       "   26,\n",
+       "   27,\n",
+       "   28,\n",
+       "   29,\n",
+       "   30,\n",
+       "   31,\n",
+       "   32,\n",
+       "   33,\n",
+       "   34,\n",
+       "   35,\n",
+       "   36,\n",
+       "   37,\n",
+       "   38,\n",
+       "   39,\n",
+       "   40,\n",
+       "   41,\n",
+       "   42,\n",
+       "   43,\n",
+       "   44,\n",
+       "   45,\n",
+       "   46,\n",
+       "   47,\n",
+       "   48,\n",
+       "   49,\n",
+       "   50,\n",
+       "   51,\n",
+       "   52,\n",
+       "   53,\n",
+       "   54,\n",
+       "   55,\n",
+       "   56,\n",
+       "   57,\n",
+       "   58,\n",
+       "   59,\n",
+       "   60,\n",
+       "   61,\n",
+       "   62,\n",
+       "   63,\n",
+       "   64,\n",
+       "   65,\n",
+       "   66,\n",
+       "   67,\n",
+       "   68,\n",
+       "   69,\n",
+       "   70,\n",
+       "   71,\n",
+       "   72,\n",
+       "   73,\n",
+       "   74,\n",
+       "   75,\n",
+       "   76,\n",
+       "   77,\n",
+       "   78,\n",
+       "   79,\n",
+       "   80,\n",
+       "   81,\n",
+       "   82,\n",
+       "   83,\n",
+       "   84,\n",
+       "   85,\n",
+       "   86,\n",
+       "   87,\n",
+       "   88,\n",
+       "   89,\n",
+       "   90,\n",
+       "   91,\n",
+       "   92,\n",
+       "   93,\n",
+       "   94,\n",
+       "   95,\n",
+       "   96,\n",
+       "   97,\n",
+       "   98,\n",
+       "   99,\n",
+       "   100,\n",
+       "   101,\n",
+       "   102,\n",
+       "   103,\n",
+       "   104,\n",
+       "   105,\n",
+       "   106,\n",
+       "   107,\n",
+       "   108,\n",
+       "   109,\n",
+       "   110,\n",
+       "   111,\n",
+       "   112,\n",
+       "   113,\n",
+       "   114,\n",
+       "   115,\n",
+       "   116,\n",
+       "   117,\n",
+       "   118,\n",
+       "   119,\n",
+       "   120,\n",
+       "   121,\n",
+       "   122,\n",
+       "   123,\n",
+       "   124,\n",
+       "   125,\n",
+       "   126,\n",
+       "   127,\n",
+       "   128,\n",
+       "   129,\n",
+       "   130,\n",
+       "   131,\n",
+       "   132,\n",
+       "   133,\n",
+       "   134,\n",
+       "   135,\n",
+       "   136,\n",
+       "   137,\n",
+       "   138,\n",
+       "   139,\n",
+       "   140,\n",
+       "   141,\n",
+       "   142,\n",
+       "   143,\n",
+       "   144,\n",
+       "   145,\n",
+       "   146,\n",
+       "   147,\n",
+       "   148,\n",
+       "   149,\n",
+       "   150,\n",
+       "   151,\n",
+       "   152,\n",
+       "   153,\n",
+       "   154,\n",
+       "   155,\n",
+       "   156,\n",
+       "   157,\n",
+       "   158],\n",
+       "  'might_have_rounded_floats': False},\n",
+       " {'train_size': 100,\n",
+       "  'predictions': (#69) [1,1,1,1,1,0,1,1,1,1...],\n",
+       "  'xgboost': {'accuracy': 0.7681159420289855,\n",
+       "   'acc_macro': 0.7681159420289855,\n",
+       "   'racc': 0.6286494433942449,\n",
+       "   'kappa': 0.37556561085972845,\n",
+       "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
+       "   'f1_macro': 0.6877828054298643,\n",
+       "   'f1_micro': 0.7681159420289855,\n",
+       "   'frac_valid': 1.0,\n",
+       "   'all_y_true': (#69) [1,1,0,1,1,1,1,1,0,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
+       "          0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n",
+       "          1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
+       "          1, 1, 0]),\n",
+       "   'valid_indices': [0,\n",
+       "    1,\n",
+       "    2,\n",
+       "    3,\n",
+       "    4,\n",
+       "    5,\n",
+       "    6,\n",
+       "    7,\n",
+       "    8,\n",
+       "    9,\n",
+       "    10,\n",
+       "    11,\n",
+       "    12,\n",
+       "    13,\n",
+       "    14,\n",
+       "    15,\n",
+       "    16,\n",
+       "    17,\n",
+       "    18,\n",
+       "    19,\n",
+       "    20,\n",
+       "    21,\n",
+       "    22,\n",
+       "    23,\n",
+       "    24,\n",
+       "    25,\n",
+       "    26,\n",
+       "    27,\n",
+       "    28,\n",
+       "    29,\n",
+       "    30,\n",
+       "    31,\n",
+       "    32,\n",
+       "    33,\n",
+       "    34,\n",
+       "    35,\n",
+       "    36,\n",
+       "    37,\n",
+       "    38,\n",
+       "    39,\n",
+       "    40,\n",
+       "    41,\n",
+       "    42,\n",
+       "    43,\n",
+       "    44,\n",
+       "    45,\n",
+       "    46,\n",
+       "    47,\n",
+       "    48,\n",
+       "    49,\n",
+       "    50,\n",
+       "    51,\n",
+       "    52,\n",
+       "    53,\n",
+       "    54,\n",
+       "    55,\n",
+       "    56,\n",
+       "    57,\n",
+       "    58,\n",
+       "    59,\n",
+       "    60,\n",
+       "    61,\n",
+       "    62,\n",
+       "    63,\n",
+       "    64,\n",
+       "    65,\n",
+       "    66,\n",
+       "    67,\n",
+       "    68],\n",
+       "   'might_have_rounded_floats': False},\n",
+       "  'tabpfn': {'accuracy': 0.855072463768116,\n",
+       "   'acc_macro': 0.855072463768116,\n",
+       "   'racc': 0.6727578239865575,\n",
+       "   'kappa': 0.5571245186136072,\n",
+       "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
+       "   'f1_macro': 0.775974025974026,\n",
+       "   'f1_micro': 0.855072463768116,\n",
+       "   'frac_valid': 1.0,\n",
+       "   'all_y_true': (#69) [1,1,0,1,1,1,1,1,0,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n",
+       "          0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n",
+       "          1, 1, 1]),\n",
+       "   'valid_indices': [0,\n",
+       "    1,\n",
+       "    2,\n",
+       "    3,\n",
+       "    4,\n",
+       "    5,\n",
+       "    6,\n",
+       "    7,\n",
+       "    8,\n",
+       "    9,\n",
+       "    10,\n",
+       "    11,\n",
+       "    12,\n",
+       "    13,\n",
+       "    14,\n",
+       "    15,\n",
+       "    16,\n",
+       "    17,\n",
+       "    18,\n",
+       "    19,\n",
+       "    20,\n",
+       "    21,\n",
+       "    22,\n",
+       "    23,\n",
+       "    24,\n",
+       "    25,\n",
+       "    26,\n",
+       "    27,\n",
+       "    28,\n",
+       "    29,\n",
+       "    30,\n",
+       "    31,\n",
+       "    32,\n",
+       "    33,\n",
+       "    34,\n",
+       "    35,\n",
+       "    36,\n",
+       "    37,\n",
+       "    38,\n",
+       "    39,\n",
+       "    40,\n",
+       "    41,\n",
+       "    42,\n",
+       "    43,\n",
+       "    44,\n",
+       "    45,\n",
+       "    46,\n",
+       "    47,\n",
+       "    48,\n",
+       "    49,\n",
+       "    50,\n",
+       "    51,\n",
+       "    52,\n",
+       "    53,\n",
+       "    54,\n",
+       "    55,\n",
+       "    56,\n",
+       "    57,\n",
+       "    58,\n",
+       "    59,\n",
+       "    60,\n",
+       "    61,\n",
+       "    62,\n",
+       "    63,\n",
+       "    64,\n",
+       "    65,\n",
+       "    66,\n",
+       "    67,\n",
+       "    68],\n",
+       "   'might_have_rounded_floats': False},\n",
+       "  'base_model': 'ada',\n",
+       "  'batch_size': None,\n",
+       "  'n_epochs': 8,\n",
+       "  'learning_rate_multiplier': 0.02,\n",
+       "  'run_name': None,\n",
+       "  'wandb_sync': False,\n",
+       "  'outdir': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230206_042354',\n",
+       "  'train_filename': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230206_042354/train.jsonl',\n",
+       "  'valid_filename': 'None',\n",
+       "  'model_name': 'ada:ft-lsmoepfl-2023-02-06-03-26-38',\n",
+       "  'ft_id': 'ft-u8IGFzGo7JzluMriRVTGZAf8',\n",
+       "  'date': '20230206_042757',\n",
+       "  'train_file_id': 'file-GGit6FZJ2hJY7G4sJ0v9vVuG',\n",
+       "  'valid_file_id': None,\n",
+       "  'accuracy': 0.7391304347826086,\n",
+       "  'acc_macro': 0.7391304347826086,\n",
+       "  'racc': 0.6874606175173282,\n",
+       "  'kappa': 0.1653225806451613,\n",
+       "  'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
+       "  'f1_macro': 0.573489010989011,\n",
+       "  'f1_micro': 0.7391304347826086,\n",
+       "  'frac_valid': 1.0,\n",
+       "  'all_y_true': (#69) [1,1,0,1,1,1,1,1,0,1...],\n",
+       "  'all_y_pred': (#69) [1,1,1,1,1,0,1,1,1,1...],\n",
+       "  'valid_indices': [0,\n",
+       "   1,\n",
+       "   2,\n",
+       "   3,\n",
+       "   4,\n",
+       "   5,\n",
+       "   6,\n",
+       "   7,\n",
+       "   8,\n",
+       "   9,\n",
+       "   10,\n",
+       "   11,\n",
+       "   12,\n",
+       "   13,\n",
+       "   14,\n",
+       "   15,\n",
+       "   16,\n",
+       "   17,\n",
+       "   18,\n",
+       "   19,\n",
+       "   20,\n",
+       "   21,\n",
+       "   22,\n",
+       "   23,\n",
+       "   24,\n",
+       "   25,\n",
+       "   26,\n",
+       "   27,\n",
+       "   28,\n",
+       "   29,\n",
+       "   30,\n",
+       "   31,\n",
+       "   32,\n",
+       "   33,\n",
+       "   34,\n",
+       "   35,\n",
+       "   36,\n",
+       "   37,\n",
+       "   38,\n",
+       "   39,\n",
+       "   40,\n",
+       "   41,\n",
+       "   42,\n",
+       "   43,\n",
+       "   44,\n",
+       "   45,\n",
+       "   46,\n",
+       "   47,\n",
+       "   48,\n",
+       "   49,\n",
+       "   50,\n",
+       "   51,\n",
+       "   52,\n",
+       "   53,\n",
+       "   54,\n",
+       "   55,\n",
+       "   56,\n",
+       "   57,\n",
+       "   58,\n",
+       "   59,\n",
+       "   60,\n",
+       "   61,\n",
+       "   62,\n",
+       "   63,\n",
+       "   64,\n",
+       "   65,\n",
+       "   66,\n",
+       "   67,\n",
+       "   68],\n",
+       "  'might_have_rounded_floats': False},\n",
+       " {'train_size': 20,\n",
+       "  'predictions': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "  'xgboost': {'accuracy': 0.7583892617449665,\n",
+       "   'acc_macro': 0.7583892617449665,\n",
+       "   'racc': 0.7583892617449665,\n",
+       "   'kappa': 0.0,\n",
+       "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
+       "   'f1_macro': 0.4312977099236641,\n",
+       "   'f1_micro': 0.7583892617449665,\n",
+       "   'frac_valid': 1.0,\n",
+       "   'all_y_true': (#149) [1,1,0,1,1,1,1,1,1,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),\n",
+       "   'valid_indices': [0,\n",
+       "    1,\n",
+       "    2,\n",
+       "    3,\n",
+       "    4,\n",
+       "    5,\n",
+       "    6,\n",
+       "    7,\n",
+       "    8,\n",
+       "    9,\n",
+       "    10,\n",
+       "    11,\n",
+       "    12,\n",
+       "    13,\n",
+       "    14,\n",
+       "    15,\n",
+       "    16,\n",
+       "    17,\n",
+       "    18,\n",
+       "    19,\n",
+       "    20,\n",
+       "    21,\n",
+       "    22,\n",
+       "    23,\n",
+       "    24,\n",
+       "    25,\n",
+       "    26,\n",
+       "    27,\n",
+       "    28,\n",
+       "    29,\n",
+       "    30,\n",
+       "    31,\n",
+       "    32,\n",
+       "    33,\n",
+       "    34,\n",
+       "    35,\n",
+       "    36,\n",
+       "    37,\n",
+       "    38,\n",
+       "    39,\n",
+       "    40,\n",
+       "    41,\n",
+       "    42,\n",
+       "    43,\n",
+       "    44,\n",
+       "    45,\n",
+       "    46,\n",
+       "    47,\n",
+       "    48,\n",
+       "    49,\n",
+       "    50,\n",
+       "    51,\n",
+       "    52,\n",
+       "    53,\n",
+       "    54,\n",
+       "    55,\n",
+       "    56,\n",
+       "    57,\n",
+       "    58,\n",
+       "    59,\n",
+       "    60,\n",
+       "    61,\n",
+       "    62,\n",
+       "    63,\n",
+       "    64,\n",
+       "    65,\n",
+       "    66,\n",
+       "    67,\n",
+       "    68,\n",
+       "    69,\n",
+       "    70,\n",
+       "    71,\n",
+       "    72,\n",
+       "    73,\n",
+       "    74,\n",
+       "    75,\n",
+       "    76,\n",
+       "    77,\n",
+       "    78,\n",
+       "    79,\n",
+       "    80,\n",
+       "    81,\n",
+       "    82,\n",
+       "    83,\n",
+       "    84,\n",
+       "    85,\n",
+       "    86,\n",
+       "    87,\n",
+       "    88,\n",
+       "    89,\n",
+       "    90,\n",
+       "    91,\n",
+       "    92,\n",
+       "    93,\n",
+       "    94,\n",
+       "    95,\n",
+       "    96,\n",
+       "    97,\n",
+       "    98,\n",
+       "    99,\n",
+       "    100,\n",
+       "    101,\n",
+       "    102,\n",
+       "    103,\n",
+       "    104,\n",
+       "    105,\n",
+       "    106,\n",
+       "    107,\n",
+       "    108,\n",
+       "    109,\n",
+       "    110,\n",
+       "    111,\n",
+       "    112,\n",
+       "    113,\n",
+       "    114,\n",
+       "    115,\n",
+       "    116,\n",
+       "    117,\n",
+       "    118,\n",
+       "    119,\n",
+       "    120,\n",
+       "    121,\n",
+       "    122,\n",
+       "    123,\n",
+       "    124,\n",
+       "    125,\n",
+       "    126,\n",
+       "    127,\n",
+       "    128,\n",
+       "    129,\n",
+       "    130,\n",
+       "    131,\n",
+       "    132,\n",
+       "    133,\n",
+       "    134,\n",
+       "    135,\n",
+       "    136,\n",
+       "    137,\n",
+       "    138,\n",
+       "    139,\n",
+       "    140,\n",
+       "    141,\n",
+       "    142,\n",
+       "    143,\n",
+       "    144,\n",
+       "    145,\n",
+       "    146,\n",
+       "    147,\n",
+       "    148],\n",
+       "   'might_have_rounded_floats': False},\n",
+       "  'tabpfn': {'accuracy': 0.7583892617449665,\n",
+       "   'acc_macro': 0.7583892617449665,\n",
+       "   'racc': 0.7583892617449665,\n",
+       "   'kappa': 0.0,\n",
+       "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
+       "   'f1_macro': 0.4312977099236641,\n",
+       "   'f1_micro': 0.7583892617449665,\n",
+       "   'frac_valid': 1.0,\n",
+       "   'all_y_true': (#149) [1,1,0,1,1,1,1,1,1,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),\n",
+       "   'valid_indices': [0,\n",
+       "    1,\n",
+       "    2,\n",
+       "    3,\n",
+       "    4,\n",
+       "    5,\n",
+       "    6,\n",
+       "    7,\n",
+       "    8,\n",
+       "    9,\n",
+       "    10,\n",
+       "    11,\n",
+       "    12,\n",
+       "    13,\n",
+       "    14,\n",
+       "    15,\n",
+       "    16,\n",
+       "    17,\n",
+       "    18,\n",
+       "    19,\n",
+       "    20,\n",
+       "    21,\n",
+       "    22,\n",
+       "    23,\n",
+       "    24,\n",
+       "    25,\n",
+       "    26,\n",
+       "    27,\n",
+       "    28,\n",
+       "    29,\n",
+       "    30,\n",
+       "    31,\n",
+       "    32,\n",
+       "    33,\n",
+       "    34,\n",
+       "    35,\n",
+       "    36,\n",
+       "    37,\n",
+       "    38,\n",
+       "    39,\n",
+       "    40,\n",
+       "    41,\n",
+       "    42,\n",
+       "    43,\n",
+       "    44,\n",
+       "    45,\n",
+       "    46,\n",
+       "    47,\n",
+       "    48,\n",
+       "    49,\n",
+       "    50,\n",
+       "    51,\n",
+       "    52,\n",
+       "    53,\n",
+       "    54,\n",
+       "    55,\n",
+       "    56,\n",
+       "    57,\n",
+       "    58,\n",
+       "    59,\n",
+       "    60,\n",
+       "    61,\n",
+       "    62,\n",
+       "    63,\n",
+       "    64,\n",
+       "    65,\n",
+       "    66,\n",
+       "    67,\n",
+       "    68,\n",
+       "    69,\n",
+       "    70,\n",
+       "    71,\n",
+       "    72,\n",
+       "    73,\n",
+       "    74,\n",
+       "    75,\n",
+       "    76,\n",
+       "    77,\n",
+       "    78,\n",
+       "    79,\n",
+       "    80,\n",
+       "    81,\n",
+       "    82,\n",
+       "    83,\n",
+       "    84,\n",
+       "    85,\n",
+       "    86,\n",
+       "    87,\n",
+       "    88,\n",
+       "    89,\n",
+       "    90,\n",
+       "    91,\n",
+       "    92,\n",
+       "    93,\n",
+       "    94,\n",
+       "    95,\n",
+       "    96,\n",
+       "    97,\n",
+       "    98,\n",
+       "    99,\n",
+       "    100,\n",
+       "    101,\n",
+       "    102,\n",
+       "    103,\n",
+       "    104,\n",
+       "    105,\n",
+       "    106,\n",
+       "    107,\n",
+       "    108,\n",
+       "    109,\n",
+       "    110,\n",
+       "    111,\n",
+       "    112,\n",
+       "    113,\n",
+       "    114,\n",
+       "    115,\n",
+       "    116,\n",
+       "    117,\n",
+       "    118,\n",
+       "    119,\n",
+       "    120,\n",
+       "    121,\n",
+       "    122,\n",
+       "    123,\n",
+       "    124,\n",
+       "    125,\n",
+       "    126,\n",
+       "    127,\n",
+       "    128,\n",
+       "    129,\n",
+       "    130,\n",
+       "    131,\n",
+       "    132,\n",
+       "    133,\n",
+       "    134,\n",
+       "    135,\n",
+       "    136,\n",
+       "    137,\n",
+       "    138,\n",
+       "    139,\n",
+       "    140,\n",
+       "    141,\n",
+       "    142,\n",
+       "    143,\n",
+       "    144,\n",
+       "    145,\n",
+       "    146,\n",
+       "    147,\n",
+       "    148],\n",
+       "   'might_have_rounded_floats': False},\n",
+       "  'base_model': 'ada',\n",
+       "  'batch_size': None,\n",
+       "  'n_epochs': 8,\n",
        "  'learning_rate_multiplier': 0.02,\n",
        "  'run_name': None,\n",
        "  'wandb_sync': False,\n",
-       "  'outdir': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230206_042354',\n",
-       "  'train_filename': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230206_042354/train.jsonl',\n",
+       "  'outdir': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230206_055917',\n",
+       "  'train_filename': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230206_055917/train.jsonl',\n",
        "  'valid_filename': 'None',\n",
-       "  'model_name': 'ada:ft-lsmoepfl-2023-02-06-03-26-38',\n",
-       "  'ft_id': 'ft-u8IGFzGo7JzluMriRVTGZAf8',\n",
-       "  'date': '20230206_042757',\n",
-       "  'train_file_id': 'file-GGit6FZJ2hJY7G4sJ0v9vVuG',\n",
+       "  'model_name': 'ada:ft-lsmoepfl-2023-02-06-05-08-24',\n",
+       "  'ft_id': 'ft-HSB6296aMzQQgvXn2nhAYfOD',\n",
+       "  'date': '20230206_060921',\n",
+       "  'train_file_id': 'file-Sle9BqkYddr7YktHprClDMDE',\n",
        "  'valid_file_id': None,\n",
-       "  'accuracy': 0.7391304347826086,\n",
-       "  'acc_macro': 0.7391304347826086,\n",
-       "  'racc': 0.6874606175173282,\n",
-       "  'kappa': 0.1653225806451613,\n",
+       "  'accuracy': 0.7114093959731543,\n",
+       "  'acc_macro': 0.7114093959731543,\n",
+       "  'racc': 0.7133012026485294,\n",
+       "  'kappa': -0.006598586017282173,\n",
        "  'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "  'f1_macro': 0.573489010989011,\n",
-       "  'f1_micro': 0.7391304347826086,\n",
+       "  'f1_macro': 0.47487910826981394,\n",
+       "  'f1_micro': 0.7114093959731543,\n",
        "  'frac_valid': 1.0,\n",
-       "  'all_y_true': (#69) [1,1,0,1,1,1,1,1,0,1...],\n",
-       "  'all_y_pred': (#69) [1,1,1,1,1,0,1,1,1,1...],\n",
+       "  'all_y_true': (#149) [1,1,0,1,1,1,1,1,1,1...],\n",
+       "  'all_y_pred': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
        "  'valid_indices': [0,\n",
        "   1,\n",
        "   2,\n",
@@ -1420,26 +2896,105 @@
        "   65,\n",
        "   66,\n",
        "   67,\n",
-       "   68],\n",
+       "   68,\n",
+       "   69,\n",
+       "   70,\n",
+       "   71,\n",
+       "   72,\n",
+       "   73,\n",
+       "   74,\n",
+       "   75,\n",
+       "   76,\n",
+       "   77,\n",
+       "   78,\n",
+       "   79,\n",
+       "   80,\n",
+       "   81,\n",
+       "   82,\n",
+       "   83,\n",
+       "   84,\n",
+       "   85,\n",
+       "   86,\n",
+       "   87,\n",
+       "   88,\n",
+       "   89,\n",
+       "   90,\n",
+       "   91,\n",
+       "   92,\n",
+       "   93,\n",
+       "   94,\n",
+       "   95,\n",
+       "   96,\n",
+       "   97,\n",
+       "   98,\n",
+       "   99,\n",
+       "   100,\n",
+       "   101,\n",
+       "   102,\n",
+       "   103,\n",
+       "   104,\n",
+       "   105,\n",
+       "   106,\n",
+       "   107,\n",
+       "   108,\n",
+       "   109,\n",
+       "   110,\n",
+       "   111,\n",
+       "   112,\n",
+       "   113,\n",
+       "   114,\n",
+       "   115,\n",
+       "   116,\n",
+       "   117,\n",
+       "   118,\n",
+       "   119,\n",
+       "   120,\n",
+       "   121,\n",
+       "   122,\n",
+       "   123,\n",
+       "   124,\n",
+       "   125,\n",
+       "   126,\n",
+       "   127,\n",
+       "   128,\n",
+       "   129,\n",
+       "   130,\n",
+       "   131,\n",
+       "   132,\n",
+       "   133,\n",
+       "   134,\n",
+       "   135,\n",
+       "   136,\n",
+       "   137,\n",
+       "   138,\n",
+       "   139,\n",
+       "   140,\n",
+       "   141,\n",
+       "   142,\n",
+       "   143,\n",
+       "   144,\n",
+       "   145,\n",
+       "   146,\n",
+       "   147,\n",
+       "   148],\n",
        "  'might_have_rounded_floats': False},\n",
-       " {'train_size': 20,\n",
-       "  'predictions': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
-       "  'xgboost': {'accuracy': 0.7583892617449665,\n",
-       "   'acc_macro': 0.7583892617449665,\n",
-       "   'racc': 0.7583892617449665,\n",
-       "   'kappa': 0.0,\n",
+       " {'train_size': 50,\n",
+       "  'predictions': (#119) [1,1,1,1,1,1,1,0,1,0...],\n",
+       "  'xgboost': {'accuracy': 0.7983193277310925,\n",
+       "   'acc_macro': 0.7983193277310925,\n",
+       "   'racc': 0.6399971753407245,\n",
+       "   'kappa': 0.439780306002354,\n",
        "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.4312977099236641,\n",
-       "   'f1_micro': 0.7583892617449665,\n",
+       "   'f1_macro': 0.7197802197802198,\n",
+       "   'f1_micro': 0.7983193277310925,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#149) [1,1,0,1,1,1,1,1,1,1...],\n",
-       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),\n",
+       "   'all_y_true': (#119) [1,1,1,1,0,1,1,1,1,0...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
+       "          1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
+       "          1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
+       "          0, 1, 1, 1, 0, 1, 0, 1, 1]),\n",
        "   'valid_indices': [0,\n",
        "    1,\n",
        "    2,\n",
@@ -1558,54 +3113,23 @@
        "    115,\n",
        "    116,\n",
        "    117,\n",
-       "    118,\n",
-       "    119,\n",
-       "    120,\n",
-       "    121,\n",
-       "    122,\n",
-       "    123,\n",
-       "    124,\n",
-       "    125,\n",
-       "    126,\n",
-       "    127,\n",
-       "    128,\n",
-       "    129,\n",
-       "    130,\n",
-       "    131,\n",
-       "    132,\n",
-       "    133,\n",
-       "    134,\n",
-       "    135,\n",
-       "    136,\n",
-       "    137,\n",
-       "    138,\n",
-       "    139,\n",
-       "    140,\n",
-       "    141,\n",
-       "    142,\n",
-       "    143,\n",
-       "    144,\n",
-       "    145,\n",
-       "    146,\n",
-       "    147,\n",
-       "    148],\n",
-       "   'might_have_rounded_floats': False},\n",
-       "  'tabpfn': {'accuracy': 0.7583892617449665,\n",
-       "   'acc_macro': 0.7583892617449665,\n",
-       "   'racc': 0.7583892617449665,\n",
+       "    118],\n",
+       "   'might_have_rounded_floats': False},\n",
+       "  'tabpfn': {'accuracy': 0.7563025210084033,\n",
+       "   'acc_macro': 0.7563025210084033,\n",
+       "   'racc': 0.7563025210084033,\n",
        "   'kappa': 0.0,\n",
        "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.4312977099236641,\n",
-       "   'f1_micro': 0.7583892617449665,\n",
+       "   'f1_macro': 0.430622009569378,\n",
+       "   'f1_micro': 0.7563025210084033,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#149) [1,1,0,1,1,1,1,1,1,1...],\n",
+       "   'all_y_true': (#119) [1,1,1,1,0,1,1,1,1,0...],\n",
        "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
        "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1]),\n",
        "   'valid_indices': [0,\n",
        "    1,\n",
        "    2,\n",
@@ -1724,37 +3248,7 @@
        "    115,\n",
        "    116,\n",
        "    117,\n",
-       "    118,\n",
-       "    119,\n",
-       "    120,\n",
-       "    121,\n",
-       "    122,\n",
-       "    123,\n",
-       "    124,\n",
-       "    125,\n",
-       "    126,\n",
-       "    127,\n",
-       "    128,\n",
-       "    129,\n",
-       "    130,\n",
-       "    131,\n",
-       "    132,\n",
-       "    133,\n",
-       "    134,\n",
-       "    135,\n",
-       "    136,\n",
-       "    137,\n",
-       "    138,\n",
-       "    139,\n",
-       "    140,\n",
-       "    141,\n",
-       "    142,\n",
-       "    143,\n",
-       "    144,\n",
-       "    145,\n",
-       "    146,\n",
-       "    147,\n",
-       "    148],\n",
+       "    118],\n",
        "   'might_have_rounded_floats': False},\n",
        "  'base_model': 'ada',\n",
        "  'batch_size': None,\n",
@@ -1762,24 +3256,24 @@
        "  'learning_rate_multiplier': 0.02,\n",
        "  'run_name': None,\n",
        "  'wandb_sync': False,\n",
-       "  'outdir': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230206_055917',\n",
-       "  'train_filename': '/home/kevin/Documents/gptchem/experiments/03_classification/mof_water_stability/out/20230206_055917/train.jsonl',\n",
+       "  'outdir': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230131_150831',\n",
+       "  'train_filename': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230131_150831/train.jsonl',\n",
        "  'valid_filename': 'None',\n",
-       "  'model_name': 'ada:ft-lsmoepfl-2023-02-06-05-08-24',\n",
-       "  'ft_id': 'ft-HSB6296aMzQQgvXn2nhAYfOD',\n",
-       "  'date': '20230206_060921',\n",
-       "  'train_file_id': 'file-Sle9BqkYddr7YktHprClDMDE',\n",
+       "  'model_name': 'ada:ft-lsmoepfl-2023-01-31-15-11-48',\n",
+       "  'ft_id': 'ft-MTSJIHsq6HKtm00M87sxOdhn',\n",
+       "  'date': '20230131_161210',\n",
+       "  'train_file_id': 'file-ieoELakPOfCI4L2Yb8Mr8S5A',\n",
        "  'valid_file_id': None,\n",
-       "  'accuracy': 0.7114093959731543,\n",
-       "  'acc_macro': 0.7114093959731543,\n",
-       "  'racc': 0.7133012026485294,\n",
-       "  'kappa': -0.006598586017282173,\n",
+       "  'accuracy': 0.7310924369747899,\n",
+       "  'acc_macro': 0.7310924369747899,\n",
+       "  'racc': 0.6744580185015182,\n",
+       "  'kappa': 0.1739696312364425,\n",
        "  'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "  'f1_macro': 0.47487910826981394,\n",
-       "  'f1_micro': 0.7114093959731543,\n",
+       "  'f1_macro': 0.5824561403508772,\n",
+       "  'f1_micro': 0.7310924369747899,\n",
        "  'frac_valid': 1.0,\n",
-       "  'all_y_true': (#149) [1,1,0,1,1,1,1,1,1,1...],\n",
-       "  'all_y_pred': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "  'all_y_true': (#119) [1,1,1,1,0,1,1,1,1,0...],\n",
+       "  'all_y_pred': (#119) [1,1,1,1,1,1,1,0,1,0...],\n",
        "  'valid_indices': [0,\n",
        "   1,\n",
        "   2,\n",
@@ -1898,55 +3392,26 @@
        "   115,\n",
        "   116,\n",
        "   117,\n",
-       "   118,\n",
-       "   119,\n",
-       "   120,\n",
-       "   121,\n",
-       "   122,\n",
-       "   123,\n",
-       "   124,\n",
-       "   125,\n",
-       "   126,\n",
-       "   127,\n",
-       "   128,\n",
-       "   129,\n",
-       "   130,\n",
-       "   131,\n",
-       "   132,\n",
-       "   133,\n",
-       "   134,\n",
-       "   135,\n",
-       "   136,\n",
-       "   137,\n",
-       "   138,\n",
-       "   139,\n",
-       "   140,\n",
-       "   141,\n",
-       "   142,\n",
-       "   143,\n",
-       "   144,\n",
-       "   145,\n",
-       "   146,\n",
-       "   147,\n",
-       "   148],\n",
+       "   118],\n",
        "  'might_have_rounded_floats': False},\n",
-       " {'train_size': 50,\n",
-       "  'predictions': (#119) [1,1,1,1,1,1,1,0,1,0...],\n",
-       "  'xgboost': {'accuracy': 0.7983193277310925,\n",
-       "   'acc_macro': 0.7983193277310925,\n",
-       "   'racc': 0.6399971753407245,\n",
-       "   'kappa': 0.439780306002354,\n",
+       " {'train_size': 20,\n",
+       "  'predictions': (#149) [0,1,1,1,0,0,1,1,1,1...],\n",
+       "  'xgboost': {'accuracy': 0.7583892617449665,\n",
+       "   'acc_macro': 0.7583892617449665,\n",
+       "   'racc': 0.7583892617449665,\n",
+       "   'kappa': 0.0,\n",
        "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.7197802197802198,\n",
-       "   'f1_micro': 0.7983193277310925,\n",
+       "   'f1_macro': 0.4312977099236641,\n",
+       "   'f1_micro': 0.7583892617449665,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#119) [1,1,1,1,0,1,1,1,1,0...],\n",
-       "   'all_y_pred': array([1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
-       "          1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n",
-       "          1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n",
-       "          0, 1, 1, 1, 0, 1, 0, 1, 1]),\n",
+       "   'all_y_true': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),\n",
        "   'valid_indices': [0,\n",
        "    1,\n",
        "    2,\n",
@@ -2065,23 +3530,54 @@
        "    115,\n",
        "    116,\n",
        "    117,\n",
-       "    118],\n",
+       "    118,\n",
+       "    119,\n",
+       "    120,\n",
+       "    121,\n",
+       "    122,\n",
+       "    123,\n",
+       "    124,\n",
+       "    125,\n",
+       "    126,\n",
+       "    127,\n",
+       "    128,\n",
+       "    129,\n",
+       "    130,\n",
+       "    131,\n",
+       "    132,\n",
+       "    133,\n",
+       "    134,\n",
+       "    135,\n",
+       "    136,\n",
+       "    137,\n",
+       "    138,\n",
+       "    139,\n",
+       "    140,\n",
+       "    141,\n",
+       "    142,\n",
+       "    143,\n",
+       "    144,\n",
+       "    145,\n",
+       "    146,\n",
+       "    147,\n",
+       "    148],\n",
        "   'might_have_rounded_floats': False},\n",
-       "  'tabpfn': {'accuracy': 0.7563025210084033,\n",
-       "   'acc_macro': 0.7563025210084033,\n",
-       "   'racc': 0.7563025210084033,\n",
-       "   'kappa': 0.0,\n",
+       "  'tabpfn': {'accuracy': 0.738255033557047,\n",
+       "   'acc_macro': 0.738255033557047,\n",
+       "   'racc': 0.7133012026485294,\n",
+       "   'kappa': 0.08703849175176757,\n",
        "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.430622009569378,\n",
-       "   'f1_micro': 0.7563025210084033,\n",
+       "   'f1_macro': 0.5237275633144824,\n",
+       "   'f1_micro': 0.738255033557047,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#119) [1,1,1,1,0,1,1,1,1,0...],\n",
-       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1]),\n",
+       "   'all_y_true': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
+       "          0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]),\n",
        "   'valid_indices': [0,\n",
        "    1,\n",
        "    2,\n",
@@ -2200,7 +3696,37 @@
        "    115,\n",
        "    116,\n",
        "    117,\n",
-       "    118],\n",
+       "    118,\n",
+       "    119,\n",
+       "    120,\n",
+       "    121,\n",
+       "    122,\n",
+       "    123,\n",
+       "    124,\n",
+       "    125,\n",
+       "    126,\n",
+       "    127,\n",
+       "    128,\n",
+       "    129,\n",
+       "    130,\n",
+       "    131,\n",
+       "    132,\n",
+       "    133,\n",
+       "    134,\n",
+       "    135,\n",
+       "    136,\n",
+       "    137,\n",
+       "    138,\n",
+       "    139,\n",
+       "    140,\n",
+       "    141,\n",
+       "    142,\n",
+       "    143,\n",
+       "    144,\n",
+       "    145,\n",
+       "    146,\n",
+       "    147,\n",
+       "    148],\n",
        "   'might_have_rounded_floats': False},\n",
        "  'base_model': 'ada',\n",
        "  'batch_size': None,\n",
@@ -2208,24 +3734,24 @@
        "  'learning_rate_multiplier': 0.02,\n",
        "  'run_name': None,\n",
        "  'wandb_sync': False,\n",
-       "  'outdir': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230131_150831',\n",
-       "  'train_filename': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230131_150831/train.jsonl',\n",
+       "  'outdir': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230201_003837',\n",
+       "  'train_filename': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230201_003837/train.jsonl',\n",
        "  'valid_filename': 'None',\n",
-       "  'model_name': 'ada:ft-lsmoepfl-2023-01-31-15-11-48',\n",
-       "  'ft_id': 'ft-MTSJIHsq6HKtm00M87sxOdhn',\n",
-       "  'date': '20230131_161210',\n",
-       "  'train_file_id': 'file-ieoELakPOfCI4L2Yb8Mr8S5A',\n",
+       "  'model_name': 'ada:ft-lsmoepfl-2023-02-01-03-11-34',\n",
+       "  'ft_id': 'ft-C1uaRxnahU9tBRADoWv7Eg9y',\n",
+       "  'date': '20230201_041153',\n",
+       "  'train_file_id': 'file-HgUGHNbYSahTsm2vakF4vEkD',\n",
        "  'valid_file_id': None,\n",
-       "  'accuracy': 0.7310924369747899,\n",
-       "  'acc_macro': 0.7310924369747899,\n",
-       "  'racc': 0.6744580185015182,\n",
-       "  'kappa': 0.1739696312364425,\n",
+       "  'accuracy': 0.6040268456375839,\n",
+       "  'acc_macro': 0.6040268456375839,\n",
+       "  'racc': 0.6300617089320301,\n",
+       "  'kappa': -0.0703762328016558,\n",
        "  'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "  'f1_macro': 0.5824561403508772,\n",
-       "  'f1_micro': 0.7310924369747899,\n",
+       "  'f1_macro': 0.464779299847793,\n",
+       "  'f1_micro': 0.6040268456375839,\n",
        "  'frac_valid': 1.0,\n",
-       "  'all_y_true': (#119) [1,1,1,1,0,1,1,1,1,0...],\n",
-       "  'all_y_pred': (#119) [1,1,1,1,1,1,1,0,1,0...],\n",
+       "  'all_y_true': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "  'all_y_pred': (#149) [0,1,1,1,0,0,1,1,1,1...],\n",
        "  'valid_indices': [0,\n",
        "   1,\n",
        "   2,\n",
@@ -2344,26 +3870,55 @@
        "   115,\n",
        "   116,\n",
        "   117,\n",
-       "   118],\n",
+       "   118,\n",
+       "   119,\n",
+       "   120,\n",
+       "   121,\n",
+       "   122,\n",
+       "   123,\n",
+       "   124,\n",
+       "   125,\n",
+       "   126,\n",
+       "   127,\n",
+       "   128,\n",
+       "   129,\n",
+       "   130,\n",
+       "   131,\n",
+       "   132,\n",
+       "   133,\n",
+       "   134,\n",
+       "   135,\n",
+       "   136,\n",
+       "   137,\n",
+       "   138,\n",
+       "   139,\n",
+       "   140,\n",
+       "   141,\n",
+       "   142,\n",
+       "   143,\n",
+       "   144,\n",
+       "   145,\n",
+       "   146,\n",
+       "   147,\n",
+       "   148],\n",
        "  'might_have_rounded_floats': False},\n",
-       " {'train_size': 20,\n",
-       "  'predictions': (#149) [0,1,1,1,0,0,1,1,1,1...],\n",
-       "  'xgboost': {'accuracy': 0.7583892617449665,\n",
-       "   'acc_macro': 0.7583892617449665,\n",
-       "   'racc': 0.7583892617449665,\n",
-       "   'kappa': 0.0,\n",
+       " {'train_size': 50,\n",
+       "  'predictions': (#119) [1,1,1,1,1,1,1,1,1,1...],\n",
+       "  'xgboost': {'accuracy': 0.7815126050420168,\n",
+       "   'acc_macro': 0.7815126050420168,\n",
+       "   'racc': 0.6572275969211214,\n",
+       "   'kappa': 0.36258755665430564,\n",
        "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.4312977099236641,\n",
-       "   'f1_micro': 0.7583892617449665,\n",
+       "   'f1_macro': 0.6801075268817205,\n",
+       "   'f1_micro': 0.7815126050420168,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
-       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]),\n",
+       "   'all_y_true': (#119) [1,1,1,1,1,1,0,1,0,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
+       "          1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n",
+       "          0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n",
+       "          1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
+       "          1, 1, 1, 0, 1, 1, 1, 1, 1]),\n",
        "   'valid_indices': [0,\n",
        "    1,\n",
        "    2,\n",
@@ -2482,54 +4037,23 @@
        "    115,\n",
        "    116,\n",
        "    117,\n",
-       "    118,\n",
-       "    119,\n",
-       "    120,\n",
-       "    121,\n",
-       "    122,\n",
-       "    123,\n",
-       "    124,\n",
-       "    125,\n",
-       "    126,\n",
-       "    127,\n",
-       "    128,\n",
-       "    129,\n",
-       "    130,\n",
-       "    131,\n",
-       "    132,\n",
-       "    133,\n",
-       "    134,\n",
-       "    135,\n",
-       "    136,\n",
-       "    137,\n",
-       "    138,\n",
-       "    139,\n",
-       "    140,\n",
-       "    141,\n",
-       "    142,\n",
-       "    143,\n",
-       "    144,\n",
-       "    145,\n",
-       "    146,\n",
-       "    147,\n",
-       "    148],\n",
+       "    118],\n",
        "   'might_have_rounded_floats': False},\n",
-       "  'tabpfn': {'accuracy': 0.738255033557047,\n",
-       "   'acc_macro': 0.738255033557047,\n",
-       "   'racc': 0.7133012026485294,\n",
-       "   'kappa': 0.08703849175176757,\n",
+       "  'tabpfn': {'accuracy': 0.7563025210084033,\n",
+       "   'acc_macro': 0.7563025210084033,\n",
+       "   'racc': 0.7563025210084033,\n",
+       "   'kappa': 0.0,\n",
        "   'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "   'f1_macro': 0.5237275633144824,\n",
-       "   'f1_micro': 0.738255033557047,\n",
+       "   'f1_macro': 0.430622009569378,\n",
+       "   'f1_micro': 0.7563025210084033,\n",
        "   'frac_valid': 1.0,\n",
-       "   'all_y_true': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
-       "   'all_y_pred': array([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
-       "          0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
-       "          1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]),\n",
+       "   'all_y_true': (#119) [1,1,1,1,1,1,0,1,0,1...],\n",
+       "   'all_y_pred': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
+       "          1, 1, 1, 1, 1, 1, 1, 1, 1]),\n",
        "   'valid_indices': [0,\n",
        "    1,\n",
        "    2,\n",
@@ -2648,37 +4172,7 @@
        "    115,\n",
        "    116,\n",
        "    117,\n",
-       "    118,\n",
-       "    119,\n",
-       "    120,\n",
-       "    121,\n",
-       "    122,\n",
-       "    123,\n",
-       "    124,\n",
-       "    125,\n",
-       "    126,\n",
-       "    127,\n",
-       "    128,\n",
-       "    129,\n",
-       "    130,\n",
-       "    131,\n",
-       "    132,\n",
-       "    133,\n",
-       "    134,\n",
-       "    135,\n",
-       "    136,\n",
-       "    137,\n",
-       "    138,\n",
-       "    139,\n",
-       "    140,\n",
-       "    141,\n",
-       "    142,\n",
-       "    143,\n",
-       "    144,\n",
-       "    145,\n",
-       "    146,\n",
-       "    147,\n",
-       "    148],\n",
+       "    118],\n",
        "   'might_have_rounded_floats': False},\n",
        "  'base_model': 'ada',\n",
        "  'batch_size': None,\n",
@@ -2686,24 +4180,24 @@
        "  'learning_rate_multiplier': 0.02,\n",
        "  'run_name': None,\n",
        "  'wandb_sync': False,\n",
-       "  'outdir': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230201_003837',\n",
-       "  'train_filename': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230201_003837/train.jsonl',\n",
+       "  'outdir': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230211_120229',\n",
+       "  'train_filename': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/03_classification/mof_water_stability/out/20230211_120229/train.jsonl',\n",
        "  'valid_filename': 'None',\n",
-       "  'model_name': 'ada:ft-lsmoepfl-2023-02-01-03-11-34',\n",
-       "  'ft_id': 'ft-C1uaRxnahU9tBRADoWv7Eg9y',\n",
-       "  'date': '20230201_041153',\n",
-       "  'train_file_id': 'file-HgUGHNbYSahTsm2vakF4vEkD',\n",
+       "  'model_name': 'ada:ft-lsmoepfl-2023-02-11-11-35-41',\n",
+       "  'ft_id': 'ft-WzhTmzwizh1RXkfgQb4eXUPY',\n",
+       "  'date': '20230211_123714',\n",
+       "  'train_file_id': 'file-kSlNipJvU5QoILZCsBlkHf4s',\n",
        "  'valid_file_id': None,\n",
-       "  'accuracy': 0.6040268456375839,\n",
-       "  'acc_macro': 0.6040268456375839,\n",
-       "  'racc': 0.6300617089320301,\n",
-       "  'kappa': -0.0703762328016558,\n",
+       "  'accuracy': 0.773109243697479,\n",
+       "  'acc_macro': 0.773109243697479,\n",
+       "  'racc': 0.7304568886378081,\n",
+       "  'kappa': 0.15823945506942622,\n",
        "  'confusion_matrix': pycm.ConfusionMatrix(classes: [0, 1]),\n",
-       "  'f1_macro': 0.464779299847793,\n",
-       "  'f1_micro': 0.6040268456375839,\n",
+       "  'f1_macro': 0.5477832512315272,\n",
+       "  'f1_micro': 0.773109243697479,\n",
        "  'frac_valid': 1.0,\n",
-       "  'all_y_true': (#149) [1,1,1,1,1,1,1,1,1,1...],\n",
-       "  'all_y_pred': (#149) [0,1,1,1,0,0,1,1,1,1...],\n",
+       "  'all_y_true': (#119) [1,1,1,1,1,1,0,1,0,1...],\n",
+       "  'all_y_pred': (#119) [1,1,1,1,1,1,1,1,1,1...],\n",
        "  'valid_indices': [0,\n",
        "   1,\n",
        "   2,\n",
@@ -2822,37 +4316,7 @@
        "   115,\n",
        "   116,\n",
        "   117,\n",
-       "   118,\n",
-       "   119,\n",
-       "   120,\n",
-       "   121,\n",
-       "   122,\n",
-       "   123,\n",
-       "   124,\n",
-       "   125,\n",
-       "   126,\n",
-       "   127,\n",
-       "   128,\n",
-       "   129,\n",
-       "   130,\n",
-       "   131,\n",
-       "   132,\n",
-       "   133,\n",
-       "   134,\n",
-       "   135,\n",
-       "   136,\n",
-       "   137,\n",
-       "   138,\n",
-       "   139,\n",
-       "   140,\n",
-       "   141,\n",
-       "   142,\n",
-       "   143,\n",
-       "   144,\n",
-       "   145,\n",
-       "   146,\n",
-       "   147,\n",
-       "   148],\n",
+       "   118],\n",
        "  'might_have_rounded_floats': False},\n",
        " {'train_size': 150,\n",
        "  'predictions': (#19) [1,1,1,1,1,1,1,1,1,1...],\n",
@@ -18468,7 +19932,7 @@
        "  'might_have_rounded_floats': False}]"
       ]
      },
-     "execution_count": 22,
+     "execution_count": 20,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -18479,7 +19943,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 23,
+   "execution_count": 21,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -18522,7 +19986,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 24,
+   "execution_count": 22,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -18533,7 +19997,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 25,
+   "execution_count": 23,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -18542,7 +20006,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 26,
+   "execution_count": 24,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -18551,7 +20015,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 27,
+   "execution_count": 25,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -18560,7 +20024,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 28,
+   "execution_count": 26,
    "metadata": {},
    "outputs": [
     {
@@ -18646,70 +20110,70 @@
        "      <th>10</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
-       "      <td>11</td>\n",
+       "      <td>12</td>\n",
        "      <td>0.0</td>\n",
-       "      <td>0.732419</td>\n",
-       "      <td>0.050343</td>\n",
-       "      <td>11</td>\n",
-       "      <td>0.015179</td>\n",
-       "      <td>0.425792</td>\n",
-       "      <td>0.007215</td>\n",
-       "      <td>11</td>\n",
-       "      <td>0.002175</td>\n",
-       "      <td>0.732419</td>\n",
-       "      <td>0.050343</td>\n",
-       "      <td>11</td>\n",
-       "      <td>0.015179</td>\n",
-       "      <td>-0.029611</td>\n",
-       "      <td>0.055473</td>\n",
-       "      <td>11</td>\n",
-       "      <td>0.016726</td>\n",
+       "      <td>0.732704</td>\n",
+       "      <td>0.048010</td>\n",
+       "      <td>12</td>\n",
+       "      <td>0.013859</td>\n",
+       "      <td>0.429165</td>\n",
+       "      <td>0.013560</td>\n",
+       "      <td>12</td>\n",
+       "      <td>0.003914</td>\n",
+       "      <td>0.732704</td>\n",
+       "      <td>0.048010</td>\n",
+       "      <td>12</td>\n",
+       "      <td>0.013859</td>\n",
+       "      <td>-0.026035</td>\n",
+       "      <td>0.054322</td>\n",
+       "      <td>12</td>\n",
+       "      <td>0.015681</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>20</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
-       "      <td>10</td>\n",
+       "      <td>11</td>\n",
        "      <td>0.0</td>\n",
-       "      <td>0.728859</td>\n",
-       "      <td>0.051230</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.016200</td>\n",
-       "      <td>0.482033</td>\n",
-       "      <td>0.038602</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.012207</td>\n",
-       "      <td>0.728859</td>\n",
-       "      <td>0.051230</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.016200</td>\n",
-       "      <td>0.036366</td>\n",
-       "      <td>0.058814</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.018599</td>\n",
+       "      <td>0.719341</td>\n",
+       "      <td>0.057953</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.017474</td>\n",
+       "      <td>0.484162</td>\n",
+       "      <td>0.037296</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.011245</td>\n",
+       "      <td>0.719341</td>\n",
+       "      <td>0.057953</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.017474</td>\n",
+       "      <td>0.034137</td>\n",
+       "      <td>0.056283</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.016970</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>50</th>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
-       "      <td>10</td>\n",
+       "      <td>11</td>\n",
        "      <td>0.0</td>\n",
-       "      <td>0.740336</td>\n",
-       "      <td>0.026706</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.008445</td>\n",
-       "      <td>0.513919</td>\n",
-       "      <td>0.059430</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.018793</td>\n",
-       "      <td>0.740336</td>\n",
-       "      <td>0.026706</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.008445</td>\n",
-       "      <td>0.083508</td>\n",
-       "      <td>0.094243</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.029802</td>\n",
+       "      <td>0.743316</td>\n",
+       "      <td>0.027195</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.008199</td>\n",
+       "      <td>0.516998</td>\n",
+       "      <td>0.057297</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.017276</td>\n",
+       "      <td>0.743316</td>\n",
+       "      <td>0.027195</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.008199</td>\n",
+       "      <td>0.090302</td>\n",
+       "      <td>0.092203</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.027800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>100</th>\n",
@@ -18765,32 +20229,32 @@
        "           frac_valid                  accuracy                            \\\n",
        "                 mean  std count  sem      mean       std count       sem   \n",
        "train_size                                                                  \n",
-       "10                1.0  0.0    11  0.0  0.732419  0.050343    11  0.015179   \n",
-       "20                1.0  0.0    10  0.0  0.728859  0.051230    10  0.016200   \n",
-       "50                1.0  0.0    10  0.0  0.740336  0.026706    10  0.008445   \n",
+       "10                1.0  0.0    12  0.0  0.732704  0.048010    12  0.013859   \n",
+       "20                1.0  0.0    11  0.0  0.719341  0.057953    11  0.017474   \n",
+       "50                1.0  0.0    11  0.0  0.743316  0.027195    11  0.008199   \n",
        "100               1.0  0.0     9  0.0  0.777778  0.026127     9  0.008709   \n",
        "150               1.0  0.0     8  0.0  0.835526  0.099215     8  0.035078   \n",
        "\n",
        "            f1_macro                            f1_micro                  \\\n",
        "                mean       std count       sem      mean       std count   \n",
        "train_size                                                                 \n",
-       "10          0.425792  0.007215    11  0.002175  0.732419  0.050343    11   \n",
-       "20          0.482033  0.038602    10  0.012207  0.728859  0.051230    10   \n",
-       "50          0.513919  0.059430    10  0.018793  0.740336  0.026706    10   \n",
+       "10          0.429165  0.013560    12  0.003914  0.732704  0.048010    12   \n",
+       "20          0.484162  0.037296    11  0.011245  0.719341  0.057953    11   \n",
+       "50          0.516998  0.057297    11  0.017276  0.743316  0.027195    11   \n",
        "100         0.632455  0.057007     9  0.019002  0.777778  0.026127     9   \n",
        "150         0.743894  0.157807     8  0.055793  0.835526  0.099215     8   \n",
        "\n",
        "                         kappa                            \n",
        "                 sem      mean       std count       sem  \n",
        "train_size                                                \n",
-       "10          0.015179 -0.029611  0.055473    11  0.016726  \n",
-       "20          0.016200  0.036366  0.058814    10  0.018599  \n",
-       "50          0.008445  0.083508  0.094243    10  0.029802  \n",
+       "10          0.013859 -0.026035  0.054322    12  0.015681  \n",
+       "20          0.017474  0.034137  0.056283    11  0.016970  \n",
+       "50          0.008199  0.090302  0.092203    11  0.027800  \n",
        "100         0.008709  0.287743  0.097927     9  0.032642  \n",
        "150         0.035078  0.501270  0.306533     8  0.108376  "
       ]
      },
-     "execution_count": 28,
+     "execution_count": 26,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -18801,7 +20265,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 29,
+   "execution_count": 27,
    "metadata": {},
    "outputs": [
     {
@@ -18876,60 +20340,60 @@
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>10</th>\n",
-       "      <td>0.758719</td>\n",
-       "      <td>0.010626</td>\n",
+       "      <td>0.759958</td>\n",
+       "      <td>0.011003</td>\n",
+       "      <td>12</td>\n",
+       "      <td>0.003176</td>\n",
+       "      <td>0.462818</td>\n",
+       "      <td>0.036484</td>\n",
+       "      <td>12</td>\n",
+       "      <td>0.010532</td>\n",
+       "      <td>0.759958</td>\n",
+       "      <td>0.011003</td>\n",
+       "      <td>12</td>\n",
+       "      <td>0.003176</td>\n",
+       "      <td>0.043507</td>\n",
+       "      <td>0.055758</td>\n",
+       "      <td>12</td>\n",
+       "      <td>0.016096</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>20</th>\n",
+       "      <td>0.760220</td>\n",
+       "      <td>0.026182</td>\n",
        "      <td>11</td>\n",
-       "      <td>0.003204</td>\n",
-       "      <td>0.458873</td>\n",
-       "      <td>0.035479</td>\n",
+       "      <td>0.007894</td>\n",
+       "      <td>0.550914</td>\n",
+       "      <td>0.076140</td>\n",
        "      <td>11</td>\n",
-       "      <td>0.010697</td>\n",
-       "      <td>0.758719</td>\n",
-       "      <td>0.010626</td>\n",
+       "      <td>0.022957</td>\n",
+       "      <td>0.760220</td>\n",
+       "      <td>0.026182</td>\n",
        "      <td>11</td>\n",
-       "      <td>0.003204</td>\n",
-       "      <td>0.037305</td>\n",
-       "      <td>0.053964</td>\n",
+       "      <td>0.007894</td>\n",
+       "      <td>0.157530</td>\n",
+       "      <td>0.109029</td>\n",
        "      <td>11</td>\n",
-       "      <td>0.016271</td>\n",
-       "    </tr>\n",
-       "    <tr>\n",
-       "      <th>20</th>\n",
-       "      <td>0.765101</td>\n",
-       "      <td>0.021690</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.006859</td>\n",
-       "      <td>0.546554</td>\n",
-       "      <td>0.078797</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.024918</td>\n",
-       "      <td>0.765101</td>\n",
-       "      <td>0.021690</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.006859</td>\n",
-       "      <td>0.154332</td>\n",
-       "      <td>0.114382</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.036171</td>\n",
+       "      <td>0.032874</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>50</th>\n",
-       "      <td>0.775630</td>\n",
-       "      <td>0.016357</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.005173</td>\n",
-       "      <td>0.580343</td>\n",
-       "      <td>0.101826</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.032200</td>\n",
-       "      <td>0.775630</td>\n",
-       "      <td>0.016357</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.005173</td>\n",
-       "      <td>0.216824</td>\n",
-       "      <td>0.150898</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.047718</td>\n",
+       "      <td>0.773873</td>\n",
+       "      <td>0.016576</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.004998</td>\n",
+       "      <td>0.566732</td>\n",
+       "      <td>0.106628</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.032149</td>\n",
+       "      <td>0.773873</td>\n",
+       "      <td>0.016576</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.004998</td>\n",
+       "      <td>0.197113</td>\n",
+       "      <td>0.157375</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.047450</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>100</th>\n",
@@ -18977,32 +20441,32 @@
        "            accuracy                            f1_macro                  \\\n",
        "                mean       std count       sem      mean       std count   \n",
        "train_size                                                                 \n",
-       "10          0.758719  0.010626    11  0.003204  0.458873  0.035479    11   \n",
-       "20          0.765101  0.021690    10  0.006859  0.546554  0.078797    10   \n",
-       "50          0.775630  0.016357    10  0.005173  0.580343  0.101826    10   \n",
+       "10          0.759958  0.011003    12  0.003176  0.462818  0.036484    12   \n",
+       "20          0.760220  0.026182    11  0.007894  0.550914  0.076140    11   \n",
+       "50          0.773873  0.016576    11  0.004998  0.566732  0.106628    11   \n",
        "100         0.826087  0.030744     9  0.010248  0.708851  0.084392     9   \n",
        "150         0.802632  0.061314     8  0.021678  0.688395  0.111860     8   \n",
        "\n",
        "                      f1_micro                               kappa            \\\n",
        "                 sem      mean       std count       sem      mean       std   \n",
        "train_size                                                                     \n",
-       "10          0.010697  0.758719  0.010626    11  0.003204  0.037305  0.053964   \n",
-       "20          0.024918  0.765101  0.021690    10  0.006859  0.154332  0.114382   \n",
-       "50          0.032200  0.775630  0.016357    10  0.005173  0.216824  0.150898   \n",
+       "10          0.010532  0.759958  0.011003    12  0.003176  0.043507  0.055758   \n",
+       "20          0.022957  0.760220  0.026182    11  0.007894  0.157530  0.109029   \n",
+       "50          0.032149  0.773873  0.016576    11  0.004998  0.197113  0.157375   \n",
        "100         0.028131  0.826087  0.030744     9  0.010248  0.435989  0.148316   \n",
        "150         0.039548  0.802632  0.061314     8  0.021678  0.397013  0.208300   \n",
        "\n",
        "                            \n",
        "           count       sem  \n",
        "train_size                  \n",
-       "10            11  0.016271  \n",
-       "20            10  0.036171  \n",
-       "50            10  0.047718  \n",
+       "10            12  0.016096  \n",
+       "20            11  0.032874  \n",
+       "50            11  0.047450  \n",
        "100            9  0.049439  \n",
        "150            8  0.073645  "
       ]
      },
-     "execution_count": 29,
+     "execution_count": 27,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -19013,7 +20477,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 30,
+   "execution_count": 28,
    "metadata": {},
    "outputs": [
     {
@@ -19090,58 +20554,58 @@
        "      <th>10</th>\n",
        "      <td>0.754717</td>\n",
        "      <td>0.000000</td>\n",
-       "      <td>11</td>\n",
-       "      <td>3.510833e-17</td>\n",
+       "      <td>12</td>\n",
+       "      <td>3.347448e-17</td>\n",
        "      <td>0.430108</td>\n",
        "      <td>0.000000</td>\n",
-       "      <td>11</td>\n",
-       "      <td>1.755417e-17</td>\n",
+       "      <td>12</td>\n",
+       "      <td>3.347448e-17</td>\n",
        "      <td>0.754717</td>\n",
        "      <td>0.000000</td>\n",
-       "      <td>11</td>\n",
-       "      <td>3.510833e-17</td>\n",
+       "      <td>12</td>\n",
+       "      <td>3.347448e-17</td>\n",
        "      <td>0.000000</td>\n",
        "      <td>0.000000</td>\n",
-       "      <td>11</td>\n",
+       "      <td>12</td>\n",
        "      <td>0.000000</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>20</th>\n",
-       "      <td>0.740940</td>\n",
-       "      <td>0.030214</td>\n",
-       "      <td>10</td>\n",
-       "      <td>9.554432e-03</td>\n",
-       "      <td>0.486783</td>\n",
-       "      <td>0.077162</td>\n",
-       "      <td>10</td>\n",
-       "      <td>2.440072e-02</td>\n",
-       "      <td>0.740940</td>\n",
-       "      <td>0.030214</td>\n",
-       "      <td>10</td>\n",
-       "      <td>9.554432e-03</td>\n",
-       "      <td>0.058090</td>\n",
-       "      <td>0.094443</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.029865</td>\n",
+       "      <td>0.742526</td>\n",
+       "      <td>0.029142</td>\n",
+       "      <td>11</td>\n",
+       "      <td>8.786692e-03</td>\n",
+       "      <td>0.481739</td>\n",
+       "      <td>0.075090</td>\n",
+       "      <td>11</td>\n",
+       "      <td>2.264034e-02</td>\n",
+       "      <td>0.742526</td>\n",
+       "      <td>0.029142</td>\n",
+       "      <td>11</td>\n",
+       "      <td>8.786692e-03</td>\n",
+       "      <td>0.052809</td>\n",
+       "      <td>0.091292</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.027526</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>50</th>\n",
-       "      <td>0.731933</td>\n",
-       "      <td>0.046947</td>\n",
-       "      <td>10</td>\n",
-       "      <td>1.484594e-02</td>\n",
-       "      <td>0.593338</td>\n",
-       "      <td>0.065834</td>\n",
-       "      <td>10</td>\n",
-       "      <td>2.081869e-02</td>\n",
-       "      <td>0.731933</td>\n",
-       "      <td>0.046947</td>\n",
-       "      <td>10</td>\n",
-       "      <td>1.484594e-02</td>\n",
-       "      <td>0.198949</td>\n",
-       "      <td>0.124091</td>\n",
-       "      <td>10</td>\n",
-       "      <td>0.039241</td>\n",
+       "      <td>0.736440</td>\n",
+       "      <td>0.046980</td>\n",
+       "      <td>11</td>\n",
+       "      <td>1.416489e-02</td>\n",
+       "      <td>0.601226</td>\n",
+       "      <td>0.067714</td>\n",
+       "      <td>11</td>\n",
+       "      <td>2.041660e-02</td>\n",
+       "      <td>0.736440</td>\n",
+       "      <td>0.046980</td>\n",
+       "      <td>11</td>\n",
+       "      <td>1.416489e-02</td>\n",
+       "      <td>0.213825</td>\n",
+       "      <td>0.127644</td>\n",
+       "      <td>11</td>\n",
+       "      <td>0.038486</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>100</th>\n",
@@ -19189,32 +20653,32 @@
        "            accuracy                                f1_macro                  \\\n",
        "                mean       std count           sem      mean       std count   \n",
        "train_size                                                                     \n",
-       "10          0.754717  0.000000    11  3.510833e-17  0.430108  0.000000    11   \n",
-       "20          0.740940  0.030214    10  9.554432e-03  0.486783  0.077162    10   \n",
-       "50          0.731933  0.046947    10  1.484594e-02  0.593338  0.065834    10   \n",
+       "10          0.754717  0.000000    12  3.347448e-17  0.430108  0.000000    12   \n",
+       "20          0.742526  0.029142    11  8.786692e-03  0.481739  0.075090    11   \n",
+       "50          0.736440  0.046980    11  1.416489e-02  0.601226  0.067714    11   \n",
        "100         0.764895  0.043344     9  1.444795e-02  0.651693  0.099185     9   \n",
        "150         0.796053  0.095143     8  3.363821e-02  0.712821  0.142107     8   \n",
        "\n",
        "                          f1_micro                                   kappa  \\\n",
        "                     sem      mean       std count           sem      mean   \n",
        "train_size                                                                   \n",
-       "10          1.755417e-17  0.754717  0.000000    11  3.510833e-17  0.000000   \n",
-       "20          2.440072e-02  0.740940  0.030214    10  9.554432e-03  0.058090   \n",
-       "50          2.081869e-02  0.731933  0.046947    10  1.484594e-02  0.198949   \n",
+       "10          3.347448e-17  0.754717  0.000000    12  3.347448e-17  0.000000   \n",
+       "20          2.264034e-02  0.742526  0.029142    11  8.786692e-03  0.052809   \n",
+       "50          2.041660e-02  0.736440  0.046980    11  1.416489e-02  0.213825   \n",
        "100         3.306169e-02  0.764895  0.043344     9  1.444795e-02  0.317595   \n",
        "150         5.024231e-02  0.796053  0.095143     8  3.363821e-02  0.436601   \n",
        "\n",
        "                                      \n",
        "                 std count       sem  \n",
        "train_size                            \n",
-       "10          0.000000    11  0.000000  \n",
-       "20          0.094443    10  0.029865  \n",
-       "50          0.124091    10  0.039241  \n",
+       "10          0.000000    12  0.000000  \n",
+       "20          0.091292    11  0.027526  \n",
+       "50          0.127644    11  0.038486  \n",
        "100         0.179462     9  0.059821  \n",
        "150         0.273576     8  0.096724  "
       ]
      },
-     "execution_count": 30,
+     "execution_count": 28,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -19225,12 +20689,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 31,
+   "execution_count": 29,
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 325x444.984 with 4 Axes>"
       ]
@@ -19314,16 +20778,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 38,
+   "execution_count": 30,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "0.7750074140458505"
+       "0.7913250572834969"
       ]
      },
-     "execution_count": 38,
+     "execution_count": 30,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -19340,43 +20804,26 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 34,
    "metadata": {},
    "outputs": [
     {
-     "ename": "KeyError",
-     "evalue": "2",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/core/indexes/base.py:3803\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3802\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[0;32m-> 3803\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_engine\u001b[39m.\u001b[39;49mget_loc(casted_key)\n\u001b[1;32m   3804\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mKeyError\u001b[39;00m \u001b[39mas\u001b[39;00m err:\n",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/_libs/index.pyx:138\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/_libs/index.pyx:165\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
-      "File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:2263\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.Int64HashTable.get_item\u001b[0;34m()\u001b[0m\n",
-      "File \u001b[0;32mpandas/_libs/hashtable_class_helper.pxi:2273\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.Int64HashTable.get_item\u001b[0;34m()\u001b[0m\n",
-      "\u001b[0;31mKeyError\u001b[0m: 2",
-      "\nThe above exception was the direct cause of the following exception:\n",
-      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn[100], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m find_learning_curve_intersection(\n\u001b[0;32m----> 2\u001b[0m     grouped_res\u001b[39m.\u001b[39;49mloc[\u001b[39m2\u001b[39;49m, :][\u001b[39m\"\u001b[39m\u001b[39mf1_macro\u001b[39m\u001b[39m\"\u001b[39m][\u001b[39m\"\u001b[39m\u001b[39mmean\u001b[39m\u001b[39m\"\u001b[39m]\u001b[39m.\u001b[39mvalues[\u001b[39m0\u001b[39m],\n\u001b[1;32m      3\u001b[0m     fit_learning_curve(\n\u001b[1;32m      4\u001b[0m         grouped_tabpfn_res\u001b[39m.\u001b[39mloc[\u001b[39m2\u001b[39m, :]\u001b[39m.\u001b[39mindex,\n\u001b[1;32m      5\u001b[0m         grouped_tabpfn_res\u001b[39m.\u001b[39mloc[\u001b[39m2\u001b[39m, :][\u001b[39m\"\u001b[39m\u001b[39mf1_macro\u001b[39m\u001b[39m\"\u001b[39m][\u001b[39m\"\u001b[39m\u001b[39mmean\u001b[39m\u001b[39m\"\u001b[39m],\n\u001b[1;32m      6\u001b[0m     )[\u001b[39m0\u001b[39m],\n\u001b[1;32m      7\u001b[0m ) \u001b[39m/\u001b[39m \u001b[39m10\u001b[39m\n",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/core/indexing.py:1067\u001b[0m, in \u001b[0;36m_LocationIndexer.__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   1065\u001b[0m     \u001b[39mif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_is_scalar_access(key):\n\u001b[1;32m   1066\u001b[0m         \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mobj\u001b[39m.\u001b[39m_get_value(\u001b[39m*\u001b[39mkey, takeable\u001b[39m=\u001b[39m\u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_takeable)\n\u001b[0;32m-> 1067\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_getitem_tuple(key)\n\u001b[1;32m   1068\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[1;32m   1069\u001b[0m     \u001b[39m# we by definition only have the 0th axis\u001b[39;00m\n\u001b[1;32m   1070\u001b[0m     axis \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39maxis \u001b[39mor\u001b[39;00m \u001b[39m0\u001b[39m\n",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/core/indexing.py:1247\u001b[0m, in \u001b[0;36m_LocIndexer._getitem_tuple\u001b[0;34m(self, tup)\u001b[0m\n\u001b[1;32m   1245\u001b[0m \u001b[39mwith\u001b[39;00m suppress(IndexingError):\n\u001b[1;32m   1246\u001b[0m     tup \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_expand_ellipsis(tup)\n\u001b[0;32m-> 1247\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_getitem_lowerdim(tup)\n\u001b[1;32m   1249\u001b[0m \u001b[39m# no multi-index, so validate all of the indexers\u001b[39;00m\n\u001b[1;32m   1250\u001b[0m tup \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_validate_tuple_indexer(tup)\n",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/core/indexing.py:941\u001b[0m, in \u001b[0;36m_LocationIndexer._getitem_lowerdim\u001b[0;34m(self, tup)\u001b[0m\n\u001b[1;32m    939\u001b[0m \u001b[39m# we may have a nested tuples indexer here\u001b[39;00m\n\u001b[1;32m    940\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_is_nested_tuple_indexer(tup):\n\u001b[0;32m--> 941\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_getitem_nested_tuple(tup)\n\u001b[1;32m    943\u001b[0m \u001b[39m# we maybe be using a tuple to represent multiple dimensions here\u001b[39;00m\n\u001b[1;32m    944\u001b[0m ax0 \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mobj\u001b[39m.\u001b[39m_get_axis(\u001b[39m0\u001b[39m)\n",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/core/indexing.py:1047\u001b[0m, in \u001b[0;36m_LocationIndexer._getitem_nested_tuple\u001b[0;34m(self, tup)\u001b[0m\n\u001b[1;32m   1044\u001b[0m     axis \u001b[39m-\u001b[39m\u001b[39m=\u001b[39m \u001b[39m1\u001b[39m\n\u001b[1;32m   1045\u001b[0m     \u001b[39mcontinue\u001b[39;00m\n\u001b[0;32m-> 1047\u001b[0m obj \u001b[39m=\u001b[39m \u001b[39mgetattr\u001b[39;49m(obj, \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mname)\u001b[39m.\u001b[39;49m_getitem_axis(key, axis\u001b[39m=\u001b[39;49maxis)\n\u001b[1;32m   1048\u001b[0m axis \u001b[39m-\u001b[39m\u001b[39m=\u001b[39m \u001b[39m1\u001b[39m\n\u001b[1;32m   1050\u001b[0m \u001b[39m# if we have a scalar, we are done\u001b[39;00m\n",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/core/indexing.py:1312\u001b[0m, in \u001b[0;36m_LocIndexer._getitem_axis\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   1310\u001b[0m \u001b[39m# fall thru to straight lookup\u001b[39;00m\n\u001b[1;32m   1311\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_validate_key(key, axis)\n\u001b[0;32m-> 1312\u001b[0m \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_get_label(key, axis\u001b[39m=\u001b[39;49maxis)\n",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/core/indexing.py:1260\u001b[0m, in \u001b[0;36m_LocIndexer._get_label\u001b[0;34m(self, label, axis)\u001b[0m\n\u001b[1;32m   1258\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39m_get_label\u001b[39m(\u001b[39mself\u001b[39m, label, axis: \u001b[39mint\u001b[39m):\n\u001b[1;32m   1259\u001b[0m     \u001b[39m# GH#5567 this will fail if the label is not present in the axis.\u001b[39;00m\n\u001b[0;32m-> 1260\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mobj\u001b[39m.\u001b[39;49mxs(label, axis\u001b[39m=\u001b[39;49maxis)\n",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/core/generic.py:4056\u001b[0m, in \u001b[0;36mNDFrame.xs\u001b[0;34m(self, key, axis, level, drop_level)\u001b[0m\n\u001b[1;32m   4054\u001b[0m             new_index \u001b[39m=\u001b[39m index[loc]\n\u001b[1;32m   4055\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[0;32m-> 4056\u001b[0m     loc \u001b[39m=\u001b[39m index\u001b[39m.\u001b[39;49mget_loc(key)\n\u001b[1;32m   4058\u001b[0m     \u001b[39mif\u001b[39;00m \u001b[39misinstance\u001b[39m(loc, np\u001b[39m.\u001b[39mndarray):\n\u001b[1;32m   4059\u001b[0m         \u001b[39mif\u001b[39;00m loc\u001b[39m.\u001b[39mdtype \u001b[39m==\u001b[39m np\u001b[39m.\u001b[39mbool_:\n",
-      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/pandas/core/indexes/base.py:3805\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3803\u001b[0m     \u001b[39mreturn\u001b[39;00m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_engine\u001b[39m.\u001b[39mget_loc(casted_key)\n\u001b[1;32m   3804\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mKeyError\u001b[39;00m \u001b[39mas\u001b[39;00m err:\n\u001b[0;32m-> 3805\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mKeyError\u001b[39;00m(key) \u001b[39mfrom\u001b[39;00m \u001b[39merr\u001b[39;00m\n\u001b[1;32m   3806\u001b[0m \u001b[39mexcept\u001b[39;00m \u001b[39mTypeError\u001b[39;00m:\n\u001b[1;32m   3807\u001b[0m     \u001b[39m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[1;32m   3808\u001b[0m     \u001b[39m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[1;32m   3809\u001b[0m     \u001b[39m#  the TypeError.\u001b[39;00m\n\u001b[1;32m   3810\u001b[0m     \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_check_indexing_error(key)\n",
-      "\u001b[0;31mKeyError\u001b[0m: 2"
-     ]
+     "data": {
+      "text/plain": [
+       "0.934212921990396"
+      ]
+     },
+     "execution_count": 34,
+     "metadata": {},
+     "output_type": "execute_result"
     }
    ],
    "source": [
     "find_learning_curve_intersection(\n",
-    "    grouped_res.loc[2, :][\"f1_macro\"][\"mean\"].values[0],\n",
+    "    grouped_res.loc[ :][\"f1_macro\"][\"mean\"].values[0],\n",
     "    fit_learning_curve(\n",
-    "        grouped_tabpfn_res.loc[2, :].index,\n",
-    "        grouped_tabpfn_res.loc[2, :][\"f1_macro\"][\"mean\"],\n",
+    "        grouped_tabpfn_res.loc[:].index[:-1],\n",
+    "        grouped_tabpfn_res.loc[:][\"f1_macro\"][\"mean\"][:-1],\n",
     "    )[0],\n",
     ") / 10"
    ]
diff --git a/experiments/03_classification/mof_water_stability/run_experiment.py b/experiments/03_classification/mof_water_stability/run_experiment.py
index ebdfda3..35f429e 100644
--- a/experiments/03_classification/mof_water_stability/run_experiment.py
+++ b/experiments/03_classification/mof_water_stability/run_experiment.py
@@ -39,4 +39,4 @@ def train_test(train_size, seed):
 if __name__ == '__main__':
     for i in range(num_rounds):
         for train_size in train_sizes:
-            train_test(train_size=train_size, seed=i + 13)
\ No newline at end of file
+            train_test(train_size=train_size, seed=i +4567)
diff --git a/experiments/04_regression/henry/CH4_regression_res.pdf b/experiments/04_regression/henry/CH4_regression_res.pdf
index 6b52610..7ca65c5 100644
Binary files a/experiments/04_regression/henry/CH4_regression_res.pdf and b/experiments/04_regression/henry/CH4_regression_res.pdf differ
diff --git a/experiments/04_regression/henry/co2_regression_res.pdf b/experiments/04_regression/henry/co2_regression_res.pdf
index 8ac18a4..c9f9047 100644
Binary files a/experiments/04_regression/henry/co2_regression_res.pdf and b/experiments/04_regression/henry/co2_regression_res.pdf differ
diff --git a/experiments/04_regression/henry/plot_results.ipynb b/experiments/04_regression/henry/plot_results.ipynb
index 4ceed32..b4baf57 100644
--- a/experiments/04_regression/henry/plot_results.ipynb
+++ b/experiments/04_regression/henry/plot_results.ipynb
@@ -2,18 +2,9 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 35,
+   "execution_count": 1,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "The autoreload extension is already loaded. To reload it, use:\n",
-      "  %reload_ext autoreload\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "%load_ext autoreload\n",
     "%autoreload 2"
@@ -21,7 +12,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 36,
+   "execution_count": 2,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -44,7 +35,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 37,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -53,7 +44,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 38,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [
     {
@@ -64,6 +55,8 @@
        " 'out/20230205_122152/summary.pkl',\n",
        " 'out/20230205_193510/summary.pkl',\n",
        " 'out/20230207_100603/summary.pkl',\n",
+       " 'out/20230210_043446/summary.pkl',\n",
+       " 'out/20230210_055149/summary.pkl',\n",
        " 'out/20230201_191443/summary.pkl',\n",
        " 'out/20230208_142001/summary.pkl',\n",
        " 'out/20230206_030833/summary.pkl',\n",
@@ -75,6 +68,8 @@
        " 'out/20230207_134727/summary.pkl',\n",
        " 'out/20230205_140056/summary.pkl',\n",
        " 'out/20230207_032008/summary.pkl',\n",
+       " 'out/20230211_100800/summary.pkl',\n",
+       " 'out/20230210_011850/summary.pkl',\n",
        " 'out/20230206_215541/summary.pkl',\n",
        " 'out/20230205_163455/summary.pkl',\n",
        " 'out/20230205_153006/summary.pkl',\n",
@@ -82,7 +77,7 @@
        " 'out/20230205_200856/summary.pkl']"
       ]
      },
-     "execution_count": 38,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -93,7 +88,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 39,
+   "execution_count": 5,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -127,7 +122,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 40,
+   "execution_count": 6,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -137,7 +132,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 41,
+   "execution_count": 7,
    "metadata": {},
    "outputs": [
     {
@@ -211,6 +206,22 @@
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5</th>\n",
+       "      <td>1000</td>\n",
+       "      <td>0.319848</td>\n",
+       "      <td>1.664489</td>\n",
+       "      <td>0.185667</td>\n",
+       "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>6</th>\n",
+       "      <td>1000</td>\n",
+       "      <td>0.334091</td>\n",
+       "      <td>1.829350</td>\n",
+       "      <td>0.202126</td>\n",
+       "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>7</th>\n",
        "      <td>10</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
@@ -218,7 +229,7 @@
        "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>6</th>\n",
+       "      <th>8</th>\n",
        "      <td>500</td>\n",
        "      <td>0.819581</td>\n",
        "      <td>4.279287</td>\n",
@@ -226,7 +237,7 @@
        "      <td>(logKH_CO2, CO2 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>7</th>\n",
+       "      <th>9</th>\n",
        "      <td>200</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
@@ -234,7 +245,7 @@
        "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>8</th>\n",
+       "      <th>10</th>\n",
        "      <td>10</td>\n",
        "      <td>0.625195</td>\n",
        "      <td>1.598221</td>\n",
@@ -242,7 +253,7 @@
        "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>9</th>\n",
+       "      <th>11</th>\n",
        "      <td>1000</td>\n",
        "      <td>0.768096</td>\n",
        "      <td>3.581657</td>\n",
@@ -250,7 +261,7 @@
        "      <td>(logKH_CO2, CO2 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>10</th>\n",
+       "      <th>12</th>\n",
        "      <td>10</td>\n",
        "      <td>0.928437</td>\n",
        "      <td>3.418108</td>\n",
@@ -258,7 +269,7 @@
        "      <td>(logKH_CO2, CO2 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>11</th>\n",
+       "      <th>13</th>\n",
        "      <td>500</td>\n",
        "      <td>0.380700</td>\n",
        "      <td>2.293748</td>\n",
@@ -266,7 +277,7 @@
        "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>12</th>\n",
+       "      <th>14</th>\n",
        "      <td>200</td>\n",
        "      <td>0.849847</td>\n",
        "      <td>3.854435</td>\n",
@@ -274,7 +285,7 @@
        "      <td>(logKH_CO2, CO2 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>13</th>\n",
+       "      <th>15</th>\n",
        "      <td>100</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
@@ -282,7 +293,7 @@
        "      <td>(logKH_CO2, CO2 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>14</th>\n",
+       "      <th>16</th>\n",
        "      <td>20</td>\n",
        "      <td>0.398276</td>\n",
        "      <td>2.600651</td>\n",
@@ -290,7 +301,7 @@
        "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>15</th>\n",
+       "      <th>17</th>\n",
        "      <td>500</td>\n",
        "      <td>0.359207</td>\n",
        "      <td>2.291199</td>\n",
@@ -298,7 +309,23 @@
        "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>16</th>\n",
+       "      <th>18</th>\n",
+       "      <td>1000</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>19</th>\n",
+       "      <td>1000</td>\n",
+       "      <td>0.750338</td>\n",
+       "      <td>3.691657</td>\n",
+       "      <td>1.109880</td>\n",
+       "      <td>(logKH_CO2, CO2 Henry coefficient)</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>20</th>\n",
        "      <td>1000</td>\n",
        "      <td>0.339762</td>\n",
        "      <td>1.839350</td>\n",
@@ -306,7 +333,7 @@
        "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>17</th>\n",
+       "      <th>21</th>\n",
        "      <td>50</td>\n",
        "      <td>0.430810</td>\n",
        "      <td>2.580651</td>\n",
@@ -314,7 +341,7 @@
        "      <td>(logKH_CH4, CH4 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>18</th>\n",
+       "      <th>22</th>\n",
        "      <td>20</td>\n",
        "      <td>1.020252</td>\n",
        "      <td>3.974637</td>\n",
@@ -322,7 +349,7 @@
        "      <td>(logKH_CO2, CO2 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>19</th>\n",
+       "      <th>23</th>\n",
        "      <td>10</td>\n",
        "      <td>1.337436</td>\n",
        "      <td>4.390413</td>\n",
@@ -330,7 +357,7 @@
        "      <td>(logKH_CO2, CO2 Henry coefficient)</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>20</th>\n",
+       "      <th>24</th>\n",
        "      <td>100</td>\n",
        "      <td>0.951664</td>\n",
        "      <td>3.634435</td>\n",
@@ -348,22 +375,26 @@
        "2                 10       NaN        NaN       NaN   \n",
        "3                100  0.401663   3.127951  0.328874   \n",
        "4                200  0.844188   4.078015  1.277903   \n",
-       "5                 10       NaN        NaN       NaN   \n",
-       "6                500  0.819581   4.279287  1.138667   \n",
-       "7                200       NaN        NaN       NaN   \n",
-       "8                 10  0.625195   1.598221  0.534466   \n",
-       "9               1000  0.768096   3.581657  1.089680   \n",
-       "10                10  0.928437   3.418108  1.364941   \n",
-       "11               500  0.380700   2.293748  0.252555   \n",
-       "12               200  0.849847   3.854435  1.380816   \n",
-       "13               100       NaN        NaN       NaN   \n",
-       "14                20  0.398276   2.600651  0.294709   \n",
-       "15               500  0.359207   2.291199  0.226164   \n",
-       "16              1000  0.339762   1.839350  0.202901   \n",
-       "17                50  0.430810   2.580651  0.342190   \n",
-       "18                20  1.020252   3.974637  1.788910   \n",
-       "19                10  1.337436   4.390413  2.707927   \n",
-       "20               100  0.951664   3.634435  1.564700   \n",
+       "5               1000  0.319848   1.664489  0.185667   \n",
+       "6               1000  0.334091   1.829350  0.202126   \n",
+       "7                 10       NaN        NaN       NaN   \n",
+       "8                500  0.819581   4.279287  1.138667   \n",
+       "9                200       NaN        NaN       NaN   \n",
+       "10                10  0.625195   1.598221  0.534466   \n",
+       "11              1000  0.768096   3.581657  1.089680   \n",
+       "12                10  0.928437   3.418108  1.364941   \n",
+       "13               500  0.380700   2.293748  0.252555   \n",
+       "14               200  0.849847   3.854435  1.380816   \n",
+       "15               100       NaN        NaN       NaN   \n",
+       "16                20  0.398276   2.600651  0.294709   \n",
+       "17               500  0.359207   2.291199  0.226164   \n",
+       "18              1000       NaN        NaN       NaN   \n",
+       "19              1000  0.750338   3.691657  1.109880   \n",
+       "20              1000  0.339762   1.839350  0.202901   \n",
+       "21                50  0.430810   2.580651  0.342190   \n",
+       "22                20  1.020252   3.974637  1.788910   \n",
+       "23                10  1.337436   4.390413  2.707927   \n",
+       "24               100  0.951664   3.634435  1.564700   \n",
        "\n",
        "                                target  \n",
        "0   (logKH_CO2, CO2 Henry coefficient)  \n",
@@ -372,24 +403,28 @@
        "3   (logKH_CH4, CH4 Henry coefficient)  \n",
        "4   (logKH_CO2, CO2 Henry coefficient)  \n",
        "5   (logKH_CH4, CH4 Henry coefficient)  \n",
-       "6   (logKH_CO2, CO2 Henry coefficient)  \n",
+       "6   (logKH_CH4, CH4 Henry coefficient)  \n",
        "7   (logKH_CH4, CH4 Henry coefficient)  \n",
-       "8   (logKH_CH4, CH4 Henry coefficient)  \n",
-       "9   (logKH_CO2, CO2 Henry coefficient)  \n",
-       "10  (logKH_CO2, CO2 Henry coefficient)  \n",
-       "11  (logKH_CH4, CH4 Henry coefficient)  \n",
+       "8   (logKH_CO2, CO2 Henry coefficient)  \n",
+       "9   (logKH_CH4, CH4 Henry coefficient)  \n",
+       "10  (logKH_CH4, CH4 Henry coefficient)  \n",
+       "11  (logKH_CO2, CO2 Henry coefficient)  \n",
        "12  (logKH_CO2, CO2 Henry coefficient)  \n",
-       "13  (logKH_CO2, CO2 Henry coefficient)  \n",
-       "14  (logKH_CH4, CH4 Henry coefficient)  \n",
-       "15  (logKH_CH4, CH4 Henry coefficient)  \n",
+       "13  (logKH_CH4, CH4 Henry coefficient)  \n",
+       "14  (logKH_CO2, CO2 Henry coefficient)  \n",
+       "15  (logKH_CO2, CO2 Henry coefficient)  \n",
        "16  (logKH_CH4, CH4 Henry coefficient)  \n",
        "17  (logKH_CH4, CH4 Henry coefficient)  \n",
-       "18  (logKH_CO2, CO2 Henry coefficient)  \n",
+       "18  (logKH_CH4, CH4 Henry coefficient)  \n",
        "19  (logKH_CO2, CO2 Henry coefficient)  \n",
-       "20  (logKH_CO2, CO2 Henry coefficient)  "
+       "20  (logKH_CH4, CH4 Henry coefficient)  \n",
+       "21  (logKH_CH4, CH4 Henry coefficient)  \n",
+       "22  (logKH_CO2, CO2 Henry coefficient)  \n",
+       "23  (logKH_CO2, CO2 Henry coefficient)  \n",
+       "24  (logKH_CO2, CO2 Henry coefficient)  "
       ]
      },
-     "execution_count": 41,
+     "execution_count": 7,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -400,7 +435,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 42,
+   "execution_count": 8,
    "metadata": {},
    "outputs": [
     {
@@ -428,7 +463,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 43,
+   "execution_count": 9,
    "metadata": {},
    "outputs": [
     {
@@ -456,7 +491,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 44,
+   "execution_count": 10,
    "metadata": {},
    "outputs": [
     {
@@ -592,15 +627,15 @@
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1000</th>\n",
-       "      <td>1.918497</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>3.650163</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>3.833470</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>NaN</td>\n",
+       "      <td>1.947232</td>\n",
+       "      <td>0.033180</td>\n",
+       "      <td>0.016590</td>\n",
+       "      <td>3.649923</td>\n",
+       "      <td>0.000277</td>\n",
+       "      <td>0.000139</td>\n",
+       "      <td>3.991063</td>\n",
+       "      <td>0.181973</td>\n",
+       "      <td>0.090986</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"7\" valign=\"top\">(logKH_CO2, CO2 Henry coefficient)</th>\n",
@@ -677,15 +712,15 @@
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1000</th>\n",
-       "      <td>0.746770</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>3.795385</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>0.983762</td>\n",
-       "      <td>NaN</td>\n",
-       "      <td>NaN</td>\n",
+       "      <td>0.728411</td>\n",
+       "      <td>0.025964</td>\n",
+       "      <td>0.018360</td>\n",
+       "      <td>3.869646</td>\n",
+       "      <td>0.105021</td>\n",
+       "      <td>0.074261</td>\n",
+       "      <td>0.970257</td>\n",
+       "      <td>0.019099</td>\n",
+       "      <td>0.013505</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
@@ -701,14 +736,14 @@
        "                                   100               0.432989       NaN   \n",
        "                                   200               2.543246       NaN   \n",
        "                                   500               2.182982  0.022109   \n",
-       "                                   1000              1.918497       NaN   \n",
+       "                                   1000              1.947232  0.033180   \n",
        "(logKH_CO2, CO2 Henry coefficient) 10                4.042104  0.038477   \n",
        "                                   20                1.772298  1.435249   \n",
        "                                   50                1.293621       NaN   \n",
        "                                   100               1.000534  0.336725   \n",
        "                                   200               1.422456  0.983947   \n",
        "                                   500               1.096633       NaN   \n",
-       "                                   1000              0.746770       NaN   \n",
+       "                                   1000              0.728411  0.025964   \n",
        "\n",
        "                                                              max_error  \\\n",
        "                                                          sem      mean   \n",
@@ -719,14 +754,14 @@
        "                                   100                    NaN  2.042740   \n",
        "                                   200                    NaN  3.818133   \n",
        "                                   500               0.015634  3.680284   \n",
-       "                                   1000                   NaN  3.650163   \n",
+       "                                   1000              0.016590  3.649923   \n",
        "(logKH_CO2, CO2 Henry coefficient) 10                0.027207  6.933887   \n",
        "                                   20                1.014874  4.600462   \n",
        "                                   50                     NaN  4.457273   \n",
        "                                   100               0.238101  3.380528   \n",
        "                                   200               0.695756  4.018959   \n",
        "                                   500                    NaN  2.984516   \n",
-       "                                   1000                   NaN  3.795385   \n",
+       "                                   1000              0.018360  3.869646   \n",
        "\n",
        "                                                                         \\\n",
        "                                                          std       sem   \n",
@@ -737,14 +772,14 @@
        "                                   100                    NaN       NaN   \n",
        "                                   200                    NaN       NaN   \n",
        "                                   500               0.109662  0.077543   \n",
-       "                                   1000                   NaN       NaN   \n",
+       "                                   1000              0.000277  0.000139   \n",
        "(logKH_CO2, CO2 Henry coefficient) 10                0.472659  0.334220   \n",
        "                                   20                2.028087  1.434074   \n",
        "                                   50                     NaN       NaN   \n",
        "                                   100               0.411237  0.290789   \n",
        "                                   200               0.920006  0.650542   \n",
        "                                   500                    NaN       NaN   \n",
-       "                                   1000                   NaN       NaN   \n",
+       "                                   1000              0.105021  0.074261   \n",
        "\n",
        "                                                           mse            \\\n",
        "                                                          mean       std   \n",
@@ -755,14 +790,14 @@
        "                                   100                0.329331       NaN   \n",
        "                                   200                6.654583       NaN   \n",
        "                                   500                4.937507  0.098774   \n",
-       "                                   1000               3.833470       NaN   \n",
+       "                                   1000               3.991063  0.181973   \n",
        "(logKH_CO2, CO2 Henry coefficient) 10                17.388279  0.188537   \n",
        "                                   20                 4.909499  5.577929   \n",
        "                                   50                 2.222729       NaN   \n",
        "                                   100                1.512135  0.688021   \n",
        "                                   200                3.114559  3.119066   \n",
        "                                   500                1.623294       NaN   \n",
-       "                                   1000               0.983762       NaN   \n",
+       "                                   1000               0.970257  0.019099   \n",
        "\n",
        "                                                               \n",
        "                                                          sem  \n",
@@ -773,17 +808,17 @@
        "                                   100                    NaN  \n",
        "                                   200                    NaN  \n",
        "                                   500               0.069844  \n",
-       "                                   1000                   NaN  \n",
+       "                                   1000              0.090986  \n",
        "(logKH_CO2, CO2 Henry coefficient) 10                0.133316  \n",
        "                                   20                3.944191  \n",
        "                                   50                     NaN  \n",
        "                                   100               0.486504  \n",
        "                                   200               2.205513  \n",
        "                                   500                    NaN  \n",
-       "                                   1000                   NaN  "
+       "                                   1000              0.013505  "
       ]
      },
-     "execution_count": 44,
+     "execution_count": 10,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -794,7 +829,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 45,
+   "execution_count": 11,
    "metadata": {},
    "outputs": [
     {
@@ -803,7 +838,7 @@
        "Int64Index([10, 20, 50, 100, 200, 500, 1000], dtype='int64', name='num_train_points')"
       ]
      },
-     "execution_count": 45,
+     "execution_count": 11,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -814,7 +849,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 51,
+   "execution_count": 12,
    "metadata": {},
    "outputs": [
     {
@@ -827,7 +862,7 @@
     },
     {
      "data": {
-      "image/png": "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",
+      "image/png": "",
       "text/plain": [
        "<Figure size 330x250 with 1 Axes>"
       ]
@@ -893,7 +928,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 54,
+   "execution_count": 13,
    "metadata": {},
    "outputs": [
     {
@@ -906,7 +941,7 @@
     },
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 330x250 with 1 Axes>"
       ]
diff --git a/experiments/04_regression/opv/opv_regression_res.pdf b/experiments/04_regression/opv/opv_regression_res.pdf
index bb7467c..77c544a 100644
Binary files a/experiments/04_regression/opv/opv_regression_res.pdf and b/experiments/04_regression/opv/opv_regression_res.pdf differ
diff --git a/experiments/04_regression/rxn_suzuki/plot_results.ipynb b/experiments/04_regression/rxn_suzuki/plot_results.ipynb
index da16398..58b48d7 100644
--- a/experiments/04_regression/rxn_suzuki/plot_results.ipynb
+++ b/experiments/04_regression/rxn_suzuki/plot_results.ipynb
@@ -2,9 +2,18 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 18,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "The autoreload extension is already loaded. To reload it, use:\n",
+      "  %reload_ext autoreload\n"
+     ]
+    }
+   ],
    "source": [
     "%load_ext autoreload\n",
     "%autoreload 2"
@@ -12,7 +21,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 19,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -35,7 +44,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": 20,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -44,7 +53,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 21,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -118,7 +127,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 22,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -132,7 +141,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": 23,
    "metadata": {},
    "outputs": [
     {
@@ -193,10 +202,10 @@
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
-       "      <td>20</td>\n",
-       "      <td>0.230985</td>\n",
-       "      <td>0.545169</td>\n",
-       "      <td>0.075770</td>\n",
+       "      <td>200</td>\n",
+       "      <td>0.158095</td>\n",
+       "      <td>0.474110</td>\n",
+       "      <td>0.038167</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>...</th>\n",
@@ -206,35 +215,35 @@
        "      <td>...</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>244</th>\n",
+       "      <th>310</th>\n",
        "      <td>100</td>\n",
        "      <td>0.182754</td>\n",
        "      <td>0.651632</td>\n",
        "      <td>0.053980</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>245</th>\n",
+       "      <th>311</th>\n",
        "      <td>20</td>\n",
        "      <td>0.217642</td>\n",
        "      <td>0.594799</td>\n",
        "      <td>0.069545</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>246</th>\n",
+       "      <th>312</th>\n",
        "      <td>50</td>\n",
        "      <td>0.182502</td>\n",
        "      <td>0.569832</td>\n",
        "      <td>0.049196</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>247</th>\n",
+       "      <th>313</th>\n",
        "      <td>50</td>\n",
        "      <td>0.162210</td>\n",
        "      <td>0.476012</td>\n",
        "      <td>0.041240</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>248</th>\n",
+       "      <th>314</th>\n",
        "      <td>50</td>\n",
        "      <td>0.175537</td>\n",
        "      <td>0.500371</td>\n",
@@ -242,7 +251,7 @@
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
-       "<p>249 rows × 4 columns</p>\n",
+       "<p>315 rows × 4 columns</p>\n",
        "</div>"
       ],
       "text/plain": [
@@ -251,18 +260,18 @@
        "1                 100  0.173650   0.654809  0.049751\n",
        "2                 200  0.150851   0.477499  0.035805\n",
        "3                  10  0.249487   0.606126  0.083320\n",
-       "4                  20  0.230985   0.545169  0.075770\n",
+       "4                 200  0.158095   0.474110  0.038167\n",
        "..                ...       ...        ...       ...\n",
-       "244               100  0.182754   0.651632  0.053980\n",
-       "245                20  0.217642   0.594799  0.069545\n",
-       "246                50  0.182502   0.569832  0.049196\n",
-       "247                50  0.162210   0.476012  0.041240\n",
-       "248                50  0.175537   0.500371  0.047862\n",
+       "310               100  0.182754   0.651632  0.053980\n",
+       "311                20  0.217642   0.594799  0.069545\n",
+       "312                50  0.182502   0.569832  0.049196\n",
+       "313                50  0.162210   0.476012  0.041240\n",
+       "314                50  0.175537   0.500371  0.047862\n",
        "\n",
-       "[249 rows x 4 columns]"
+       "[315 rows x 4 columns]"
       ]
      },
-     "execution_count": 6,
+     "execution_count": 23,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -273,7 +282,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 24,
    "metadata": {},
    "outputs": [
     {
@@ -297,7 +306,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 8,
+   "execution_count": 25,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -320,7 +329,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 26,
    "metadata": {},
    "outputs": [
     {
@@ -409,63 +418,63 @@
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">SuzukiMiyaura</th>\n",
        "      <th>10</th>\n",
-       "      <td>0.384222</td>\n",
-       "      <td>0.049428</td>\n",
+       "      <td>0.387627</td>\n",
+       "      <td>0.050081</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
        "      <td>NaN</td>\n",
-       "      <td>0.384222</td>\n",
-       "      <td>0.049428</td>\n",
+       "      <td>0.387627</td>\n",
+       "      <td>0.050081</td>\n",
        "      <td>NaN</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>20</th>\n",
-       "      <td>0.377083</td>\n",
-       "      <td>0.061123</td>\n",
-       "      <td>0.008822</td>\n",
+       "      <td>0.379016</td>\n",
+       "      <td>0.059124</td>\n",
+       "      <td>0.007570</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.0</td>\n",
-       "      <td>0.377083</td>\n",
-       "      <td>0.061123</td>\n",
-       "      <td>0.008822</td>\n",
+       "      <td>0.379016</td>\n",
+       "      <td>0.059124</td>\n",
+       "      <td>0.007570</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>50</th>\n",
-       "      <td>0.328298</td>\n",
-       "      <td>0.055534</td>\n",
-       "      <td>0.008100</td>\n",
+       "      <td>0.331000</td>\n",
+       "      <td>0.054577</td>\n",
+       "      <td>0.007046</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.0</td>\n",
-       "      <td>0.328298</td>\n",
-       "      <td>0.055534</td>\n",
-       "      <td>0.008100</td>\n",
+       "      <td>0.331000</td>\n",
+       "      <td>0.054577</td>\n",
+       "      <td>0.007046</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>100</th>\n",
-       "      <td>0.296596</td>\n",
-       "      <td>0.064108</td>\n",
+       "      <td>0.303770</td>\n",
+       "      <td>0.063460</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
        "      <td>NaN</td>\n",
-       "      <td>0.296596</td>\n",
-       "      <td>0.064108</td>\n",
+       "      <td>0.303770</td>\n",
+       "      <td>0.063460</td>\n",
        "      <td>NaN</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>200</th>\n",
-       "      <td>0.252400</td>\n",
-       "      <td>0.053091</td>\n",
-       "      <td>0.007508</td>\n",
+       "      <td>0.249516</td>\n",
+       "      <td>0.055852</td>\n",
+       "      <td>0.007093</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.0</td>\n",
-       "      <td>0.252400</td>\n",
-       "      <td>0.053091</td>\n",
-       "      <td>0.007508</td>\n",
+       "      <td>0.249516</td>\n",
+       "      <td>0.055852</td>\n",
+       "      <td>0.007093</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
@@ -477,25 +486,25 @@
        "representation num_train_points                                                \n",
        "DreherDoyle    10                     NaN       NaN       NaN       NaN  NaN   \n",
        "               200               0.288333  0.028577  0.011667       1.0  0.0   \n",
-       "SuzukiMiyaura  10                0.384222  0.049428       NaN       1.0  0.0   \n",
-       "               20                0.377083  0.061123  0.008822       1.0  0.0   \n",
-       "               50                0.328298  0.055534  0.008100       1.0  0.0   \n",
-       "               100               0.296596  0.064108       NaN       1.0  0.0   \n",
-       "               200               0.252400  0.053091  0.007508       1.0  0.0   \n",
+       "SuzukiMiyaura  10                0.387627  0.050081       NaN       1.0  0.0   \n",
+       "               20                0.379016  0.059124  0.007570       1.0  0.0   \n",
+       "               50                0.331000  0.054577  0.007046       1.0  0.0   \n",
+       "               100               0.303770  0.063460       NaN       1.0  0.0   \n",
+       "               200               0.249516  0.055852  0.007093       1.0  0.0   \n",
        "\n",
        "                                           mse                      \n",
        "                                 sem      mean       std       sem  \n",
        "representation num_train_points                                     \n",
        "DreherDoyle    10                NaN       NaN       NaN       NaN  \n",
        "               200               0.0  0.288333  0.028577  0.011667  \n",
-       "SuzukiMiyaura  10                NaN  0.384222  0.049428       NaN  \n",
-       "               20                0.0  0.377083  0.061123  0.008822  \n",
-       "               50                0.0  0.328298  0.055534  0.008100  \n",
-       "               100               NaN  0.296596  0.064108       NaN  \n",
-       "               200               0.0  0.252400  0.053091  0.007508  "
+       "SuzukiMiyaura  10                NaN  0.387627  0.050081       NaN  \n",
+       "               20                0.0  0.379016  0.059124  0.007570  \n",
+       "               50                0.0  0.331000  0.054577  0.007046  \n",
+       "               100               NaN  0.303770  0.063460       NaN  \n",
+       "               200               0.0  0.249516  0.055852  0.007093  "
       ]
      },
-     "execution_count": 9,
+     "execution_count": 26,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -506,7 +515,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 10,
+   "execution_count": 27,
    "metadata": {},
    "outputs": [
     {
@@ -566,63 +575,63 @@
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>10</th>\n",
-       "      <td>0.238243</td>\n",
-       "      <td>0.021082</td>\n",
-       "      <td>0.002981</td>\n",
-       "      <td>0.591920</td>\n",
-       "      <td>0.082783</td>\n",
-       "      <td>0.011707</td>\n",
-       "      <td>0.079158</td>\n",
-       "      <td>0.012713</td>\n",
-       "      <td>0.001798</td>\n",
+       "      <td>0.237364</td>\n",
+       "      <td>0.020451</td>\n",
+       "      <td>0.002556</td>\n",
+       "      <td>0.587779</td>\n",
+       "      <td>0.082086</td>\n",
+       "      <td>0.010261</td>\n",
+       "      <td>0.078504</td>\n",
+       "      <td>0.011800</td>\n",
+       "      <td>0.001475</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>20</th>\n",
-       "      <td>0.231774</td>\n",
-       "      <td>0.022823</td>\n",
-       "      <td>0.003294</td>\n",
-       "      <td>0.567870</td>\n",
-       "      <td>0.060934</td>\n",
-       "      <td>0.008795</td>\n",
-       "      <td>0.074529</td>\n",
-       "      <td>0.011887</td>\n",
-       "      <td>0.001716</td>\n",
+       "      <td>0.229894</td>\n",
+       "      <td>0.022176</td>\n",
+       "      <td>0.002839</td>\n",
+       "      <td>0.570632</td>\n",
+       "      <td>0.061013</td>\n",
+       "      <td>0.007812</td>\n",
+       "      <td>0.073788</td>\n",
+       "      <td>0.011339</td>\n",
+       "      <td>0.001452</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>50</th>\n",
-       "      <td>0.204192</td>\n",
-       "      <td>0.012856</td>\n",
-       "      <td>0.001875</td>\n",
-       "      <td>0.553276</td>\n",
-       "      <td>0.059843</td>\n",
-       "      <td>0.008729</td>\n",
-       "      <td>0.060921</td>\n",
-       "      <td>0.007097</td>\n",
-       "      <td>0.001035</td>\n",
+       "      <td>0.204391</td>\n",
+       "      <td>0.014303</td>\n",
+       "      <td>0.001846</td>\n",
+       "      <td>0.554730</td>\n",
+       "      <td>0.065272</td>\n",
+       "      <td>0.008427</td>\n",
+       "      <td>0.061020</td>\n",
+       "      <td>0.007529</td>\n",
+       "      <td>0.000972</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>100</th>\n",
-       "      <td>0.189825</td>\n",
-       "      <td>0.015701</td>\n",
-       "      <td>0.002266</td>\n",
-       "      <td>0.555705</td>\n",
-       "      <td>0.056613</td>\n",
-       "      <td>0.008171</td>\n",
-       "      <td>0.053584</td>\n",
-       "      <td>0.006564</td>\n",
-       "      <td>0.000947</td>\n",
+       "      <td>0.191551</td>\n",
+       "      <td>0.016207</td>\n",
+       "      <td>0.002058</td>\n",
+       "      <td>0.553684</td>\n",
+       "      <td>0.051037</td>\n",
+       "      <td>0.006482</td>\n",
+       "      <td>0.054192</td>\n",
+       "      <td>0.006682</td>\n",
+       "      <td>0.000849</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>200</th>\n",
-       "      <td>0.184552</td>\n",
-       "      <td>0.013297</td>\n",
-       "      <td>0.001777</td>\n",
-       "      <td>0.576614</td>\n",
-       "      <td>0.063081</td>\n",
-       "      <td>0.008429</td>\n",
-       "      <td>0.052412</td>\n",
-       "      <td>0.006386</td>\n",
-       "      <td>0.000853</td>\n",
+       "      <td>0.183791</td>\n",
+       "      <td>0.013115</td>\n",
+       "      <td>0.001590</td>\n",
+       "      <td>0.567413</td>\n",
+       "      <td>0.062955</td>\n",
+       "      <td>0.007634</td>\n",
+       "      <td>0.052071</td>\n",
+       "      <td>0.005995</td>\n",
+       "      <td>0.000727</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
@@ -632,23 +641,23 @@
        "                       mae                     max_error                      \\\n",
        "                      mean       std       sem      mean       std       sem   \n",
        "num_train_points                                                               \n",
-       "10                0.238243  0.021082  0.002981  0.591920  0.082783  0.011707   \n",
-       "20                0.231774  0.022823  0.003294  0.567870  0.060934  0.008795   \n",
-       "50                0.204192  0.012856  0.001875  0.553276  0.059843  0.008729   \n",
-       "100               0.189825  0.015701  0.002266  0.555705  0.056613  0.008171   \n",
-       "200               0.184552  0.013297  0.001777  0.576614  0.063081  0.008429   \n",
+       "10                0.237364  0.020451  0.002556  0.587779  0.082086  0.010261   \n",
+       "20                0.229894  0.022176  0.002839  0.570632  0.061013  0.007812   \n",
+       "50                0.204391  0.014303  0.001846  0.554730  0.065272  0.008427   \n",
+       "100               0.191551  0.016207  0.002058  0.553684  0.051037  0.006482   \n",
+       "200               0.183791  0.013115  0.001590  0.567413  0.062955  0.007634   \n",
        "\n",
        "                       mse                      \n",
        "                      mean       std       sem  \n",
        "num_train_points                                \n",
-       "10                0.079158  0.012713  0.001798  \n",
-       "20                0.074529  0.011887  0.001716  \n",
-       "50                0.060921  0.007097  0.001035  \n",
-       "100               0.053584  0.006564  0.000947  \n",
-       "200               0.052412  0.006386  0.000853  "
+       "10                0.078504  0.011800  0.001475  \n",
+       "20                0.073788  0.011339  0.001452  \n",
+       "50                0.061020  0.007529  0.000972  \n",
+       "100               0.054192  0.006682  0.000849  \n",
+       "200               0.052071  0.005995  0.000727  "
       ]
      },
-     "execution_count": 10,
+     "execution_count": 27,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -659,12 +668,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
+   "execution_count": 28,
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 330x250 with 1 Axes>"
       ]
@@ -676,18 +685,18 @@
    "source": [
     "fig, ax = plt.subplots(1, 1)\n",
     "ax.plot(\n",
-    "    compiled_grouped_res.loc[\"DreherDoyle\", :].index,\n",
-    "    compiled_grouped_res.loc[\"DreherDoyle\", :][\"mae\"][\"mean\"],\n",
+    "    compiled_grouped_res.loc[\"SuzukiMiyaura\", :].index,\n",
+    "    compiled_grouped_res.loc[\"SuzukiMiyaura\", :][\"mae\"][\"mean\"],\n",
     "    label=\"GPT\",\n",
     "    marker=\"o\",\n",
     ")\n",
     "\n",
     "ax.fill_between(\n",
-    "    compiled_grouped_res.loc[\"DreherDoyle\", :].index,\n",
-    "    compiled_grouped_res.loc[\"DreherDoyle\", :][\"mae\"][\"mean\"]\n",
-    "    - compiled_grouped_res.loc[\"DreherDoyle\", :][\"mae\"][\"sem\"],\n",
-    "    compiled_grouped_res.loc[\"DreherDoyle\", :][\"mae\"][\"mean\"]\n",
-    "    + compiled_grouped_res.loc[\"DreherDoyle\", :][\"mae\"][\"sem\"],\n",
+    "    compiled_grouped_res.loc[\"SuzukiMiyaura\", :].index,\n",
+    "    compiled_grouped_res.loc[\"SuzukiMiyaura\", :][\"mae\"][\"mean\"]\n",
+    "    - compiled_grouped_res.loc[\"SuzukiMiyaura\", :][\"mae\"][\"sem\"],\n",
+    "    compiled_grouped_res.loc[\"SuzukiMiyaura\", :][\"mae\"][\"mean\"]\n",
+    "    + compiled_grouped_res.loc[\"SuzukiMiyaura\", :][\"mae\"][\"sem\"],\n",
     "    alpha=0.5,\n",
     ")\n",
     "\n",
@@ -750,19 +759,19 @@
     "matplotx.line_labels()\n",
     "\n",
     "ax.set_xlabel(\"number of training points\", labelpad=4)\n",
-    "ylabel_top(\"MAE / %\", y_pad=-0.05)\n",
+    "ylabel_top(\"MAE / \", y_pad=-0.05)\n",
     "# ax.set_xscale('log')\n",
     "\n",
-    "range_frame(\n",
-    "    ax, \n",
-    "     compiled_ohe_tanimoto_grouped.index,\n",
-    "     np.stack(\n",
-    "        [\n",
-    "             compiled_rxnfp_linear_grouped[\"mae\"][\"mean\"] + compiled_rxnfp_linear_grouped[\"mae\"][\"sem\"],\n",
-    "                 compiled_ohe_tanimoto_grouped[\"mae\"][\"mean\"] - compiled_ohe_tanimoto_grouped[\"mae\"][\"sem\"]\n",
-    "        ]\n",
-    "     ).flatten()\n",
-    ")\n",
+    "# range_frame(\n",
+    "#     ax, \n",
+    "#      compiled_ohe_tanimoto_grouped.index,\n",
+    "#      np.stack(\n",
+    "#         [\n",
+    "#              compiled_rxnfp_linear_grouped[\"mae\"][\"mean\"] + compiled_rxnfp_linear_grouped[\"mae\"][\"sem\"],\n",
+    "#                  compiled_ohe_tanimoto_grouped[\"mae\"][\"mean\"] - compiled_ohe_tanimoto_grouped[\"mae\"][\"sem\"]\n",
+    "#         ]\n",
+    "#      ).flatten()\n",
+    "# )\n",
     "\n",
     "fig.savefig(\"suzuki_regression_res.pdf\", bbox_inches=\"tight\")"
    ]
diff --git a/experiments/04_regression/rxn_suzuki/suzuki_regression_res.pdf b/experiments/04_regression/rxn_suzuki/suzuki_regression_res.pdf
index 0ef78ff..186b934 100644
Binary files a/experiments/04_regression/rxn_suzuki/suzuki_regression_res.pdf and b/experiments/04_regression/rxn_suzuki/suzuki_regression_res.pdf differ
diff --git a/experiments/04_regression/solubility/plot_results.ipynb b/experiments/04_regression/solubility/plot_results.ipynb
index e38f556..e39a8dc 100644
--- a/experiments/04_regression/solubility/plot_results.ipynb
+++ b/experiments/04_regression/solubility/plot_results.ipynb
@@ -2,9 +2,18 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 11,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "The autoreload extension is already loaded. To reload it, use:\n",
+      "  %reload_ext autoreload\n"
+     ]
+    }
+   ],
    "source": [
     "%load_ext autoreload\n",
     "%autoreload 2"
@@ -12,7 +21,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 12,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -35,7 +44,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": 13,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -44,16 +53,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 14,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "dict_keys(['representation', 'num_train_points', 'r2', 'max_error', 'mean_absolute_error', 'mean_squared_error', 'rmse', 'baseline'])"
+       "dict_keys(['representation', 'num_train_points', 'r2', 'max_error', 'mean_absolute_error', 'mean_squared_error', 'rmse', 'mean_absolute_percentage_error', 'baseline'])"
       ]
      },
-     "execution_count": 4,
+     "execution_count": 14,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -64,7 +73,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 15,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -142,7 +151,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": 16,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -156,7 +165,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 17,
    "metadata": {},
    "outputs": [
     {
@@ -186,7 +195,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 8,
+   "execution_count": 18,
    "metadata": {},
    "outputs": [
     {
@@ -266,7 +275,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 19,
    "metadata": {},
    "outputs": [
     {
@@ -334,32 +343,47 @@
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
-       "      <th rowspan=\"2\" valign=\"top\">SMILES</th>\n",
+       "      <th rowspan=\"3\" valign=\"top\">SMILES</th>\n",
        "      <th>10</th>\n",
-       "      <td>1.231429</td>\n",
-       "      <td>0.041661</td>\n",
-       "      <td>4</td>\n",
-       "      <td>0.020831</td>\n",
-       "      <td>3.8275</td>\n",
-       "      <td>0.357899</td>\n",
-       "      <td>4</td>\n",
-       "      <td>0.178949</td>\n",
-       "      <td>2.496094</td>\n",
-       "      <td>0.196126</td>\n",
-       "      <td>4</td>\n",
-       "      <td>0.098063</td>\n",
+       "      <td>1.242351</td>\n",
+       "      <td>0.039306</td>\n",
+       "      <td>6</td>\n",
+       "      <td>0.016047</td>\n",
+       "      <td>3.67</td>\n",
+       "      <td>0.376404</td>\n",
+       "      <td>6</td>\n",
+       "      <td>0.153666</td>\n",
+       "      <td>2.496066</td>\n",
+       "      <td>0.153863</td>\n",
+       "      <td>6</td>\n",
+       "      <td>0.062814</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>20</th>\n",
-       "      <td>1.286250</td>\n",
+       "      <td>1.220893</td>\n",
+       "      <td>0.092429</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.065357</td>\n",
+       "      <td>3.75</td>\n",
+       "      <td>0.098995</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.070000</td>\n",
+       "      <td>2.464504</td>\n",
+       "      <td>0.230646</td>\n",
+       "      <td>2</td>\n",
+       "      <td>0.163091</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>50</th>\n",
+       "      <td>1.256071</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1</td>\n",
        "      <td>NaN</td>\n",
-       "      <td>3.6800</td>\n",
+       "      <td>3.79</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1</td>\n",
        "      <td>NaN</td>\n",
-       "      <td>2.627595</td>\n",
+       "      <td>2.570996</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1</td>\n",
        "      <td>NaN</td>\n",
@@ -372,23 +396,26 @@
        "                                      mae                           max_error  \\\n",
        "                                     mean       std count       sem      mean   \n",
        "representation num_train_points                                                 \n",
-       "SMILES         10                1.231429  0.041661     4  0.020831    3.8275   \n",
-       "               20                1.286250       NaN     1       NaN    3.6800   \n",
+       "SMILES         10                1.242351  0.039306     6  0.016047      3.67   \n",
+       "               20                1.220893  0.092429     2  0.065357      3.75   \n",
+       "               50                1.256071       NaN     1       NaN      3.79   \n",
        "\n",
        "                                                                mse            \\\n",
        "                                      std count       sem      mean       std   \n",
        "representation num_train_points                                                 \n",
-       "SMILES         10                0.357899     4  0.178949  2.496094  0.196126   \n",
-       "               20                     NaN     1       NaN  2.627595       NaN   \n",
+       "SMILES         10                0.376404     6  0.153666  2.496066  0.153863   \n",
+       "               20                0.098995     2  0.070000  2.464504  0.230646   \n",
+       "               50                     NaN     1       NaN  2.570996       NaN   \n",
        "\n",
        "                                                 \n",
        "                                count       sem  \n",
        "representation num_train_points                  \n",
-       "SMILES         10                   4  0.098063  \n",
-       "               20                   1       NaN  "
+       "SMILES         10                   6  0.062814  \n",
+       "               20                   2  0.163091  \n",
+       "               50                   1       NaN  "
       ]
      },
-     "execution_count": 9,
+     "execution_count": 19,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -399,12 +426,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 10,
+   "execution_count": 21,
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 330x250 with 1 Axes>"
       ]
@@ -554,31 +581,27 @@
     "ylabel_top(\"MAE / logS\", y_pad=-0.1)\n",
     "# ax.set_xscale('log')\n",
     "\n",
-    "range_frame(\n",
-    "    ax, \n",
-    "     compiled_gpr_grouped.loc[:].index,\n",
-    "     np.array([compiled_weave_grouped[\"mae\"][\"mean\"],compiled_esol_grouped.loc[:][\"mae\"][\"mean\"]])\n",
-    ")\n",
+    "# range_frame(\n",
+    "#     ax, \n",
+    "#      compiled_gpr_grouped.loc[:].index,\n",
+    "#      np.array([compiled_weave_grouped[\"mae\"][\"mean\"],compiled_esol_grouped.loc[:][\"mae\"][\"mean\"]])\n",
+    "# )\n",
     "\n",
     "fig.savefig(\"solubility_regression_res.pdf\", bbox_inches=\"tight\")"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 41,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "array([1.27230892, 1.04162198])"
-      ]
-     },
-     "execution_count": 41,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
    "source": []
   },
   {
diff --git a/experiments/04_regression/solubility/run_experiments.py b/experiments/04_regression/solubility/run_experiments.py
index 6e9c074..e583b2b 100644
--- a/experiments/04_regression/solubility/run_experiments.py
+++ b/experiments/04_regression/solubility/run_experiments.py
@@ -32,10 +32,10 @@ def train_test_model(representation, num_train_points, seed):
     train_formatted = formatter(train_data)
     test_formatted = formatter(test_data)
 
-    gpr_baseline = train_test_solubility_regression_baseline(
-        train_data,
-        test_data,
-    )
+    # gpr_baseline = train_test_solubility_regression_baseline(
+    #     train_data,
+    #     test_data,
+    # )
 
     tuner = Tuner(n_epochs=8, learning_rate_multiplier=0.02, wandb_sync=False)
 
@@ -51,13 +51,13 @@ def train_test_model(representation, num_train_points, seed):
         "representation": representation,
         "num_train_points": num_train_points,
         **res,
-        "baseline": gpr_baseline,
+        #"baseline": gpr_baseline,
     }
 
     save_pickle(Path(tune_res["outdir"]) / "summary.pkl", summary)
 
     print(
-        f"Ran train size {num_train_points} and got MAE {res['mean_absolute_error']}, GPR baseline {gpr_baseline['xgb']['mean_absolute_error']}"
+        f"Ran train size {num_train_points} and got MAE {res['mean_absolute_error']}"
     )
 
 
@@ -65,4 +65,4 @@ if __name__ == "__main__":
     for seed in range(num_repeats):
         for representation in representations:
             for num_train_points in num_training_points:
-                train_test_model(representation, num_train_points, seed + 57)
+                train_test_model(representation, num_train_points, seed + 4567)
diff --git a/experiments/04_regression/solubility/solubility_regression_res.pdf b/experiments/04_regression/solubility/solubility_regression_res.pdf
index 906abe0..a24506a 100644
Binary files a/experiments/04_regression/solubility/solubility_regression_res.pdf and b/experiments/04_regression/solubility/solubility_regression_res.pdf differ
diff --git a/experiments/05_inverse/bandgap/biasing/manual/bias_generation.ipynb b/experiments/05_inverse/bandgap/biasing/manual/bias_generation.ipynb
index 3c46d6f..b94dba1 100644
--- a/experiments/05_inverse/bandgap/biasing/manual/bias_generation.ipynb
+++ b/experiments/05_inverse/bandgap/biasing/manual/bias_generation.ipynb
@@ -12,7 +12,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": 2,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -21,8 +21,15 @@
     "from gptchem.tuner import Tuner\n",
     "from gptchem.extractor import InverseExtractor\n",
     "from gptchem.querier import Querier\n",
+    "import pandas as pd\n",
+    "import numpy as np \n",
+    "from collections import defaultdict\n",
+    "\n",
+    "from gptchem.evaluator import is_valid\n",
+    "\n",
+    "import random\n",
     "\n",
-    "import numpy as np "
+    "from gptchem.plotsettings import * "
    ]
   },
   {
@@ -31,12 +38,13 @@
    "metadata": {},
    "outputs": [],
    "source": [
-    "num_samples = 100"
+    "num_samples = 100\n",
+    "TEMPERATURES = [0.0, 0.1, 0.2, 0.5, 0.75, 1.0, 1.25, 1.5]"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -46,7 +54,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 5,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -60,13 +68,22 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 6,
    "metadata": {},
    "outputs": [],
    "source": [
     "tuner = Tuner()"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": 7,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "extractor = InverseExtractor()"
+   ]
+  },
   {
    "cell_type": "markdown",
    "metadata": {},
@@ -76,7 +93,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 8,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -92,6 +109,26 @@
     "train_set = data.sample(num_samples)"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": 14,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "2.585626760870966"
+      ]
+     },
+     "execution_count": 14,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "train_set['GFN2_HOMO_LUMO_GAP_mean_ev'].mean()"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": 8,
@@ -119,12 +156,1160 @@
      "text": [
       "Uploaded file from /Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230209_170232/train.jsonl: file-nYMwTmPBskIID3jKNgtKtdxf\n"
      ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "wandb: Currently logged in as: kjappelbaum. Use `wandb login --relogin` to force relogin\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "A run for fine-tune ft-t24yOKINJbekcMBORKwIpS5C was previously created but didn't end successfully\n",
+      "A new wandb run will be created for fine-tune ft-t24yOKINJbekcMBORKwIpS5C and previous run will be overwritten\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "wandb: wandb version 0.13.10 is available!  To upgrade, please run:\n",
+      "wandb:  $ pip install wandb --upgrade\n",
+      "wandb: Tracking run with wandb version 0.13.7\n",
+      "wandb: Run data is saved locally in /Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/wandb/run-20230209_182516-ft-t24yOKINJbekcMBORKwIpS5C\n",
+      "wandb: Run `wandb offline` to turn off syncing.\n",
+      "wandb: Syncing run ft-t24yOKINJbekcMBORKwIpS5C\n",
+      "wandb: ⭐️ View project at https://wandb.ai/kjappelbaum/GPT-3\n",
+      "wandb: 🚀 View run at https://wandb.ai/kjappelbaum/GPT-3/runs/ft-t24yOKINJbekcMBORKwIpS5C\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/bin/openai\", line 8, in <module>\n",
+      "    sys.exit(main())\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/_openai_scripts.py\", line 63, in main\n",
+      "    args.func(args)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/cli.py\", line 527, in sync\n",
+      "    resp = openai.wandb_logger.WandbLogger.sync(\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/wandb_logger.py\", line 73, in sync\n",
+      "    fine_tune_logged = [\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/wandb_logger.py\", line 74, in <listcomp>\n",
+      "    cls._log_fine_tune(\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/wandb_logger.py\", line 162, in _log_fine_tune\n",
+      "    step = metrics.pop(\"step\")\n",
+      "KeyError: 'step'\n",
+      "wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.\n",
+      "wandb: Synced ft-t24yOKINJbekcMBORKwIpS5C: https://wandb.ai/kjappelbaum/GPT-3/runs/ft-t24yOKINJbekcMBORKwIpS5C\n",
+      "wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
+      "wandb: Find logs at: ./wandb/run-20230209_182516-ft-t24yOKINJbekcMBORKwIpS5C/logs\n"
+     ]
     }
    ],
    "source": [
     "tune_res_0 = tuner(formatted_0)"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": 12,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "{'base_model': 'ada',\n",
+       " 'batch_size': None,\n",
+       " 'n_epochs': 4,\n",
+       " 'learning_rate_multiplier': None,\n",
+       " 'run_name': None,\n",
+       " 'wandb_sync': True,\n",
+       " 'outdir': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230209_170232',\n",
+       " 'train_filename': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230209_170232/train.jsonl',\n",
+       " 'valid_filename': 'None',\n",
+       " 'model_name': 'ada:ft-lsmoepfl-2023-02-09-17-22-56',\n",
+       " 'ft_id': 'ft-KYUUSQvS2nkwk6r1bA68dLdy',\n",
+       " 'date': '20230209_182529',\n",
+       " 'train_file_id': 'file-nYMwTmPBskIID3jKNgtKtdxf',\n",
+       " 'valid_file_id': None}"
+      ]
+     },
+     "execution_count": 12,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "tune_res_0"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "querier_0 = Querier('ada:ft-lsmoepfl-2023-02-09-17-22-56', max_tokens=600)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 10,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "expected_gaps_0 = generate_desired_dist(3.5, 0.2, 1000)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 11,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "expected_frame_0 = pd.DataFrame({\n",
+    "    'SMILES': ['SMILE'] * 1000,\n",
+    "    'GFN2_HOMO_LUMO_GAP_mean_ev': expected_gaps_0\n",
+    "})"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 12,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "formatted_test_0 = formatter(expected_frame_0)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 13,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "completions_0 = defaultdict(list)\n",
+    "smiles_0 = defaultdict(list)\n",
+    "\n",
+    "for temp in TEMPERATURES:\n",
+    "    try:\n",
+    "        completions = querier_0(formatted_test_0, temperature=temp)\n",
+    "        extracted = extractor(completions)\n",
+    "        completions_0[temp] = completions\n",
+    "        smiles_0[temp] = extracted\n",
+    "    except Exception:\n",
+    "        pass"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 18,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "unique_smiles_0 = set()\n",
+    "for t, v in smiles_0.items():\n",
+    "    unique_smiles_0.update(v)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 19,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "4099"
+      ]
+     },
+     "execution_count": 19,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "len(unique_smiles_0)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 21,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "valid_smiles_0 = [s for s in unique_smiles_0 if is_valid(s)]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 22,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "178"
+      ]
+     },
+     "execution_count": 22,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "len(valid_smiles_0)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 24,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "with open('xtb_inputs/0.txt', \"w\") as handle:\n",
+    "    for smile in valid_smiles_0:\n",
+    "        handle.write(smile+'\\n')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 26,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "with open('xtb_inputs/0_sample.txt', \"w\") as handle:\n",
+    "    for smile in random.sample(valid_smiles_0, 100):\n",
+    "        handle.write(smile+'\\n')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 8,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_0 = pd.read_json('/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230209_170232/train.jsonl', lines=True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_0['gap'] = train_0['representation'].apply(lambda x: x[0])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 10,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "xtb_outputs_0 = pd.read_csv('xtb_outputs/0.csv')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 11,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "(array([ 1.,  2.,  1.,  5.,  4.,  8.,  4.,  3.,  3.,  7., 11.,  9., 11.,\n",
+       "         9.,  7.,  2.,  3.,  1.,  1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,\n",
+       "         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n",
+       "         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]),\n",
+       " array([ 0.34340049,  0.58116254,  0.8189246 ,  1.05668666,  1.29444871,\n",
+       "         1.53221077,  1.76997282,  2.00773488,  2.24549694,  2.48325899,\n",
+       "         2.72102105,  2.95878311,  3.19654516,  3.43430722,  3.67206928,\n",
+       "         3.90983133,  4.14759339,  4.38535545,  4.6231175 ,  4.86087956,\n",
+       "         5.09864162,  5.33640367,  5.57416573,  5.81192779,  6.04968984,\n",
+       "         6.2874519 ,  6.52521396,  6.76297601,  7.00073807,  7.23850012,\n",
+       "         7.47626218,  7.71402424,  7.95178629,  8.18954835,  8.42731041,\n",
+       "         8.66507246,  8.90283452,  9.14059658,  9.37835863,  9.61612069,\n",
+       "         9.85388275, 10.0916448 , 10.32940686, 10.56716892, 10.80493097,\n",
+       "        11.04269303, 11.28045509, 11.51821714, 11.7559792 , 11.99374126,\n",
+       "        12.23150331]),\n",
+       " <BarContainer object of 50 artists>)"
+      ]
+     },
+     "execution_count": 11,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "image/png": "iVBORw0KGgoAAAANSUhEUgAAASwAAADmCAYAAABvebgTAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8o6BhiAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAQtUlEQVR4nO3deXCU933H8Y9Wu7pvdHALZBlL2AhwOCQMBkuY+26CAdeKHR8xjdvOZNKMQztDm8k0M23a6XTGUzclwcExtdNC5CNE2MJgY7C4QRRxmUsCJIQihCR07u7TP+worCVkVjzy6qd9v/7x7LMP+3z/wG+effa3z4ZYlmUJAAzgCPQAAHC3CBYAYxAsAMYgWACMQbAAGINgATAGwQJgDIIFwBgEC4AxnIE8+NaS3Voxe0YgR7BVbOHmOz7XuGnN1zgJMDAF9AzrZtOtQB4egGF4SwjAGAQLgDEIFgBjECwAxiBYAIxBsAAYI6DrsEzT0zorAH2PMywAxiBYAIxBsAAYg2ABMAbBAmAMggXAGAQLgDEIFgBjECwAxiBYAIxBsAAYg2ABMIbfX35uaGrWO7v26lzlVUlS5sihWjJrmmKjoyRJx89e0I7Sw7rR0KSUxHgtfHSqRg8fYu/UAIKSX2dYlmVp07vvKzIiXOueX6OXn10tj8erog/3SJIqqmq0tWS3lhdM1/q1T6kg92FtLCpWfWNTnwwPILj4FyxJc/ImafHMXLmcToWHuTT5oSxduFItSSotK9eUcVlKH5omh8Oh7IyRys5I18ETZ/pidgBBxq9gOUJCNGbUcIW5XJ3bLl6tVkpivCSppq5eaUmJPn8mLTlRNXX19z4pgKB3Tzfwq6y+rv3HT6lw8eOSpOaWNjmdoT77uJxONbe0dvvnG5qatbGouPPxhKxMTczKvJeRAAxgvQ7WxSvV+vV7JVo5d1bnRfWoyHC53R6f/TrcbkVFRnT7GnExUXpm2bzejgAgyPQqWIfKz6j4kwN6ctFsjR42uHN7alKCaupu+Ox7rfZG51tGALgXfq/DKt5zQB8dLNPaJ5b4xEqScnPGat/xU6qoqpHX69XJ8xU6ef6SJj/0gG0DAwhefp9hfbjviFxOp/7t11t8tq+en6/sjJFaUTBdW0p2q76hUcmJ8Xp62TwlxMbYNjCA4OV3sP7p+y/0+Py4MRkaNyaj1wMBwJ3w1RwAxiBYAIxBsAAYg2ABMAbBAmAMggXAGAQLgDEIFgBjECwAxiBYAIxxT/fDGmhiCzcHegQAPeAMC4AxCBYAYxAsAMYgWACMQbAAGINgATAGwQJgDIIFwBgEC4AxCBYAYxAsAMYgWACMQbAAGINgATAGwQJgDIIFwBgEC4AxCBYAYxAsAMYgWACMQbAAGKNXv5pz7PQ5bfngY7W2d2j92kJFR0ZIks5VXtV//e/vFBbm8tn/r59coUEJcfc+LYCg5lewLMvSrgPHVFp2UqsW5Ou1ou1d9hk1bLBeXLnYtgEB4I/8CtatllZVVtfopdVL1eH29NVMANAtv4IVExWpwiVzJEl1Nxu73cfj8WpLyW6Vn7ukqIhw5U+ZqInZmfc+KYCgZ+svP0dHRigiPEzfyL5fSx+bpnMVV/Wrd97XoIQ4jRyS2mX/hqZmbSwq7nw8IStTE7OIG4Du2RqswclJenbF/M7HD4weofvTh+nUhYpugxUXE6Vnls2zcwQAA5ityxosy1J7h7vLdpfT1i4CCFK2Bmvv0RP6xdZtun6jXl7L0plLl3X+cpUezBxl52EABCm/T31eefNtVVbVyPri8Y9ffV0hkvLGj9XiWXlqvNWsV3/znjrcbqUkxqtwyRylJiXYOjSA4OR3sL63ammPz8+bPkXzpk/p9UAAcCd8NQeAMQgWAGMQLADGIFgAjEGwABiDYAEwBsECYAyCBcAYBAuAMQgWAGMQLADGIFgAjEGwABiDYAEwBsECYAyCBcAYBAuAMQgWAGMQLADGIFgAjEGwABiDYAEwBsECYAyCBcAYBAuAMQgWAGMQLADGcAZ6gIGkLedIl23hZRMlSbGFm3vcr/0H/9x3gwEDBGdYAIxBsAAYg2ABMAbBAmCMXl10P3b6nLZ88LFa2zu0fm2hoiMjOp87fvaCdpQe1o2GJqUkxmvho1M1evgQ2wYGELz8OsOyLEs79x/Vtt37tWpBfpfnK6pqtLVkt5YXTNf6tU+pIPdhbSwqVn1jk20DAwhefgXrVkurKqtr9NLqpRo8KKnL86Vl5ZoyLkvpQ9PkcDiUnTFS2RnpOnjijG0DAwhefr0ljImKVOGSOZKkupuNXZ6vqatX5ohhPtvSkhNVXXuj29draGrWxqLizscTsjI1MSvTn5H8dvt6KABmsXXhaHNLm5zOUJ9tLqdTzS2t3e4fFxOlZ5bNs3MEAAOYrZ8SRkWGy+32+GzrcLsVddtFeQDoLVuDlZqUoJo637d/12pvKCUx3s7DAAhStgYrN2es9h0/pYqqGnm9Xp08X6GT5y9p8kMP2HkYAEHK72tYr7z5tiqramR98fjHr76uEEl548dqaf4jWlEwXVtKdqu+oVHJifF6etk8JcTG2Ds1gKDkd7C+t2ppj8+PG5OhcWMyej0QANwJX80BYAyCBcAY3MCvj3V3s77u/P1nm7puyyy0exzAaJxhATAGwQJgDIIFwBgEC4AxCBYAYxAsAMYgWACMERTrsG5f49SWc1zSn37gFIA5OMMCYAyCBcAYBAuAMQgWAGMQLADGIFgAjEGwABiDYAEwRlAsHO0Ld3tjvnvBTf0AX5xhATAGwQJgDIIFwBgEC4AxCBYAYxAsAMYgWACMQbAAGINgATAGwQJgDIIFwBgEC4AxbP3y8/t7D2rXgWNyOkM7t8VFR+kHT6+08zAAgpTtd2uYNXm85kybZPfLAgBvCQGYw/YzrIamZm3Ysk1XamqVmpSoxbNyNTwt5Y77biwq7nw8IStTE7My7/pYA+l+Uf9YdPyOz61bNu5rnATov2wNVuqgRNXWN2h5wXTFRUfp40Nl+uVvi/XD7zyhiLCwLvvHxUTpmWXz7BwBwABm61vCCQ/cpzUL8jUoIU4ul1OPTZ2oDrdbl6tr7TwMgCBla7DaO9yyLKvzccgX/3Xd9qkhAPSWrW8J3yreqbiYaOVPmaCoiAh9dPCYYqOjNCw12c7DAAhStgZrxewZ+u2OT/Sz134jh8Oh9KFpenb5fJ91WQDQW7YGKzoyQn++aLadLwkAnViHBcAYBAuAMQbcD6mG/exv7mq/7n4INbxsot3j2OL2RaX/Ura5y/ONm9Z8neMAAcMZFgBjECwAxiBYAIxBsAAYg2ABMAbBAmAMggXAGANuHda96G5tlgkG0o0MgZ5whgXAGAQLgDEIFgBjECwAxiBYAIxBsAAYg2ABMEa/XIf1VeuKYgs/vydUW86df3x0oOp+rRg/tIrgwBkWAGMQLADGIFgAjEGwABiDYAEwBsECYAyCBcAYBAuAMUIsy7ICdfAfvbFB4VPDumy//YdD8dXWLbN/4Sg3AISd7LrJJGdYAIxBsAAYg2ABMAbBQp87cuqzQI9w15i1b1TV1tnyOrbfrcFrWdpReliHy8+qtb1dI4ekakXBDMXHRtt9KBji6KnPNDErM9Bj3BVm7RvVf6jTkOSke34d28+wPj5YplPnK/TdlYu07rk1GjE4VRu2blMAP4wEMEDYHqzSsnLNfWSyEmJj5HI5lT91otra23XxSrXdhwIQZGxdh9Xhdutv//2XWvf8GiXExnRu37Blm8bdP1pTc7J99v/Jz9+Q1+vtfBwfE624mCi7xvFbQ1NzQI/vD2btG8zaN7qbNT4mWitmz/DrdWy9htXc2iZJcjl9X9blDNWt1tYu+//dC0/aeXgAA5ytbwmjIsIlfX6mdbsOt0fRERF2HgpAELI1WC6nU4lxsaqpq+/c5rUs1dTdUEpSgp2HAhCEbL/onjd+rLbvOaCbjbfU4XZr574jCg8L0+hhg+0+FIAgY/uXn72WpZJPD+nwybNqa+/QiMEpWjF7hs9FeADojYDeraG/aGhq1ju79upc5VVJUubIoVoya5pio/vvJzAer1f/8eY7qrx2XS98c6HuGzE00CPd0YH/O60PPj2obz4+U2NGDQ/0ON2qqKrRtt37VHX9D/JalhLjYjVzUo6+MXZMoEeTJB07fU5bPvhYre0dWr+2UNGRf7omfPzsBe0oPawbDU1KSYzXwkenavTwIf1uVo/Hq+17DujIqc/U3uHW4ORELZqZpxGDU+76tYP+qzmWZWnTu+8rMiJc655fo5efXS2Px6uiD/cEerQefXTwmJLiY5XQz79BUFpWrr1HT+jFlUv6bawk6a3incoYPkQ/em6N1r9YqAUzpuit4l262XgroHNZlqWd+49q2+79WrUgv8vzFVU12lqyW8sLpmv92qdUkPuwNhYVq76xqd/Nun3vAZ2rvKq/enK51q99StkZ6Xrt7WK5PZ67PgbBkjQnb5IWz8yVy+lUeJhLkx/K0oV+vNC16nqdSo+d1NL8RwI9So+qa+v04b6jeu7PFigpPjbQ4/QofWiaPB6v3B6PPF6v3G6PkuJjFRMdGdC5brW0qrK6Ri+tXqrBg7p+taW0rFxTxmUpfWiaHA6HsjNGKjsjXQdPnOl3s07MytSqBfmKjY6Sw+HQtAlj1XirRXU3G+/6GP3yl5+/To6QkC7/8l+8Wq2UxPgATdQzj8ert7bv1NL8aT5vC/qjDz49pJwxGXqreKcuX6tValKCFs3M0/C05ECP1sWK2TO0+Xc79ONXX1eIpMT4WH33W4sV6gjsv+kxUZEqXDJHkrr9H7umrl6ZI4b5bEtLTlR17Y2vZb7bfdWsQ1IG+Ty+eOWaXM5Qvxa/Bv0Z1pdVVl/X/uOnNO+RyYEepVs79h3WkORBevC+UYEepUeWZelsxRW1tLbpiXmP6eVnV2nUsMHaWPR7tbV3BHo8H5Zl6Y33ShQXE61/+Itv6yd/+R3NnDRe//k/76q1rT3Q4/WouaVNTmeozzaX06nmlq4LtfuTWy2tevejTzVn2iRFhHW96/CdEKzbXLxSrV+9vV0r584K6EXLO7l8rVaHys9qyay8QI/ylW61tKq1rV2PTspRdGSEwlwuzZk2SW3tblVWXw/0eD5q6upVfr5CC2dMVWREuFwup/LGj1WYy6UT5y4GerweRUWGy+32vQbU4XYrqh+ffd9suqUNW7bpoczRmjlpvF9/NujfEv7RofIzKv7kgJ5cNLvfrhk7faFCTc0t+ukv/rtzW1tbuzYWFStnTIZWzp0VuOG+JDIiXKEOh0JCQny2h4RIYa7+9dfO6/3ig3LfURUSEqL+/hl6alKCaup83/5dq73Rby9pXKmp1aZ33tfMSeM1bcKDfv/5/vU3J0CK9xxQ+blLWvvEkn59cbgg92EV5D7ss+2nGzZr5dxZ/W5ZQ6jDoQlZmSr59JBWPD5DrlCndh08qviYaA390rWMQEsdlKDUpARt33NQc6dNkiPUoSMnz6q+oVH3pw/76hcIoNycsdpYVKyx943S8LRknb54WSfPX9L3v/2tQI/WxYnPLqrowz1aOXem7k/v3SfGrMOS9MN//blcTqdCQ33fIa+en6/sjJEBmuru9NdgSVJre7t+v3u/ys9dktvjUfrQNC2emadBCXGBHq2LGw2Neu+jUl28Wi2v19Lg5CTNnz5FI4ekBno0vfLm26qsqpGlz6+3hYSEKESff6tkaf4jOn7mvEr2HVF9Q6OSE+O18NFcZQTokkZPs1bV1ulS1bUuN0fIyxmr+TOm3NXrEywAxuCiOwBjECwAxiBYAIxBsAAYg2ABMAbBAmAMggXAGAQLgDEIFgBjECwAxiBYAIxBsAAY4/8Bc+6I/2MQON8AAAAASUVORK5CYII=",
+      "text/plain": [
+       "<Figure size 330x250 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "plt.hist(train_0['gap'])\n",
+    "plt.hist(xtb_outputs_0['gaps'], alpha=.5, bins=50)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "## 1st iteration"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 41,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_data_1 = pd.DataFrame(\n",
+    "    {\n",
+    "        \"SMILES\": train_0['label'].to_list() +  xtb_outputs_0['smiles'].to_list(),\n",
+    "        \"GFN2_HOMO_LUMO_GAP_mean_ev\": train_0['gap'].to_list() + xtb_outputs_0['gaps'].to_list()\n",
+    "    }\n",
+    ")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 43,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_data_1.dropna(inplace=True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 47,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_data_1_selected = train_data_1[train_data_1['GFN2_HOMO_LUMO_GAP_mean_ev']>2.5]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 48,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "121"
+      ]
+     },
+     "execution_count": 48,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "len(train_data_1_selected)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 49,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "formatted_1 = formatter(train_data_1_selected)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 50,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "Upload progress: 100%|██████████| 50.8k/50.8k [00:00<00:00, 49.3Mit/s]\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Uploaded file from /Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230209_222854/train.jsonl: file-LXxUjqsHvueMeCFZ6VjJD9EV\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "wandb: Currently logged in as: kjappelbaum. Use `wandb login --relogin` to force relogin\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "A run for fine-tune ft-t24yOKINJbekcMBORKwIpS5C was previously created but didn't end successfully\n",
+      "A new wandb run will be created for fine-tune ft-t24yOKINJbekcMBORKwIpS5C and previous run will be overwritten\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "wandb: wandb version 0.13.10 is available!  To upgrade, please run:\n",
+      "wandb:  $ pip install wandb --upgrade\n",
+      "wandb: Tracking run with wandb version 0.13.7\n",
+      "wandb: Run data is saved locally in /Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/wandb/run-20230210_033523-ft-t24yOKINJbekcMBORKwIpS5C\n",
+      "wandb: Run `wandb offline` to turn off syncing.\n",
+      "wandb: Syncing run ft-t24yOKINJbekcMBORKwIpS5C\n",
+      "wandb: ⭐️ View project at https://wandb.ai/kjappelbaum/GPT-3\n",
+      "wandb: 🚀 View run at https://wandb.ai/kjappelbaum/GPT-3/runs/ft-t24yOKINJbekcMBORKwIpS5C\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/bin/openai\", line 8, in <module>\n",
+      "    sys.exit(main())\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/_openai_scripts.py\", line 63, in main\n",
+      "    args.func(args)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/cli.py\", line 527, in sync\n",
+      "    resp = openai.wandb_logger.WandbLogger.sync(\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/wandb_logger.py\", line 73, in sync\n",
+      "    fine_tune_logged = [\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/wandb_logger.py\", line 74, in <listcomp>\n",
+      "    cls._log_fine_tune(\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/wandb_logger.py\", line 162, in _log_fine_tune\n",
+      "    step = metrics.pop(\"step\")\n",
+      "KeyError: 'step'\n",
+      "wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.\n",
+      "wandb: Synced ft-t24yOKINJbekcMBORKwIpS5C: https://wandb.ai/kjappelbaum/GPT-3/runs/ft-t24yOKINJbekcMBORKwIpS5C\n",
+      "wandb: Synced 7 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
+      "wandb: Find logs at: ./wandb/run-20230210_033523-ft-t24yOKINJbekcMBORKwIpS5C/logs\n"
+     ]
+    }
+   ],
+   "source": [
+    "tune_res_1 = tuner(formatted_1)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 51,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "{'base_model': 'ada',\n",
+       " 'batch_size': None,\n",
+       " 'n_epochs': 4,\n",
+       " 'learning_rate_multiplier': None,\n",
+       " 'run_name': None,\n",
+       " 'wandb_sync': True,\n",
+       " 'outdir': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230209_222854',\n",
+       " 'train_filename': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230209_222854/train.jsonl',\n",
+       " 'valid_filename': 'None',\n",
+       " 'model_name': 'ada:ft-lsmoepfl-2023-02-10-02-32-57',\n",
+       " 'ft_id': 'ft-AphrpbwXTGF1sKHIaWFA5GxI',\n",
+       " 'date': '20230210_033537',\n",
+       " 'train_file_id': 'file-LXxUjqsHvueMeCFZ6VjJD9EV',\n",
+       " 'valid_file_id': None}"
+      ]
+     },
+     "execution_count": 51,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "tune_res_1"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 52,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "querier_1 = Querier('ada:ft-lsmoepfl-2023-02-10-02-32-57', max_tokens=600)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 53,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "expected_gaps_1 = generate_desired_dist(4.5, 0.2, 2000)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 54,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "expected_frame_1 = pd.DataFrame({\n",
+    "    'SMILES': ['SMILE'] * 2000,\n",
+    "    'GFN2_HOMO_LUMO_GAP_mean_ev': expected_gaps_1\n",
+    "})"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 55,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "formatted_test_1 = formatter(expected_frame_1)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 56,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "completions_1 = defaultdict(list)\n",
+    "smiles_1 = defaultdict(list)\n",
+    "\n",
+    "for temp in TEMPERATURES:\n",
+    "    try:\n",
+    "        completions = querier_1(formatted_test_1, temperature=temp)\n",
+    "        extracted = extractor(completions)\n",
+    "        completions_1[temp] = completions\n",
+    "        smiles_1[temp] = extracted\n",
+    "    except Exception:\n",
+    "        pass"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 58,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "unique_smiles_1 = set()\n",
+    "for t, v in smiles_1.items():\n",
+    "    unique_smiles_1.update(v)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 59,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "2148"
+      ]
+     },
+     "execution_count": 59,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "len(unique_smiles_1)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 60,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "valid_smiles_1 = [s for s in unique_smiles_1 if is_valid(s)]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 61,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "644"
+      ]
+     },
+     "execution_count": 61,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "len(valid_smiles_1)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 62,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "with open('xtb_inputs/1.txt', \"w\") as handle:\n",
+    "    for smile in valid_smiles_1:\n",
+    "        handle.write(smile+'\\n')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 64,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "with open('xtb_inputs/1_sample.txt', \"w\") as handle:\n",
+    "    for smile in random.sample(valid_smiles_1, 100):\n",
+    "        handle.write(smile+'\\n')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 13,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "(array([ 2.,  0.,  0.,  0.,  1.,  0.,  0.,  3.,  1.,  0.,  4.,  3.,  3.,\n",
+       "         0.,  3.,  3.,  4.,  9.,  6.,  6.,  6.,  7.,  7.,  8., 11.,  3.,\n",
+       "         1.,  3.,  1.,  0.,  1.,  1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,\n",
+       "         1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n",
+       "         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n",
+       "         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n",
+       "         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n",
+       "         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]),\n",
+       " array([ 1.55303513,  1.63827338,  1.72351164,  1.80874989,  1.89398814,\n",
+       "         1.9792264 ,  2.06446465,  2.1497029 ,  2.23494116,  2.32017941,\n",
+       "         2.40541766,  2.49065592,  2.57589417,  2.66113242,  2.74637068,\n",
+       "         2.83160893,  2.91684718,  3.00208544,  3.08732369,  3.17256194,\n",
+       "         3.2578002 ,  3.34303845,  3.4282767 ,  3.51351496,  3.59875321,\n",
+       "         3.68399146,  3.76922972,  3.85446797,  3.93970622,  4.02494448,\n",
+       "         4.11018273,  4.19542098,  4.28065924,  4.36589749,  4.45113574,\n",
+       "         4.536374  ,  4.62161225,  4.7068505 ,  4.79208876,  4.87732701,\n",
+       "         4.96256526,  5.04780352,  5.13304177,  5.21828002,  5.30351828,\n",
+       "         5.38875653,  5.47399478,  5.55923304,  5.64447129,  5.72970954,\n",
+       "         5.8149478 ,  5.90018605,  5.9854243 ,  6.07066256,  6.15590081,\n",
+       "         6.24113906,  6.32637732,  6.41161557,  6.49685382,  6.58209208,\n",
+       "         6.66733033,  6.75256858,  6.83780684,  6.92304509,  7.00828334,\n",
+       "         7.0935216 ,  7.17875985,  7.2639981 ,  7.34923636,  7.43447461,\n",
+       "         7.51971286,  7.60495112,  7.69018937,  7.77542762,  7.86066588,\n",
+       "         7.94590413,  8.03114238,  8.11638064,  8.20161889,  8.28685714,\n",
+       "         8.3720954 ,  8.45733365,  8.5425719 ,  8.62781016,  8.71304841,\n",
+       "         8.79828666,  8.88352492,  8.96876317,  9.05400142,  9.13923968,\n",
+       "         9.22447793,  9.30971618,  9.39495444,  9.48019269,  9.56543094,\n",
+       "         9.6506692 ,  9.73590745,  9.8211457 ,  9.90638396,  9.99162221,\n",
+       "        10.07686046]),\n",
+       " <BarContainer object of 100 artists>)"
+      ]
+     },
+     "execution_count": 13,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "image/png": "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",
+      "text/plain": [
+       "<Figure size 330x250 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "train_1 = pd.read_json('/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230209_222854/train.jsonl', lines=True)\n",
+    "train_1['gap'] = train_1['representation'].apply(lambda x: x[0])\n",
+    "xtb_outputs_1 = pd.read_csv('xtb_outputs/1.csv')\n",
+    "plt.hist(train_0['gap'])\n",
+    "#plt.hist(train_1['gap'], bins=50)\n",
+    "plt.hist(xtb_outputs_1['gaps'], alpha=.5, bins=100)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "## Second iteration"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 14,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_data_2 = pd.DataFrame(\n",
+    "    {\n",
+    "        \"SMILES\": train_0['label'].to_list() +  xtb_outputs_0['smiles'].to_list() + train_1['label'].to_list() + xtb_outputs_1['smiles'].to_list(),\n",
+    "        \"GFN2_HOMO_LUMO_GAP_mean_ev\": train_0['gap'].to_list() + xtb_outputs_0['gaps'].to_list() + train_1['gap'].to_list() + xtb_outputs_1['gaps'].to_list()\n",
+    "    }\n",
+    ")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 15,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_data_2.dropna(inplace=True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 16,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "<AxesSubplot: >"
+      ]
+     },
+     "execution_count": 16,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "image/png": "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",
+      "text/plain": [
+       "<Figure size 330x250 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "train_data_2['GFN2_HOMO_LUMO_GAP_mean_ev'].hist(bins=100)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 17,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_data_2_selected = train_data_2[train_data_2['GFN2_HOMO_LUMO_GAP_mean_ev']>3]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 18,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "344"
+      ]
+     },
+     "execution_count": 18,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "len(train_data_2_selected)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 19,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "formatted_2 = formatter(train_data_2_selected)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 21,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "Upload progress: 100%|██████████| 141k/141k [00:00<00:00, 99.1Mit/s]\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Uploaded file from /Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230210_181210/train.jsonl: file-T6oxh1ocCq2rxcCwPeUOxoNw\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "wandb: Currently logged in as: kjappelbaum. Use `wandb login --relogin` to force relogin\n",
+      "wandb: wandb version 0.13.10 is available!  To upgrade, please run:\n",
+      "wandb:  $ pip install wandb --upgrade\n",
+      "wandb: Tracking run with wandb version 0.13.7\n",
+      "wandb: Run data is saved locally in /Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/wandb/run-20230211_043955-ft-ELdTIxvhC4puGJyiOhMCEaUW\n",
+      "wandb: Run `wandb offline` to turn off syncing.\n",
+      "wandb: Syncing run ft-ELdTIxvhC4puGJyiOhMCEaUW\n",
+      "wandb: ⭐️ View project at https://wandb.ai/kjappelbaum/GPT-3\n",
+      "wandb: 🚀 View run at https://wandb.ai/kjappelbaum/GPT-3/runs/ft-ELdTIxvhC4puGJyiOhMCEaUW\n",
+      "Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/bin/openai\", line 8, in <module>\n",
+      "    sys.exit(main())\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/_openai_scripts.py\", line 63, in main\n",
+      "    args.func(args)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/cli.py\", line 527, in sync\n",
+      "    resp = openai.wandb_logger.WandbLogger.sync(\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/wandb_logger.py\", line 73, in sync\n",
+      "    fine_tune_logged = [\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/wandb_logger.py\", line 74, in <listcomp>\n",
+      "    cls._log_fine_tune(\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/openai/wandb_logger.py\", line 162, in _log_fine_tune\n",
+      "    step = metrics.pop(\"step\")\n",
+      "KeyError: 'step'\n",
+      "wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.\n",
+      "wandb: Synced ft-ELdTIxvhC4puGJyiOhMCEaUW: https://wandb.ai/kjappelbaum/GPT-3/runs/ft-ELdTIxvhC4puGJyiOhMCEaUW\n",
+      "wandb: Synced 7 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
+      "wandb: Find logs at: ./wandb/run-20230211_043955-ft-ELdTIxvhC4puGJyiOhMCEaUW/logs\n"
+     ]
+    }
+   ],
+   "source": [
+    "tune_res_2 = tuner(formatted_2)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 22,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "{'base_model': 'ada',\n",
+       " 'batch_size': None,\n",
+       " 'n_epochs': 4,\n",
+       " 'learning_rate_multiplier': None,\n",
+       " 'run_name': None,\n",
+       " 'wandb_sync': True,\n",
+       " 'outdir': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230210_181210',\n",
+       " 'train_filename': '/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230210_181210/train.jsonl',\n",
+       " 'valid_filename': 'None',\n",
+       " 'model_name': 'ada:ft-lsmoepfl-2023-02-11-03-37-08',\n",
+       " 'ft_id': 'ft-0ukqRtb8zQDe7m8jmuQ90oJD',\n",
+       " 'date': '20230211_044008',\n",
+       " 'train_file_id': 'file-T6oxh1ocCq2rxcCwPeUOxoNw',\n",
+       " 'valid_file_id': None}"
+      ]
+     },
+     "execution_count": 22,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "tune_res_2"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 23,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "querier_2 = Querier('ada:ft-lsmoepfl-2023-02-11-03-37-08', max_tokens=600)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 24,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "expected_gaps_2 = generate_desired_dist(5.5, 0.2, 2000)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 25,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "expected_frame_2 = pd.DataFrame({\n",
+    "    'SMILES': ['SMILE'] * 2000,\n",
+    "    'GFN2_HOMO_LUMO_GAP_mean_ev': expected_gaps_2\n",
+    "})"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 26,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "formatted_test_2 = formatter(expected_frame_2)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 27,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "completions_2 = defaultdict(list)\n",
+    "smiles_2 = defaultdict(list)\n",
+    "\n",
+    "for temp in TEMPERATURES:\n",
+    "    try:\n",
+    "        completions = querier_2(formatted_test_2, temperature=temp)\n",
+    "        extracted = extractor(completions)\n",
+    "        completions_2[temp] = completions\n",
+    "        smiles_2[temp] = extracted\n",
+    "    except Exception:\n",
+    "        pass"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 28,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "unique_smiles_2 = set()\n",
+    "for t, v in smiles_2.items():\n",
+    "    unique_smiles_2.update(v)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 29,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "3027"
+      ]
+     },
+     "execution_count": 29,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "len(unique_smiles_2)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "valid_smiles_2 = [s for s in unique_smiles_2 if is_valid(s)]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 31,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "with open('xtb_inputs/2.txt', \"w\") as handle:\n",
+    "    for smile in valid_smiles_2:\n",
+    "        handle.write(smile+'\\n')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 32,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "with open('xtb_inputs/2_sample.txt', \"w\") as handle:\n",
+    "    for smile in random.sample(valid_smiles_2, 100):\n",
+    "        handle.write(smile+'\\n')"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "## Third iteration"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 40,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "<matplotlib.legend.Legend at 0x281091f40>"
+      ]
+     },
+     "execution_count": 40,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 330x250 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "train_2 = pd.read_json('/Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230210_181210/train.jsonl', lines=True)\n",
+    "train_2['gap'] = train_2['representation'].apply(lambda x: x[0])\n",
+    "xtb_outputs_2 = pd.read_csv('xtb_outputs/2.csv')\n",
+    "plt.hist(train_2['gap'], density=True, label='Train 2')\n",
+    "plt.hist(train_1['gap'], bins=50, density=True, label='Train 1')\n",
+    "plt.hist(xtb_outputs_1['gaps'], alpha=.5, bins=100, label='Generated', density=True)\n",
+    "plt.legend()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 41,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_data_3 = pd.DataFrame(\n",
+    "    {\n",
+    "        \"SMILES\": train_0['label'].to_list() +  xtb_outputs_0['smiles'].to_list() + train_1['label'].to_list() + xtb_outputs_1['smiles'].to_list() + train_2['label'].to_list() + xtb_outputs_2['smiles'].to_list(),\n",
+    "        \"GFN2_HOMO_LUMO_GAP_mean_ev\": train_0['gap'].to_list() + xtb_outputs_0['gaps'].to_list() + train_1['gap'].to_list() + xtb_outputs_1['gaps'].to_list() + train_2['gap'].to_list() + xtb_outputs_2['gaps'].to_list()\n",
+    "    }\n",
+    ")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 42,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_data_3.dropna(inplace=True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 45,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "<AxesSubplot: >"
+      ]
+     },
+     "execution_count": 45,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "image/png": "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",
+      "text/plain": [
+       "<Figure size 330x250 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "train_data_3['GFN2_HOMO_LUMO_GAP_mean_ev'].hist(bins=100)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 50,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import openai"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 51,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "openai.api_key  = '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'"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 46,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "train_data_3_selected = train_data_3[train_data_3['GFN2_HOMO_LUMO_GAP_mean_ev']>3.5]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 48,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "formatted_3 = formatter(train_data_3_selected)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 52,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "Upload progress: 100%|██████████| 131k/131k [00:00<00:00, 205Mit/s]\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Uploaded file from /Users/kevinmaikjablonka/git/kjappelbaum/gptchem/experiments/05_inverse/bandgap/biasing/manual/out/20230210_181210/train.jsonl: file-EfZM3QJRiTMk4PyaGwG7S6Qi\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "wandb: Currently logged in as: kjappelbaum. Use `wandb login --relogin` to force relogin\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "A run for fine-tune ft-ELdTIxvhC4puGJyiOhMCEaUW was previously created but didn't end successfully\n",
+      "A new wandb run will be created for fine-tune ft-ELdTIxvhC4puGJyiOhMCEaUW and previous run will be overwritten\n"
+     ]
+    }
+   ],
+   "source": [
+    "tune_res_3 = tuner(formatted_3)"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": null,
diff --git a/experiments/05_inverse/bandgap/biasing/run_experiments_full_qmug.py b/experiments/05_inverse/bandgap/biasing/run_experiments_full_qmug.py
index 7288cd7..37ade52 100644
--- a/experiments/05_inverse/bandgap/biasing/run_experiments_full_qmug.py
+++ b/experiments/05_inverse/bandgap/biasing/run_experiments_full_qmug.py
@@ -41,7 +41,7 @@ def make_input_frame(smiles, gaps):
 def train(smiles, gaps):
     input_df, formatted = make_input_frame(smiles, gaps)
 
-    tuner = Tuner(n_epochs=8, learning_rate_multiplier=0.02, wandb_sync=False)
+    tuner = Tuner(n_epochs=4, learning_rate_multiplier=0.02, wandb_sync=False)
     tune_res = tuner(formatted)
     return formatted, tune_res
 
@@ -152,7 +152,7 @@ def main(
         minimum_step_ = minimum_step
         logger.info(f"Iteration {iter_counter}")
         formatted, tune_res = train(smiles, gaps)
-        generated_df, temp_res, df_for_eval = sample_across_temperatures(tune_res, current_mean)
+        generated_df, temp_res, df_for_eval = sample_across_temperatures(tune_res, current_mean, num_points=num_samples*20)
         generated_dfs.append(generated_df)
 
         # ToDo: also incorporate here some of the old ones
diff --git a/experiments/10_functional_groups/gptchemcache/cache.db b/experiments/10_functional_groups/gptchemcache/cache.db
index 5ca5118..8046c45 100644
Binary files a/experiments/10_functional_groups/gptchemcache/cache.db and b/experiments/10_functional_groups/gptchemcache/cache.db differ
diff --git a/experiments/10_functional_groups/pretrained/plot_results.ipynb b/experiments/10_functional_groups/pretrained/plot_results.ipynb
index 5cd0a72..e9c117a 100644
--- a/experiments/10_functional_groups/pretrained/plot_results.ipynb
+++ b/experiments/10_functional_groups/pretrained/plot_results.ipynb
@@ -2,9 +2,18 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 202,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "The autoreload extension is already loaded. To reload it, use:\n",
+      "  %reload_ext autoreload\n"
+     ]
+    }
+   ],
    "source": [
     "%load_ext autoreload\n",
     "%autoreload 2"
@@ -12,3449 +21,1163 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 218,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "from fastcore.xtras import load_pickle\n",
+    "from glob import glob\n",
+    "import pandas as pd\n",
+    "\n",
+    "from scipy.stats import sem\n",
+    "\n",
+    "import matplotlib.pyplot as plt \n",
+    "from gptchem.plotsettings import *"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 219,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "def get_prevalence(smiles, fragment):\n",
+    "    return sum([fragment in x for x in smiles]) / len(smiles)\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 220,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "all_res = glob('out2/*.pkl')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 221,
    "metadata": {},
    "outputs": [],
    "source": [
-    "from fastcore.xtras import load_pickle"
+    "compiled = []\n",
+    "\n",
+    "for res in all_res:\n",
+    "    try:\n",
+    "        summary = load_pickle(res)\n",
+    "        for temp_res in summary['res_at_temp']:\n",
+    "            prev = get_prevalence(temp_res['train_smiles'], summary['group'])\n",
+    "            compiled.append({\n",
+    "                'train_size': summary['train_size'],\n",
+    "                'noise_level': summary['noise_level'],\n",
+    "                'num_samples': summary['num_samples'],\n",
+    "                'temperature': temp_res['temperature'],\n",
+    "                'valid_smiles': temp_res['valid_smiles'],\n",
+    "                'novel_smiles': temp_res['novel_smiles'],\n",
+    "                'valid_indices': temp_res['valid_indices'],\n",
+    "                'novel_indices': temp_res['novel_indices'],\n",
+    "                'frac_group': temp_res['fragment_fraction'],\n",
+    "            # 'constrain_satisfaction': temp_res['constrain_satisfaction'],\n",
+    "                #'constrain_satisfaction_novel': temp_res['constrain_satisfaction_novel'],\n",
+    "                'prevalence': prev,\n",
+    "                'group': summary['group'],\n",
+    "                'enrichment':  temp_res['fragment_fraction']/prev if temp_res['fragment_fraction'] is not None else None\n",
+    "            })\n",
+    "    except Exception:\n",
+    "        pass"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 222,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "all_res = pd.DataFrame(compiled)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 223,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>train_size</th>\n",
+       "      <th>noise_level</th>\n",
+       "      <th>num_samples</th>\n",
+       "      <th>temperature</th>\n",
+       "      <th>valid_smiles</th>\n",
+       "      <th>novel_smiles</th>\n",
+       "      <th>valid_indices</th>\n",
+       "      <th>novel_indices</th>\n",
+       "      <th>frac_group</th>\n",
+       "      <th>prevalence</th>\n",
+       "      <th>group</th>\n",
+       "      <th>enrichment</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>500</td>\n",
+       "      <td>0.1</td>\n",
+       "      <td>1000</td>\n",
+       "      <td>0.10</td>\n",
+       "      <td>[[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C(...</td>\n",
+       "      <td>[[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C(...</td>\n",
+       "      <td>[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1...</td>\n",
+       "      <td>[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1...</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.021851</td>\n",
+       "      <td>C#C</td>\n",
+       "      <td>0.000000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>500</td>\n",
+       "      <td>0.1</td>\n",
+       "      <td>1000</td>\n",
+       "      <td>0.20</td>\n",
+       "      <td>[[H]c1nc(N([H])C(=O)N([H])c2c([H])c([H])c(C([H...</td>\n",
+       "      <td>[[H]c1nc(N([H])C(=O)N([H])c2c([H])c([H])c(C([H...</td>\n",
+       "      <td>[0, 4, 5, 7, 8, 9, 11, 12, 15, 18, 20, 21, 22,...</td>\n",
+       "      <td>[0, 4, 5, 7, 8, 9, 11, 12, 15, 18, 20, 21, 22,...</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.021851</td>\n",
+       "      <td>C#C</td>\n",
+       "      <td>0.000000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>500</td>\n",
+       "      <td>0.1</td>\n",
+       "      <td>1000</td>\n",
+       "      <td>0.50</td>\n",
+       "      <td>[[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C(...</td>\n",
+       "      <td>[[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C(...</td>\n",
+       "      <td>[0, 1, 2, 4, 5, 7, 10, 11, 12, 13, 14, 16, 17,...</td>\n",
+       "      <td>[0, 1, 2, 4, 5, 7, 10, 11, 12, 13, 14, 16, 17,...</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.021851</td>\n",
+       "      <td>C#C</td>\n",
+       "      <td>0.000000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>500</td>\n",
+       "      <td>0.1</td>\n",
+       "      <td>1000</td>\n",
+       "      <td>0.65</td>\n",
+       "      <td>[[H]c1nc([H])c(-c2nc(N3C([H])([H])C([H])([H])N...</td>\n",
+       "      <td>[[H]c1nc([H])c(-c2nc(N3C([H])([H])C([H])([H])N...</td>\n",
+       "      <td>[0, 1, 3, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20,...</td>\n",
+       "      <td>[0, 1, 3, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20,...</td>\n",
+       "      <td>0.005396</td>\n",
+       "      <td>0.021851</td>\n",
+       "      <td>C#C</td>\n",
+       "      <td>0.246929</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>500</td>\n",
+       "      <td>0.1</td>\n",
+       "      <td>1000</td>\n",
+       "      <td>0.75</td>\n",
+       "      <td>[[H]c1nc(N([H])[H])c2c([H])c(OC([H])([H])[H])c...</td>\n",
+       "      <td>[[H]c1nc(N([H])[H])c2c([H])c(OC([H])([H])[H])c...</td>\n",
+       "      <td>[0, 1, 2, 3, 4, 5, 6, 8, 12, 15, 16, 17, 20, 2...</td>\n",
+       "      <td>[0, 1, 2, 3, 4, 5, 6, 8, 12, 15, 16, 17, 20, 2...</td>\n",
+       "      <td>0.007059</td>\n",
+       "      <td>0.021851</td>\n",
+       "      <td>C#C</td>\n",
+       "      <td>0.323041</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>697</th>\n",
+       "      <td>500</td>\n",
+       "      <td>0.1</td>\n",
+       "      <td>1000</td>\n",
+       "      <td>0.75</td>\n",
+       "      <td>[[H]c1c([H])c(Oc2c([H])c([H])c(N([H])[C@](c3c(...</td>\n",
+       "      <td>[[H]c1c([H])c(Oc2c([H])c([H])c(N([H])[C@](c3c(...</td>\n",
+       "      <td>[0, 5, 7, 12, 15, 18, 21, 25, 29, 31, 35, 36, ...</td>\n",
+       "      <td>[0, 5, 7, 12, 15, 18, 21, 25, 29, 31, 35, 36, ...</td>\n",
+       "      <td>0.188776</td>\n",
+       "      <td>0.195919</td>\n",
+       "      <td>Cl</td>\n",
+       "      <td>0.963540</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>698</th>\n",
+       "      <td>500</td>\n",
+       "      <td>0.1</td>\n",
+       "      <td>1000</td>\n",
+       "      <td>1.00</td>\n",
+       "      <td>[[H]/C(=C(\\C([H])([H])C([H])([H])n1c([H])c([H]...</td>\n",
+       "      <td>[[H]/C(=C(\\C([H])([H])C([H])([H])n1c([H])c([H]...</td>\n",
+       "      <td>[2, 8, 15, 17, 20, 22, 25, 33, 39, 40, 43, 46,...</td>\n",
+       "      <td>[2, 8, 15, 17, 20, 22, 25, 33, 39, 40, 43, 46,...</td>\n",
+       "      <td>0.243655</td>\n",
+       "      <td>0.195919</td>\n",
+       "      <td>Cl</td>\n",
+       "      <td>1.243653</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>699</th>\n",
+       "      <td>500</td>\n",
+       "      <td>0.1</td>\n",
+       "      <td>1000</td>\n",
+       "      <td>1.25</td>\n",
+       "      <td>[[H]c1nc(N(C([H])([H])C([H])([H])N([H])[H])C([...</td>\n",
+       "      <td>[[H]c1nc(N(C([H])([H])C([H])([H])N([H])[H])C([...</td>\n",
+       "      <td>[33, 71, 87, 141, 152, 154, 176, 184, 228, 266...</td>\n",
+       "      <td>[33, 71, 87, 141, 152, 154, 176, 184, 228, 266...</td>\n",
+       "      <td>0.327586</td>\n",
+       "      <td>0.195919</td>\n",
+       "      <td>Cl</td>\n",
+       "      <td>1.672053</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>700</th>\n",
+       "      <td>500</td>\n",
+       "      <td>0.1</td>\n",
+       "      <td>1000</td>\n",
+       "      <td>1.50</td>\n",
+       "      <td>[[H]c1c([H])noc1C([H])([H])[H], [H]c1c([H])c([...</td>\n",
+       "      <td>[[H]c1c([H])noc1C([H])([H])[H], [H]c1c([H])c([...</td>\n",
+       "      <td>[28, 38, 49, 58, 72, 114, 148, 281, 293, 337, ...</td>\n",
+       "      <td>[28, 38, 49, 58, 72, 114, 148, 281, 293, 337, ...</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.195919</td>\n",
+       "      <td>Cl</td>\n",
+       "      <td>0.000000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>701</th>\n",
+       "      <td>500</td>\n",
+       "      <td>0.1</td>\n",
+       "      <td>1000</td>\n",
+       "      <td>2.00</td>\n",
+       "      <td>[[H]OC, [H], FCC, [H]Ã, [H], [H], [H]OCF, [H]/...</td>\n",
+       "      <td>[[H]OC, [H], FCC, [H]Ã, [H], [H], [H]OCF, [H]/...</td>\n",
+       "      <td>[11, 27, 42, 47, 93, 135, 136, 145, 158, 162, ...</td>\n",
+       "      <td>[11, 27, 42, 47, 93, 135, 136, 145, 158, 162, ...</td>\n",
+       "      <td>0.013514</td>\n",
+       "      <td>0.195919</td>\n",
+       "      <td>Cl</td>\n",
+       "      <td>0.068975</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>702 rows × 12 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "     train_size  noise_level  num_samples  temperature  \\\n",
+       "0           500          0.1         1000         0.10   \n",
+       "1           500          0.1         1000         0.20   \n",
+       "2           500          0.1         1000         0.50   \n",
+       "3           500          0.1         1000         0.65   \n",
+       "4           500          0.1         1000         0.75   \n",
+       "..          ...          ...          ...          ...   \n",
+       "697         500          0.1         1000         0.75   \n",
+       "698         500          0.1         1000         1.00   \n",
+       "699         500          0.1         1000         1.25   \n",
+       "700         500          0.1         1000         1.50   \n",
+       "701         500          0.1         1000         2.00   \n",
+       "\n",
+       "                                          valid_smiles  \\\n",
+       "0    [[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C(...   \n",
+       "1    [[H]c1nc(N([H])C(=O)N([H])c2c([H])c([H])c(C([H...   \n",
+       "2    [[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C(...   \n",
+       "3    [[H]c1nc([H])c(-c2nc(N3C([H])([H])C([H])([H])N...   \n",
+       "4    [[H]c1nc(N([H])[H])c2c([H])c(OC([H])([H])[H])c...   \n",
+       "..                                                 ...   \n",
+       "697  [[H]c1c([H])c(Oc2c([H])c([H])c(N([H])[C@](c3c(...   \n",
+       "698  [[H]/C(=C(\\C([H])([H])C([H])([H])n1c([H])c([H]...   \n",
+       "699  [[H]c1nc(N(C([H])([H])C([H])([H])N([H])[H])C([...   \n",
+       "700  [[H]c1c([H])noc1C([H])([H])[H], [H]c1c([H])c([...   \n",
+       "701  [[H]OC, [H], FCC, [H]Ã, [H], [H], [H]OCF, [H]/...   \n",
+       "\n",
+       "                                          novel_smiles  \\\n",
+       "0    [[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C(...   \n",
+       "1    [[H]c1nc(N([H])C(=O)N([H])c2c([H])c([H])c(C([H...   \n",
+       "2    [[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C(...   \n",
+       "3    [[H]c1nc([H])c(-c2nc(N3C([H])([H])C([H])([H])N...   \n",
+       "4    [[H]c1nc(N([H])[H])c2c([H])c(OC([H])([H])[H])c...   \n",
+       "..                                                 ...   \n",
+       "697  [[H]c1c([H])c(Oc2c([H])c([H])c(N([H])[C@](c3c(...   \n",
+       "698  [[H]/C(=C(\\C([H])([H])C([H])([H])n1c([H])c([H]...   \n",
+       "699  [[H]c1nc(N(C([H])([H])C([H])([H])N([H])[H])C([...   \n",
+       "700  [[H]c1c([H])noc1C([H])([H])[H], [H]c1c([H])c([...   \n",
+       "701  [[H]OC, [H], FCC, [H]Ã, [H], [H], [H]OCF, [H]/...   \n",
+       "\n",
+       "                                         valid_indices  \\\n",
+       "0    [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1...   \n",
+       "1    [0, 4, 5, 7, 8, 9, 11, 12, 15, 18, 20, 21, 22,...   \n",
+       "2    [0, 1, 2, 4, 5, 7, 10, 11, 12, 13, 14, 16, 17,...   \n",
+       "3    [0, 1, 3, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20,...   \n",
+       "4    [0, 1, 2, 3, 4, 5, 6, 8, 12, 15, 16, 17, 20, 2...   \n",
+       "..                                                 ...   \n",
+       "697  [0, 5, 7, 12, 15, 18, 21, 25, 29, 31, 35, 36, ...   \n",
+       "698  [2, 8, 15, 17, 20, 22, 25, 33, 39, 40, 43, 46,...   \n",
+       "699  [33, 71, 87, 141, 152, 154, 176, 184, 228, 266...   \n",
+       "700  [28, 38, 49, 58, 72, 114, 148, 281, 293, 337, ...   \n",
+       "701  [11, 27, 42, 47, 93, 135, 136, 145, 158, 162, ...   \n",
+       "\n",
+       "                                         novel_indices  frac_group  \\\n",
+       "0    [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1...    0.000000   \n",
+       "1    [0, 4, 5, 7, 8, 9, 11, 12, 15, 18, 20, 21, 22,...    0.000000   \n",
+       "2    [0, 1, 2, 4, 5, 7, 10, 11, 12, 13, 14, 16, 17,...    0.000000   \n",
+       "3    [0, 1, 3, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20,...    0.005396   \n",
+       "4    [0, 1, 2, 3, 4, 5, 6, 8, 12, 15, 16, 17, 20, 2...    0.007059   \n",
+       "..                                                 ...         ...   \n",
+       "697  [0, 5, 7, 12, 15, 18, 21, 25, 29, 31, 35, 36, ...    0.188776   \n",
+       "698  [2, 8, 15, 17, 20, 22, 25, 33, 39, 40, 43, 46,...    0.243655   \n",
+       "699  [33, 71, 87, 141, 152, 154, 176, 184, 228, 266...    0.327586   \n",
+       "700  [28, 38, 49, 58, 72, 114, 148, 281, 293, 337, ...    0.000000   \n",
+       "701  [11, 27, 42, 47, 93, 135, 136, 145, 158, 162, ...    0.013514   \n",
+       "\n",
+       "     prevalence group  enrichment  \n",
+       "0      0.021851   C#C    0.000000  \n",
+       "1      0.021851   C#C    0.000000  \n",
+       "2      0.021851   C#C    0.000000  \n",
+       "3      0.021851   C#C    0.246929  \n",
+       "4      0.021851   C#C    0.323041  \n",
+       "..          ...   ...         ...  \n",
+       "697    0.195919    Cl    0.963540  \n",
+       "698    0.195919    Cl    1.243653  \n",
+       "699    0.195919    Cl    1.672053  \n",
+       "700    0.195919    Cl    0.000000  \n",
+       "701    0.195919    Cl    0.068975  \n",
+       "\n",
+       "[702 rows x 12 columns]"
+      ]
+     },
+     "execution_count": 223,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "all_res"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 224,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:265: RuntimeWarning: Degrees of freedom <= 0 for slice\n",
+      "  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:257: RuntimeWarning: invalid value encountered in double_scalars\n",
+      "  ret = ret.dtype.type(ret / rcount)\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:265: RuntimeWarning: Degrees of freedom <= 0 for slice\n",
+      "  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:257: RuntimeWarning: invalid value encountered in double_scalars\n",
+      "  ret = ret.dtype.type(ret / rcount)\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:265: RuntimeWarning: Degrees of freedom <= 0 for slice\n",
+      "  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:257: RuntimeWarning: invalid value encountered in double_scalars\n",
+      "  ret = ret.dtype.type(ret / rcount)\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:265: RuntimeWarning: Degrees of freedom <= 0 for slice\n",
+      "  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:257: RuntimeWarning: invalid value encountered in double_scalars\n",
+      "  ret = ret.dtype.type(ret / rcount)\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:265: RuntimeWarning: Degrees of freedom <= 0 for slice\n",
+      "  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:257: RuntimeWarning: invalid value encountered in double_scalars\n",
+      "  ret = ret.dtype.type(ret / rcount)\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:265: RuntimeWarning: Degrees of freedom <= 0 for slice\n",
+      "  ret = _var(a, axis=axis, dtype=dtype, out=out, ddof=ddof,\n",
+      "/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py:257: RuntimeWarning: invalid value encountered in double_scalars\n",
+      "  ret = ret.dtype.type(ret / rcount)\n",
+      "/var/folders/m9/_txh68y946s4pxy1x2wnd3lh0000gn/T/ipykernel_1840/183212294.py:1: FutureWarning: ['valid_smiles', 'novel_smiles', 'valid_indices', 'novel_indices'] did not aggregate successfully. If any error is raised this will raise in a future version of pandas. Drop these columns/ops to avoid this warning.\n",
+      "  grouped = all_res.groupby(['group', 'temperature', ]).agg(['mean', 'std', sem]) #'noise_level'\n"
+     ]
+    }
+   ],
+   "source": [
+    "grouped = all_res.groupby(['group', 'temperature', ]).agg(['mean', 'std', sem]) #'noise_level'"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 225,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead tr th {\n",
+       "        text-align: left;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead tr:last-of-type th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th colspan=\"3\" halign=\"left\">train_size</th>\n",
+       "      <th colspan=\"3\" halign=\"left\">noise_level</th>\n",
+       "      <th colspan=\"3\" halign=\"left\">num_samples</th>\n",
+       "      <th colspan=\"3\" halign=\"left\">frac_group</th>\n",
+       "      <th colspan=\"3\" halign=\"left\">prevalence</th>\n",
+       "      <th colspan=\"3\" halign=\"left\">enrichment</th>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "      <th>mean</th>\n",
+       "      <th>std</th>\n",
+       "      <th>sem</th>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>group</th>\n",
+       "      <th>temperature</th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "      <th></th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th rowspan=\"5\" valign=\"top\">Br</th>\n",
+       "      <th>0.10</th>\n",
+       "      <td>500.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.118182</td>\n",
+       "      <td>0.025226</td>\n",
+       "      <td>0.007606</td>\n",
+       "      <td>363.636364</td>\n",
+       "      <td>211.057941</td>\n",
+       "      <td>63.636364</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.037250</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>2.194271e-18</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>0.20</th>\n",
+       "      <td>500.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.118182</td>\n",
+       "      <td>0.025226</td>\n",
+       "      <td>0.007606</td>\n",
+       "      <td>363.636364</td>\n",
+       "      <td>211.057941</td>\n",
+       "      <td>63.636364</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0.037250</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>2.194271e-18</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>0.50</th>\n",
+       "      <td>500.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.118182</td>\n",
+       "      <td>0.025226</td>\n",
+       "      <td>0.007606</td>\n",
+       "      <td>363.636364</td>\n",
+       "      <td>211.057941</td>\n",
+       "      <td>63.636364</td>\n",
+       "      <td>0.003593</td>\n",
+       "      <td>0.003815</td>\n",
+       "      <td>0.001150</td>\n",
+       "      <td>0.037250</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>2.194271e-18</td>\n",
+       "      <td>0.096445</td>\n",
+       "      <td>0.102411</td>\n",
+       "      <td>0.030878</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>0.75</th>\n",
+       "      <td>500.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.118182</td>\n",
+       "      <td>0.025226</td>\n",
+       "      <td>0.007606</td>\n",
+       "      <td>363.636364</td>\n",
+       "      <td>211.057941</td>\n",
+       "      <td>63.636364</td>\n",
+       "      <td>0.012350</td>\n",
+       "      <td>0.010911</td>\n",
+       "      <td>0.003290</td>\n",
+       "      <td>0.037250</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>2.194271e-18</td>\n",
+       "      <td>0.331532</td>\n",
+       "      <td>0.292921</td>\n",
+       "      <td>0.088319</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1.00</th>\n",
+       "      <td>500.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.118182</td>\n",
+       "      <td>0.025226</td>\n",
+       "      <td>0.007606</td>\n",
+       "      <td>363.636364</td>\n",
+       "      <td>211.057941</td>\n",
+       "      <td>63.636364</td>\n",
+       "      <td>0.039470</td>\n",
+       "      <td>0.026906</td>\n",
+       "      <td>0.008113</td>\n",
+       "      <td>0.037250</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>2.194271e-18</td>\n",
+       "      <td>1.059587</td>\n",
+       "      <td>0.722307</td>\n",
+       "      <td>0.217784</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th rowspan=\"5\" valign=\"top\">I</th>\n",
+       "      <th>1.15</th>\n",
+       "      <td>500.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.100000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>1000.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.004464</td>\n",
+       "      <td>0.006313</td>\n",
+       "      <td>0.004464</td>\n",
+       "      <td>0.005962</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.000000e+00</td>\n",
+       "      <td>0.748804</td>\n",
+       "      <td>1.058969</td>\n",
+       "      <td>0.748804</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1.25</th>\n",
+       "      <td>500.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.112500</td>\n",
+       "      <td>0.022613</td>\n",
+       "      <td>0.006528</td>\n",
+       "      <td>475.000000</td>\n",
+       "      <td>316.586912</td>\n",
+       "      <td>91.390769</td>\n",
+       "      <td>0.011768</td>\n",
+       "      <td>0.020974</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0.005962</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.000000e+00</td>\n",
+       "      <td>1.973806</td>\n",
+       "      <td>3.518021</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1.35</th>\n",
+       "      <td>500.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.100000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>1000.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.005962</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.000000e+00</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "      <td>0.000000</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1.50</th>\n",
+       "      <td>500.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.112500</td>\n",
+       "      <td>0.022613</td>\n",
+       "      <td>0.006528</td>\n",
+       "      <td>475.000000</td>\n",
+       "      <td>316.586912</td>\n",
+       "      <td>91.390769</td>\n",
+       "      <td>0.046107</td>\n",
+       "      <td>0.059625</td>\n",
+       "      <td>0.017212</td>\n",
+       "      <td>0.005962</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.000000e+00</td>\n",
+       "      <td>7.733544</td>\n",
+       "      <td>10.000980</td>\n",
+       "      <td>2.887034</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2.00</th>\n",
+       "      <td>500.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.112500</td>\n",
+       "      <td>0.022613</td>\n",
+       "      <td>0.006528</td>\n",
+       "      <td>475.000000</td>\n",
+       "      <td>316.586912</td>\n",
+       "      <td>91.390769</td>\n",
+       "      <td>0.073400</td>\n",
+       "      <td>0.056244</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>0.005962</td>\n",
+       "      <td>0.0</td>\n",
+       "      <td>0.000000e+00</td>\n",
+       "      <td>12.311577</td>\n",
+       "      <td>9.433881</td>\n",
+       "      <td>NaN</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>90 rows × 18 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                  train_size           noise_level                      \\\n",
+       "                        mean  std  sem        mean       std       sem   \n",
+       "group temperature                                                        \n",
+       "Br    0.10             500.0  0.0  0.0    0.118182  0.025226  0.007606   \n",
+       "      0.20             500.0  0.0  0.0    0.118182  0.025226  0.007606   \n",
+       "      0.50             500.0  0.0  0.0    0.118182  0.025226  0.007606   \n",
+       "      0.75             500.0  0.0  0.0    0.118182  0.025226  0.007606   \n",
+       "      1.00             500.0  0.0  0.0    0.118182  0.025226  0.007606   \n",
+       "...                      ...  ...  ...         ...       ...       ...   \n",
+       "I     1.15             500.0  0.0  0.0    0.100000  0.000000  0.000000   \n",
+       "      1.25             500.0  0.0  0.0    0.112500  0.022613  0.006528   \n",
+       "      1.35             500.0  0.0  0.0    0.100000  0.000000  0.000000   \n",
+       "      1.50             500.0  0.0  0.0    0.112500  0.022613  0.006528   \n",
+       "      2.00             500.0  0.0  0.0    0.112500  0.022613  0.006528   \n",
+       "\n",
+       "                   num_samples                        frac_group            \\\n",
+       "                          mean         std        sem       mean       std   \n",
+       "group temperature                                                            \n",
+       "Br    0.10          363.636364  211.057941  63.636364   0.000000  0.000000   \n",
+       "      0.20          363.636364  211.057941  63.636364   0.000000  0.000000   \n",
+       "      0.50          363.636364  211.057941  63.636364   0.003593  0.003815   \n",
+       "      0.75          363.636364  211.057941  63.636364   0.012350  0.010911   \n",
+       "      1.00          363.636364  211.057941  63.636364   0.039470  0.026906   \n",
+       "...                        ...         ...        ...        ...       ...   \n",
+       "I     1.15         1000.000000    0.000000   0.000000   0.004464  0.006313   \n",
+       "      1.25          475.000000  316.586912  91.390769   0.011768  0.020974   \n",
+       "      1.35         1000.000000    0.000000   0.000000   0.000000  0.000000   \n",
+       "      1.50          475.000000  316.586912  91.390769   0.046107  0.059625   \n",
+       "      2.00          475.000000  316.586912  91.390769   0.073400  0.056244   \n",
+       "\n",
+       "                            prevalence                    enrichment  \\\n",
+       "                        sem       mean  std           sem       mean   \n",
+       "group temperature                                                      \n",
+       "Br    0.10         0.000000   0.037250  0.0  2.194271e-18   0.000000   \n",
+       "      0.20              NaN   0.037250  0.0  2.194271e-18   0.000000   \n",
+       "      0.50         0.001150   0.037250  0.0  2.194271e-18   0.096445   \n",
+       "      0.75         0.003290   0.037250  0.0  2.194271e-18   0.331532   \n",
+       "      1.00         0.008113   0.037250  0.0  2.194271e-18   1.059587   \n",
+       "...                     ...        ...  ...           ...        ...   \n",
+       "I     1.15         0.004464   0.005962  0.0  0.000000e+00   0.748804   \n",
+       "      1.25              NaN   0.005962  0.0  0.000000e+00   1.973806   \n",
+       "      1.35         0.000000   0.005962  0.0  0.000000e+00   0.000000   \n",
+       "      1.50         0.017212   0.005962  0.0  0.000000e+00   7.733544   \n",
+       "      2.00              NaN   0.005962  0.0  0.000000e+00  12.311577   \n",
+       "\n",
+       "                                        \n",
+       "                         std       sem  \n",
+       "group temperature                       \n",
+       "Br    0.10          0.000000  0.000000  \n",
+       "      0.20          0.000000       NaN  \n",
+       "      0.50          0.102411  0.030878  \n",
+       "      0.75          0.292921  0.088319  \n",
+       "      1.00          0.722307  0.217784  \n",
+       "...                      ...       ...  \n",
+       "I     1.15          1.058969  0.748804  \n",
+       "      1.25          3.518021       NaN  \n",
+       "      1.35          0.000000  0.000000  \n",
+       "      1.50         10.000980  2.887034  \n",
+       "      2.00          9.433881       NaN  \n",
+       "\n",
+       "[90 rows x 18 columns]"
+      ]
+     },
+     "execution_count": 225,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "grouped"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 226,
    "metadata": {},
    "outputs": [
     {
      "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>train_size</th>\n",
+       "      <th>noise_level</th>\n",
+       "      <th>num_samples</th>\n",
+       "      <th>temperature</th>\n",
+       "      <th>valid_smiles</th>\n",
+       "      <th>novel_smiles</th>\n",
+       "      <th>valid_indices</th>\n",
+       "      <th>novel_indices</th>\n",
+       "      <th>frac_group</th>\n",
+       "      <th>prevalence</th>\n",
+       "      <th>group</th>\n",
+       "      <th>enrichment</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
       "text/plain": [
-       "{'train_size': 92,\n",
-       " 'noise_level': 0.5,\n",
-       " 'num_samples': 300,\n",
-       " 'temperatures': [0.1, 0.2, 0.5, 0.75, 1.0, 1.25, 1.5, 2.0],\n",
-       " 'res_at_temp': [{'completions': {'choices': [' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])'],\n",
-       "    'logprobs': [None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None],\n",
-       "    'model': 'ada:ft-personal-2023-02-05-21-51-00'},\n",
-       "   'generated_smiles': (#92) ['[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])'...],\n",
-       "   'train_smiles': 0     [H]c1c([H])c([H])c(C([H])(c2c([H])c([H])c([H])...\n",
-       "   1     [H]c1c(OC([H])([H])C([H])([H])C([H])([H])N2C([...\n",
-       "   2     [H]c1c([H])c([H])c2c(c1OC([H])(C([H])([H])[H])...\n",
-       "   3     [H]OC([H])([H])[C@@]1([H])O[C@@]([H])(c2c([H])...\n",
-       "   4     [H]c1c([H])c([H])c(-c2c([H])c([H])c(C([H])([H]...\n",
-       "                               ...                        \n",
-       "   87    [H]Oc1nc(N([H])/N=C(\\[H])c2nc([H])c([H])c([H])...\n",
-       "   88    [H]c1c([H])c([H])c(C([H])([H])C(=O)N(C([H])([H...\n",
-       "   89    [H]c1nc(N([H])c2c([H])c([H])c(OC([H])([H])c3c(...\n",
-       "   90    [H]c1c(C(F)(F)F)nc(C([H])([H])C([H])([H])c2c([...\n",
-       "   91    [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...\n",
-       "   Name: label, Length: 92, dtype: object,\n",
-       "   'frac_valid': 0.09782608695652174,\n",
-       "   'frac_unique': 0.2222222222222222,\n",
-       "   'frac_smiles_in_train': 0.0,\n",
-       "   'frac_smiles_in_pubchem': 1.0,\n",
-       "   'in_pubchem': [0, 1, 2, 3, 4, 5, 6, 7, 8],\n",
-       "   'kld': nan,\n",
-       "   'frechet_d': 120.19447782434014,\n",
-       "   'frechet_score': 3.631117521519874e-11,\n",
-       "   'valid_smiles': ['[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]'],\n",
-       "   'valid_indices': [4, 12, 42, 43, 56, 75, 79, 83, 84],\n",
-       "   'novel_indices': [4, 12, 42, 43, 56, 75, 79, 83, 84],\n",
-       "   'novel_smiles': ['[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]'],\n",
-       "   'expected': [2.1353246951799685,\n",
-       "    2.1123460888902255,\n",
-       "    3.650217937474436,\n",
-       "    1.7674429208827362,\n",
-       "    2.6417340087640078,\n",
-       "    1.6231275501684852,\n",
-       "    3.246640657751793,\n",
-       "    1.8040914351738353,\n",
-       "    2.1281730733563666,\n",
-       "    1.411433568423245,\n",
-       "    3.513532458758056,\n",
-       "    2.670504484956229,\n",
-       "    2.239241524840996,\n",
-       "    0.6881904518953377,\n",
-       "    1.2712306643490647,\n",
-       "    2.581698475809956,\n",
-       "    3.417274425406017,\n",
-       "    1.538943599221743,\n",
-       "    1.9845429163942245,\n",
-       "    3.877841145317224,\n",
-       "    3.34016836276274,\n",
-       "    1.3836963476782458,\n",
-       "    3.1082163326771157,\n",
-       "    1.9722765807169642,\n",
-       "    3.686639689591095,\n",
-       "    2.2748460983073144,\n",
-       "    2.538214365803805,\n",
-       "    1.3415924297383302,\n",
-       "    2.135967850985337,\n",
-       "    1.3774302448851743,\n",
-       "    2.774216067343345,\n",
-       "    3.055096878363862,\n",
-       "    2.1000247175151543,\n",
-       "    0.33822766619480693,\n",
-       "    1.6132366015672883,\n",
-       "    2.115310034863763,\n",
-       "    3.588133909979325,\n",
-       "    3.176883778631613,\n",
-       "    3.480547870596866,\n",
-       "    2.728282645296599,\n",
-       "    1.6149156846762678,\n",
-       "    5.374731436440936,\n",
-       "    2.345750367158073,\n",
-       "    0.13771814503603663,\n",
-       "    1.7630519287152748,\n",
-       "    2.612818188358495,\n",
-       "    2.9711651688902623,\n",
-       "    1.987971511611876,\n",
-       "    3.6898026509662807,\n",
-       "    2.8208410406764117,\n",
-       "    1.4546936857831523,\n",
-       "    0.5284051396074474,\n",
-       "    2.473930532872131,\n",
-       "    3.898516421975269,\n",
-       "    3.7943525226816313,\n",
-       "    1.6800774055988468,\n",
-       "    1.8344042191383803,\n",
-       "    2.86890826945903,\n",
-       "    2.1147925213362435,\n",
-       "    2.5208249144110955,\n",
-       "    3.0023349811631137,\n",
-       "    3.4295999414748453,\n",
-       "    3.2425429664656678,\n",
-       "    2.673845284963159,\n",
-       "    2.641035221596825,\n",
-       "    3.897699030055646,\n",
-       "    2.664687883048459,\n",
-       "    1.8855621612638922,\n",
-       "    2.54151726106847,\n",
-       "    1.7779461965686747,\n",
-       "    3.062443133846699,\n",
-       "    3.4034285103299267,\n",
-       "    2.807322519998883,\n",
-       "    2.7158730142692553,\n",
-       "    1.8264221794140145,\n",
-       "    1.5772670884036426,\n",
-       "    2.9170058277493225,\n",
-       "    1.9293810125760356,\n",
-       "    5.163738213662894,\n",
-       "    2.267077558924912,\n",
-       "    2.5482239290404856,\n",
-       "    0.7996282608124348,\n",
-       "    3.3105697253823165,\n",
-       "    2.0202506327958822,\n",
-       "    2.4420493835199673,\n",
-       "    3.482552484783243,\n",
-       "    2.4216546207474265,\n",
-       "    2.3092026766834697,\n",
-       "    1.3249495208668236,\n",
-       "    3.1804506853079806,\n",
-       "    2.22464832107317,\n",
-       "    2.895223625866164],\n",
-       "   'temperature': 0.1,\n",
-       "   'prevalence': 0.0,\n",
-       "   'fragment_fraction': 0.0,\n",
-       "   'formatted_test':                                                prompt  \\\n",
-       "   0   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   1   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   2   What is a molecule with bandgap 3.7 and C#CBr ...   \n",
-       "   3   What is a molecule with bandgap 1.8 and C#CBr ...   \n",
-       "   4   What is a molecule with bandgap 2.6 and C#CBr ...   \n",
-       "   ..                                                ...   \n",
-       "   87  What is a molecule with bandgap 2.3 and C#CBr ...   \n",
-       "   88  What is a molecule with bandgap 1.3 and C#CBr ...   \n",
-       "   89  What is a molecule with bandgap 3.2 and C#CBr ...   \n",
-       "   90  What is a molecule with bandgap 2.2 and C#CBr ...   \n",
-       "   91  What is a molecule with bandgap 2.9 and C#CBr ...   \n",
-       "   \n",
-       "                                              completion  \\\n",
-       "   0    [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C...   \n",
-       "   1    [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=...   \n",
-       "   2    [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])...   \n",
-       "   3    [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([...   \n",
-       "   4    [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[...   \n",
-       "   ..                                                ...   \n",
-       "   87   [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3...   \n",
-       "   88   [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(...   \n",
-       "   89   [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O...   \n",
-       "   90   [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nn...   \n",
-       "   91   [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H...   \n",
-       "   \n",
-       "                                                   label        representation  \n",
-       "   0   [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C(...  [2.1353246951799685]  \n",
-       "   1   [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=O...  [2.1123460888902255]  \n",
-       "   2   [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])[...   [3.650217937474436]  \n",
-       "   3   [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([H...  [1.7674429208827362]  \n",
-       "   4   [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[H...  [2.6417340087640078]  \n",
-       "   ..                                                ...                   ...  \n",
-       "   87  [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3c...  [2.3092026766834697]  \n",
-       "   88  [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...  [1.3249495208668236]  \n",
-       "   89  [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O)...  [3.1804506853079806]  \n",
-       "   90  [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nnc...    [2.22464832107317]  \n",
-       "   91  [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H]...   [2.895223625866164]  \n",
-       "   \n",
-       "   [92 rows x 4 columns],\n",
-       "   'group': 'C#CBr'},\n",
-       "  {'completions': {'choices': [' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])(',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c3c(c2[H])C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)N([H])C([H])([H])c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2nc3c([H])c([H])c([H])c([H])c3c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2nc3c([H])c([H])c([H])c([H])c3n2C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c([C@@]2([H])C([H])([H])[C@@]([H])(N([H])[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])c2c([H])c([H])c(C(=O)N([H])C([H])([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])N([H])C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[H])c(N([H])C(=O)C2([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N2C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])(',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c3c(c2[H])c2c([H])c([H])c([H])c([H])c2n3[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c2[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])(',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c2[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c3c(c2[H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2nc3c([H])c([H])c([H])c([H])c3c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])N([H])C(=O)[C@@]([H])(N([H])C(=O)[C@@]([H])(N([H])C(=O)C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])(',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])C([H])([H])c2c([H])c([H])c(C(=O)N([H])[H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])C([H])([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H'],\n",
-       "    'logprobs': [None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None],\n",
-       "    'model': 'ada:ft-personal-2023-02-05-21-51-00'},\n",
-       "   'generated_smiles': (#92) ['[H]c1c([H])c([H])c(C([H])([H])[C','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])[H])c([H])c2[H])c([H])c1[H]','[H]c1c([H])c([H])c(-c2c([H])c([H])c3c(c2[H])C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])[H])c([H])c1[H]','[H]c1c([H])c([H])c(C([H])([H])[C','[H]c1c([H])c([H])c(C(=O)N([H])C([H])([H])c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]'...],\n",
-       "   'train_smiles': 0     [H]c1c([H])c([H])c(C([H])(c2c([H])c([H])c([H])...\n",
-       "   1     [H]c1c(OC([H])([H])C([H])([H])C([H])([H])N2C([...\n",
-       "   2     [H]c1c([H])c([H])c2c(c1OC([H])(C([H])([H])[H])...\n",
-       "   3     [H]OC([H])([H])[C@@]1([H])O[C@@]([H])(c2c([H])...\n",
-       "   4     [H]c1c([H])c([H])c(-c2c([H])c([H])c(C([H])([H]...\n",
-       "                               ...                        \n",
-       "   87    [H]Oc1nc(N([H])/N=C(\\[H])c2nc([H])c([H])c([H])...\n",
-       "   88    [H]c1c([H])c([H])c(C([H])([H])C(=O)N(C([H])([H...\n",
-       "   89    [H]c1nc(N([H])c2c([H])c([H])c(OC([H])([H])c3c(...\n",
-       "   90    [H]c1c(C(F)(F)F)nc(C([H])([H])C([H])([H])c2c([...\n",
-       "   91    [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...\n",
-       "   Name: label, Length: 92, dtype: object,\n",
-       "   'frac_valid': 0.29347826086956524,\n",
-       "   'frac_unique': 0.5185185185185185,\n",
-       "   'frac_smiles_in_train': 0.0,\n",
-       "   'frac_smiles_in_pubchem': 0.8518518518518519,\n",
-       "   'in_pubchem': [0,\n",
-       "    1,\n",
-       "    2,\n",
-       "    3,\n",
-       "    4,\n",
-       "    5,\n",
-       "    7,\n",
-       "    9,\n",
-       "    10,\n",
-       "    11,\n",
-       "    13,\n",
-       "    14,\n",
-       "    15,\n",
-       "    16,\n",
-       "    17,\n",
-       "    18,\n",
-       "    19,\n",
-       "    20,\n",
-       "    21,\n",
-       "    23,\n",
-       "    24,\n",
-       "    25,\n",
-       "    26],\n",
-       "   'kld': nan,\n",
-       "   'frechet_d': 71.57599314300396,\n",
-       "   'frechet_score': 6.067198839460133e-07,\n",
-       "   'valid_smiles': ['[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N([H])C([H])([H])c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2nc3c([H])c([H])c([H])c([H])c3n2C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])c2c([H])c([H])c(C(=O)N([H])C([H])([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])[H])c(N([H])C(=O)C2([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c3c(c2[H])c2c([H])c([H])c([H])c([H])c2n3[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c3c(c2[H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2nc3c([H])c([H])c([H])c([H])c3c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])C([H])([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]'],\n",
-       "   'valid_indices': [1,\n",
-       "    2,\n",
-       "    3,\n",
-       "    6,\n",
-       "    8,\n",
-       "    9,\n",
-       "    15,\n",
-       "    24,\n",
-       "    25,\n",
-       "    26,\n",
-       "    30,\n",
-       "    40,\n",
-       "    42,\n",
-       "    45,\n",
-       "    47,\n",
-       "    52,\n",
-       "    57,\n",
-       "    58,\n",
-       "    59,\n",
-       "    73,\n",
-       "    75,\n",
-       "    76,\n",
-       "    77,\n",
-       "    79,\n",
-       "    83,\n",
-       "    85,\n",
-       "    90],\n",
-       "   'novel_indices': [1,\n",
-       "    2,\n",
-       "    3,\n",
-       "    6,\n",
-       "    8,\n",
-       "    9,\n",
-       "    15,\n",
-       "    24,\n",
-       "    25,\n",
-       "    26,\n",
-       "    30,\n",
-       "    40,\n",
-       "    42,\n",
-       "    45,\n",
-       "    47,\n",
-       "    52,\n",
-       "    57,\n",
-       "    58,\n",
-       "    59,\n",
-       "    73,\n",
-       "    75,\n",
-       "    76,\n",
-       "    77,\n",
-       "    79,\n",
-       "    83,\n",
-       "    85,\n",
-       "    90],\n",
-       "   'novel_smiles': ['[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N([H])C([H])([H])c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2nc3c([H])c([H])c([H])c([H])c3n2C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])c2c([H])c([H])c(C(=O)N([H])C([H])([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])[H])c(N([H])C(=O)C2([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c3c(c2[H])c2c([H])c([H])c([H])c([H])c2n3[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c3c(c2[H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2nc3c([H])c([H])c([H])c([H])c3c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])C([H])([H])c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c1[H]'],\n",
-       "   'expected': [2.1353246951799685,\n",
-       "    2.1123460888902255,\n",
-       "    3.650217937474436,\n",
-       "    1.7674429208827362,\n",
-       "    2.6417340087640078,\n",
-       "    1.6231275501684852,\n",
-       "    3.246640657751793,\n",
-       "    1.8040914351738353,\n",
-       "    2.1281730733563666,\n",
-       "    1.411433568423245,\n",
-       "    3.513532458758056,\n",
-       "    2.670504484956229,\n",
-       "    2.239241524840996,\n",
-       "    0.6881904518953377,\n",
-       "    1.2712306643490647,\n",
-       "    2.581698475809956,\n",
-       "    3.417274425406017,\n",
-       "    1.538943599221743,\n",
-       "    1.9845429163942245,\n",
-       "    3.877841145317224,\n",
-       "    3.34016836276274,\n",
-       "    1.3836963476782458,\n",
-       "    3.1082163326771157,\n",
-       "    1.9722765807169642,\n",
-       "    3.686639689591095,\n",
-       "    2.2748460983073144,\n",
-       "    2.538214365803805,\n",
-       "    1.3415924297383302,\n",
-       "    2.135967850985337,\n",
-       "    1.3774302448851743,\n",
-       "    2.774216067343345,\n",
-       "    3.055096878363862,\n",
-       "    2.1000247175151543,\n",
-       "    0.33822766619480693,\n",
-       "    1.6132366015672883,\n",
-       "    2.115310034863763,\n",
-       "    3.588133909979325,\n",
-       "    3.176883778631613,\n",
-       "    3.480547870596866,\n",
-       "    2.728282645296599,\n",
-       "    1.6149156846762678,\n",
-       "    5.374731436440936,\n",
-       "    2.345750367158073,\n",
-       "    0.13771814503603663,\n",
-       "    1.7630519287152748,\n",
-       "    2.612818188358495,\n",
-       "    2.9711651688902623,\n",
-       "    1.987971511611876,\n",
-       "    3.6898026509662807,\n",
-       "    2.8208410406764117,\n",
-       "    1.4546936857831523,\n",
-       "    0.5284051396074474,\n",
-       "    2.473930532872131,\n",
-       "    3.898516421975269,\n",
-       "    3.7943525226816313,\n",
-       "    1.6800774055988468,\n",
-       "    1.8344042191383803,\n",
-       "    2.86890826945903,\n",
-       "    2.1147925213362435,\n",
-       "    2.5208249144110955,\n",
-       "    3.0023349811631137,\n",
-       "    3.4295999414748453,\n",
-       "    3.2425429664656678,\n",
-       "    2.673845284963159,\n",
-       "    2.641035221596825,\n",
-       "    3.897699030055646,\n",
-       "    2.664687883048459,\n",
-       "    1.8855621612638922,\n",
-       "    2.54151726106847,\n",
-       "    1.7779461965686747,\n",
-       "    3.062443133846699,\n",
-       "    3.4034285103299267,\n",
-       "    2.807322519998883,\n",
-       "    2.7158730142692553,\n",
-       "    1.8264221794140145,\n",
-       "    1.5772670884036426,\n",
-       "    2.9170058277493225,\n",
-       "    1.9293810125760356,\n",
-       "    5.163738213662894,\n",
-       "    2.267077558924912,\n",
-       "    2.5482239290404856,\n",
-       "    0.7996282608124348,\n",
-       "    3.3105697253823165,\n",
-       "    2.0202506327958822,\n",
-       "    2.4420493835199673,\n",
-       "    3.482552484783243,\n",
-       "    2.4216546207474265,\n",
-       "    2.3092026766834697,\n",
-       "    1.3249495208668236,\n",
-       "    3.1804506853079806,\n",
-       "    2.22464832107317,\n",
-       "    2.895223625866164],\n",
-       "   'temperature': 0.2,\n",
-       "   'prevalence': 0.0,\n",
-       "   'fragment_fraction': 0.0,\n",
-       "   'formatted_test':                                                prompt  \\\n",
-       "   0   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   1   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   2   What is a molecule with bandgap 3.7 and C#CBr ...   \n",
-       "   3   What is a molecule with bandgap 1.8 and C#CBr ...   \n",
-       "   4   What is a molecule with bandgap 2.6 and C#CBr ...   \n",
-       "   ..                                                ...   \n",
-       "   87  What is a molecule with bandgap 2.3 and C#CBr ...   \n",
-       "   88  What is a molecule with bandgap 1.3 and C#CBr ...   \n",
-       "   89  What is a molecule with bandgap 3.2 and C#CBr ...   \n",
-       "   90  What is a molecule with bandgap 2.2 and C#CBr ...   \n",
-       "   91  What is a molecule with bandgap 2.9 and C#CBr ...   \n",
-       "   \n",
-       "                                              completion  \\\n",
-       "   0    [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C...   \n",
-       "   1    [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=...   \n",
-       "   2    [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])...   \n",
-       "   3    [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([...   \n",
-       "   4    [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[...   \n",
-       "   ..                                                ...   \n",
-       "   87   [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3...   \n",
-       "   88   [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(...   \n",
-       "   89   [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O...   \n",
-       "   90   [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nn...   \n",
-       "   91   [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H...   \n",
-       "   \n",
-       "                                                   label        representation  \n",
-       "   0   [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C(...  [2.1353246951799685]  \n",
-       "   1   [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=O...  [2.1123460888902255]  \n",
-       "   2   [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])[...   [3.650217937474436]  \n",
-       "   3   [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([H...  [1.7674429208827362]  \n",
-       "   4   [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[H...  [2.6417340087640078]  \n",
-       "   ..                                                ...                   ...  \n",
-       "   87  [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3c...  [2.3092026766834697]  \n",
-       "   88  [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...  [1.3249495208668236]  \n",
-       "   89  [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O)...  [3.1804506853079806]  \n",
-       "   90  [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nnc...    [2.22464832107317]  \n",
-       "   91  [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H]...   [2.895223625866164]  \n",
-       "   \n",
-       "   [92 rows x 4 columns],\n",
-       "   'group': 'C#CBr'},\n",
-       "  {'completions': {'choices': [' [H]c1c([H])c([H])c(-c2c(OC([H])([H])[H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c(C([H])([H])N4C([H])([H])C([H])([H])C([H])([H])C4([H])[H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c3c(c2[H])c([H])c(C(=O)N([H])[H])c([H])c3c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])[C@@]([H])(C(=O)N([H])[C@@]([H])(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H])C([H])([H])C([H])([H])[H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c([H])c([H])c1-c1c([H])c([H])c(S(=O)(=O)N([H])c2c([H])c([H])c(N3C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(N([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2nc3c(c([H])nn3c2[H])-c2c([H])c([H])c([H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])N=C(N1C([H])([H])[C@]([H])(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(N([H])C(=O)[C@@]2([H])N(C(=O)[C@]([H])(N([H])C(=O)C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C2([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]N(C(=O)C1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H])[C@]1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[H])c(-c2nc3c(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])nc([H])c3c(=O)n2C([H])([H])[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])[C@@]([H])(N([H])C(=O)c1c([H])c([H])c(N([H])C(=O)c2c([H])c([H])c(Cl)c([H])c2[H])c1[H])[C@]2([H])C([H])([H])[C@@]1([H])C([H])([H])C([H])([H])[C@]([H])(C([H])([H])C([H])([H])N2C([H])([H])[C@@]([H])(C([H])([H])C2([H])[H])C([H])([H])C2([H])[H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(N([H])C(=O)N([H])c2c([H])c([H])c([H])c([H])c2[H])c(C([H])([H])[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c([H])c(Cl)c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(N([H])C(=O)c2c([H])c([H])c(C(C([H])([H])[H])(C([H])([H])[H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])N(C(=O)c3c([H])c([H])c([H])c(Oc4c([H])c([H])c([H])c([H])c4[H])c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C(=O)N2C1([H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])C(=O)C([H])([H])c2c([H])c([H])c3c(c2[H])[C@]3([H])C([H])([H])C([H])([H])[C@@]3([H])C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2nc3c([H])c([H])c([H])c([H])c3n2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N(c2nc3c([H])c([H])c([H])c([H])c3c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c(Cl)c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])=C(C([H])([H])[H])N([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([C@@]2([H])C([H])([H])[C@@]([H])(N([H])C(=O)C3([H])C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])C3([H])[H])[C@]([H])(C([H])([H])[H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])N(C(=O)N([H])c1c([H])c([H])c(Cl)c([H])c1[H])[C@]([H])(c1c([H])c([H])c([H])c([H])c1[H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])[C@@]([H])(N([H])[H])C([H])([H])C([H])([H])[C@@]2([H])c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(S(=O)(=O)N([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(S(=O)(=O)N([H])c2c([H])c([H])c(N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[H])c([H])c1[C@@]1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[C@]1([H])[C@@]([H])(C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])[C@]1([H])C2([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c([C@]2([H])C([H])([H])[C@@]([H])(N([H])C(=O)C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])N(c4c([H])c([H])c([H])c([H])c4C([H])([H])C3([H])[H])C([H])([H])C3([H])[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c([H])c(N([H])c3nc4c(c([H])n([H])c4n3[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C4([H])[H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(-c2c([H])c([H])c(S(=O)(=O)C([H])([H])[H])c([H])c2[H])c([H])c([H])c1C([H])([H])C([H])([H])C([H])([H])N1C([H])([H])C([H])([H])N(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2nc(N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])nc([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C([H])([H])N(c3c([H])c([H])c([H])c(C([H])([H])[H])c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(S(=O)(=O)N([H])C([H])([H])c3nc4c([H])c([H])c([H])c([H])c4c3=O)c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(C(=O)N([H])c2c([H])c([H])c(N([H])C(=O)C([H])([H])[H])c([H])c2[H])c([H])c([H])c1C#N',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])[C@@]1([H])N([H])C(=O)C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])N(C(=O)C3([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2nc3c(N([H])[H])nc(N([H])[H])c([H])c3c([H])c2C([H])([H])C([H])([H])N([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])c2nc([H])c(C(=O)N([H])[H])c([H])c2C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(N([H])c2nc(N([H])C3([H])C([H])([H])C([H])([H])N(C(=O)C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c3c(c2[H])[C@@]2([H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])[C@@]([H])(C(=O)N([H])[H])C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])S(=O)(=O)C([H])([H])c2c([H])c([H])c(F)c([H])c2[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(C([H])([H])[H])c([H])c([H])c1-c1nc2c(c([H])c1C([H])([H])C([H])([H])N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])c2nc([H])c(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[C@@]([H])(N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1nc(N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c2c([H])c([H])c([H])c([H])c2c1[H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([H])c([C@@]2([H])C(=O)N(C([H])([H])c3c([H])c([H])c(OC([H])([H])[H])c([H])c3[H])C([H])([H])C([H])([H])C2([H])[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c([H])c([H])c2S(=O)(=O)N([H])C(=O)c2c([H])c([H])c(OC([H])([H])[H])c([H])c2[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])S[C@@]([H])(C([H])([H])C([H])([H])N([H])C(=O)C1([H])C([H])([H])C1([H])[H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C([H])([H])C([H])(N([H])C(=O)c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1nc(N([H])c2c([H])c([H])c(N([H])C(=O)c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])c2nc3c([H])c([H])c([H])c([H])c3c2[H])c(C(=O)N([H])c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c1[H]',\n",
-       "     ' [H]C([H])=C([H])C(=O)C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])c1c([H])c([H])c(OC([H])([H])C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([H])c([H])c1-c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])[C@@]([H])(N([H])C(=O)C([H])([H])C([H])([H])N1C([H])([H])C([H])([H])C([H])([H])[C@]1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2nc([H])c3c(N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])nc([H])c3n2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(S(=O)(=O)N([H])[H])c([H])c1-c1c([H])c([H])c(Cl)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(Cl)c([H])c2Cl)c([H])c1Cl',\n",
-       "     ' [H]c1c([H])c(N([H])C(=O)C([H])([H])C([H])([H])c2nc(-c3c([H])c([H])c([H])c([H])c3[H])c3c([H])c([H])c([H])c([H])c3n2[H])c([H])c([H])c1OC([H])([H])C([H])([H])C([H])([H])N1C([H])([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c([C@@]2(C([H])([H])[H])C([H])([H])C([H])([H])[C@@]2([H])[C@]([H])(N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])[C@]([H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])c1nnc(-c3c([H])c([H])c([H])c([H])c3[H])c([H])c1C(=O)N([H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])N([H])C([H])([H])C([H])([H])[C@@]2([H])N([H])C(=O)c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(C([H])([H])[C@@]3([H])C([H])([H])N(C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])c2nc3c([H])c(OC([H])([H])[H])c([H])c([H])c3c(=O)n2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(OC([H])([H])C([H])([H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C(=O)c2c([H])c([H])c(C(=O)N([H])[C@]3([H])C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])[C@]([H])(C([H])([H])[H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])N(C(=O)N([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])c2nc(-c3c([H])c([H])c(C([H])([H])[H])c(C([H])([H])[H])c3[H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(S(=O)(=O)C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])c2nc([H])c(C(=O)N([H])[H])c([H])c2C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])C(=O)C([H])([H])N2C(=O)N(C([H])([H])c3c([H])c([H])c([H])c([H])c3[H])C([H])([H])C2=O)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(C#N)c([H])c(C([H])([H])C([H])([H])[C@]([H])(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])N=C(N([H])[H])N([H])[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2nc3c(C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])[H])nc(N([H])[H])nc3c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2c([H])c([H])c(C(=O)N(C([H])([H])[H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(C([H])([H])[H])c([H])c(C([H])([H])[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(N([H])C(=O)C3([H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([H])c(N([H])C(=O)c2c([H])c([H])c([H])c([H])c2[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([H])c(S(=O)(=O)c2c([H])c([H])c(S(=O)(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c2[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])[C@@]1([H])[C@]([H])(N([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[C@@]([H])(C([H])([H])[H])[C@]([H])(C([H])([H])[H])[C@@]1([H])C([H])([H])[H]',\n",
-       "     ' [H]c1nc(C([H])([H])[H])nc(-c2c([H])c([H])c([H])c(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H]) c2[H])c1[H]',\n",
-       "     ' [H]c1nc([H])c([H])c(-c2nc(N([H])[H])nc(N([H])[H])c2[H])c1[H]',\n",
-       "     ' [H]OC([H])([H])[C@@]1([H])O[C@@]([H])(c2sc(C([H])([H])[H])c([H])c2[H])[C@]([H])(O[H])[C@@]([H])(O[H])[C@]([H])(O[H])[C@]1([H])O[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(N([H])[H])C([H])([H])c2c([H])c([H])c3c(c2[H])OC([H])([H])O3)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c([H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N2C([H])([H])C([H])([H])C([H])([H])C([H])([H])C2([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c(OC([H])([H])[H])c1[H]',\n",
-       "     ' [H]c1nc([H])c([H])c(-c2c([H])nc(N([H])c3nc([H])c([H])c([H])c3[H])n2)c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c(C([H])([H])[H])c2[H])c([H])c1[H]'],\n",
-       "    'logprobs': [None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None],\n",
-       "    'model': 'ada:ft-personal-2023-02-05-21-51-00'},\n",
-       "   'generated_smiles': (#92) ['[H]c1c([H])c([H])c(-c2c(OC([H])([H])[H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c(C([H])([H])N4C([H])([H])C([H])([H])C([H])([H])C4([H])[H])c3[H])c([H])c2[H])c([H])c1[H]','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c3c(c2[H])c([H])c(C(=O)N([H])[H])c([H])c3c2[H])c([H])c1[H]','[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])[C','[H]c1c([H])c([H])c([H])c([H])c1-c1c([H])c([H])c(S(=O)(=O)N([H])c2c([H])c([H])c(N3C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]','[H]c1c([H])c([H])c(C([H])([H])[C','[H]c1c([H])c([H])c(-c2nc3c(c([H])nn3c2[H])-c2c([H])c([H])c([H])c([H])c2[H])c([H])c1[H]','[H]c1c([H])c([H])c2c(c1[H])N=C(N1C([H])([H])[C@]([H])(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C2([H])[H]','[H]c1c([H])c([H])c(C([H])([H])[C','[H]N(C(=O)C1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H])[C@]1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H]','[H]c1c([H])c([H])c(C([H])([H])[H])c(-c2nc3c(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])nc([H])c3c(=O)n2C([H])([H])[H])c1[H]'...],\n",
-       "   'train_smiles': 0     [H]c1c([H])c([H])c(C([H])(c2c([H])c([H])c([H])...\n",
-       "   1     [H]c1c(OC([H])([H])C([H])([H])C([H])([H])N2C([...\n",
-       "   2     [H]c1c([H])c([H])c2c(c1OC([H])(C([H])([H])[H])...\n",
-       "   3     [H]OC([H])([H])[C@@]1([H])O[C@@]([H])(c2c([H])...\n",
-       "   4     [H]c1c([H])c([H])c(-c2c([H])c([H])c(C([H])([H]...\n",
-       "                               ...                        \n",
-       "   87    [H]Oc1nc(N([H])/N=C(\\[H])c2nc([H])c([H])c([H])...\n",
-       "   88    [H]c1c([H])c([H])c(C([H])([H])C(=O)N(C([H])([H...\n",
-       "   89    [H]c1nc(N([H])c2c([H])c([H])c(OC([H])([H])c3c(...\n",
-       "   90    [H]c1c(C(F)(F)F)nc(C([H])([H])C([H])([H])c2c([...\n",
-       "   91    [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...\n",
-       "   Name: label, Length: 92, dtype: object,\n",
-       "   'frac_valid': 0.5217391304347826,\n",
-       "   'frac_unique': 1.0,\n",
-       "   'frac_smiles_in_train': 0.0,\n",
-       "   'frac_smiles_in_pubchem': 0.5208333333333334,\n",
-       "   'in_pubchem': [2,\n",
-       "    3,\n",
-       "    4,\n",
-       "    5,\n",
-       "    6,\n",
-       "    7,\n",
-       "    9,\n",
-       "    12,\n",
-       "    13,\n",
-       "    15,\n",
-       "    16,\n",
-       "    20,\n",
-       "    23,\n",
-       "    25,\n",
-       "    26,\n",
-       "    29,\n",
-       "    34,\n",
-       "    39,\n",
-       "    40,\n",
-       "    41,\n",
-       "    42,\n",
-       "    44,\n",
-       "    45,\n",
-       "    46,\n",
-       "    47],\n",
-       "   'kld': 0.2284974251758562,\n",
-       "   'frechet_d': 41.73608052676047,\n",
-       "   'frechet_score': 0.00023705553832644002,\n",
-       "   'valid_smiles': ['[H]c1c([H])c([H])c(-c2c(OC([H])([H])[H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c(C([H])([H])N4C([H])([H])C([H])([H])C([H])([H])C4([H])[H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c([H])c([H])c1-c1c([H])c([H])c(S(=O)(=O)N([H])c2c([H])c([H])c(N3C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]N(C(=O)C1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H])[C@]1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])C(=O)N([H])c2c([H])c([H])c([H])c([H])c2[H])c(C([H])([H])[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c([H])c(Cl)c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])C(=O)c2c([H])c([H])c(C(C([H])([H])[H])(C([H])([H])[H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])N(C(=O)c3c([H])c([H])c([H])c(Oc4c([H])c([H])c([H])c([H])c4[H])c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2nc3c([H])c([H])c([H])c([H])c3n2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])N(C(=O)N([H])c1c([H])c([H])c(Cl)c([H])c1[H])[C@]([H])(c1c([H])c([H])c([H])c([H])c1[H])C2([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(S(=O)(=O)N([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(S(=O)(=O)N([H])c2c([H])c([H])c(N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(-c2c([H])c([H])c(S(=O)(=O)C([H])([H])[H])c([H])c2[H])c([H])c([H])c1C([H])([H])C([H])([H])C([H])([H])N1C([H])([H])C([H])([H])N(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C1([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2nc(N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])nc([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C([H])([H])N(c3c([H])c([H])c([H])c(C([H])([H])[H])c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c(S(=O)(=O)N([H])C([H])([H])c3nc4c([H])c([H])c([H])c([H])c4c3=O)c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C(=O)N([H])c2c([H])c([H])c(N([H])C(=O)C([H])([H])[H])c([H])c2[H])c([H])c([H])c1C#N',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])N(C(=O)C3([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N([H])c2nc([H])c(C(=O)N([H])[H])c([H])c2C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])c2nc(N([H])C3([H])C([H])([H])C([H])([H])N(C(=O)C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C([H])([H])[H])c([H])c([H])c1-c1nc2c(c([H])c1C([H])([H])C([H])([H])N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C2([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C([H])([H])C([H])(N([H])C(=O)c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1nc(N([H])c2c([H])c([H])c(N([H])C(=O)c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c([H])c1[H]',\n",
-       "    '[H]C([H])=C([H])C(=O)C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])c1c([H])c([H])c(OC([H])([H])C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c([H])c([H])c1-c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2nc([H])c3c(N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])nc([H])c3n2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(S(=O)(=O)N([H])[H])c([H])c1-c1c([H])c([H])c(Cl)c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c(Cl)c([H])c2Cl)c([H])c1Cl',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])c1nnc(-c3c([H])c([H])c([H])c([H])c3[H])c([H])c1C(=O)N([H])C([H])([H])C2([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])c2nc3c([H])c(OC([H])([H])[H])c([H])c([H])c3c(=O)n2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c(OC([H])([H])C([H])([H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C(=O)c2c([H])c([H])c(C(=O)N([H])[C@]3([H])C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])[C@]([H])(C([H])([H])[H])C2([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])N(C(=O)N([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])C2([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])c2nc(-c3c([H])c([H])c(C([H])([H])[H])c(C([H])([H])[H])c3[H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(S(=O)(=O)C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N([H])c2nc([H])c(C(=O)N([H])[H])c([H])c2C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N([H])C(=O)C([H])([H])N2C(=O)N(C([H])([H])c3c([H])c([H])c([H])c([H])c3[H])C([H])([H])C2=O)c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C#N)c([H])c(C([H])([H])C([H])([H])[C@]([H])(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])N=C(N([H])[H])N([H])[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2nc3c(C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])[H])nc(N([H])[H])nc3c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2c([H])c([H])c(C(=O)N(C([H])([H])[H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C([H])([H])[H])c([H])c(C([H])([H])[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c(N([H])C(=O)C3([H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c([H])c(N([H])C(=O)c2c([H])c([H])c([H])c([H])c2[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c([H])c(S(=O)(=O)c2c([H])c([H])c(S(=O)(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c2[H])c1[H]',\n",
-       "    '[H]c1nc([H])c([H])c(-c2nc(N([H])[H])nc(N([H])[H])c2[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c([H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c(C([H])([H])[H])c2[H])c([H])c1[H]'],\n",
-       "   'valid_indices': [0,\n",
-       "    3,\n",
-       "    8,\n",
-       "    11,\n",
-       "    12,\n",
-       "    13,\n",
-       "    14,\n",
-       "    17,\n",
-       "    21,\n",
-       "    23,\n",
-       "    24,\n",
-       "    28,\n",
-       "    29,\n",
-       "    30,\n",
-       "    31,\n",
-       "    32,\n",
-       "    34,\n",
-       "    36,\n",
-       "    37,\n",
-       "    42,\n",
-       "    49,\n",
-       "    50,\n",
-       "    53,\n",
-       "    54,\n",
-       "    56,\n",
-       "    57,\n",
-       "    58,\n",
-       "    63,\n",
-       "    66,\n",
-       "    67,\n",
-       "    68,\n",
-       "    69,\n",
-       "    70,\n",
-       "    71,\n",
-       "    72,\n",
-       "    73,\n",
-       "    74,\n",
-       "    75,\n",
-       "    76,\n",
-       "    77,\n",
-       "    78,\n",
-       "    79,\n",
-       "    80,\n",
-       "    81,\n",
-       "    84,\n",
-       "    86,\n",
-       "    88,\n",
-       "    91],\n",
-       "   'novel_indices': [0,\n",
-       "    3,\n",
-       "    8,\n",
-       "    11,\n",
-       "    12,\n",
-       "    13,\n",
-       "    14,\n",
-       "    17,\n",
-       "    21,\n",
-       "    23,\n",
-       "    24,\n",
-       "    28,\n",
-       "    29,\n",
-       "    30,\n",
-       "    31,\n",
-       "    32,\n",
-       "    34,\n",
-       "    36,\n",
-       "    37,\n",
-       "    42,\n",
-       "    49,\n",
-       "    50,\n",
-       "    53,\n",
-       "    54,\n",
-       "    56,\n",
-       "    57,\n",
-       "    58,\n",
-       "    63,\n",
-       "    66,\n",
-       "    67,\n",
-       "    68,\n",
-       "    69,\n",
-       "    70,\n",
-       "    71,\n",
-       "    72,\n",
-       "    73,\n",
-       "    74,\n",
-       "    75,\n",
-       "    76,\n",
-       "    77,\n",
-       "    78,\n",
-       "    79,\n",
-       "    80,\n",
-       "    81,\n",
-       "    84,\n",
-       "    86,\n",
-       "    88,\n",
-       "    91],\n",
-       "   'novel_smiles': ['[H]c1c([H])c([H])c(-c2c(OC([H])([H])[H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c(C([H])([H])N4C([H])([H])C([H])([H])C([H])([H])C4([H])[H])c3[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c([H])c([H])c1-c1c([H])c([H])c(S(=O)(=O)N([H])c2c([H])c([H])c(N3C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]N(C(=O)C1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H])[C@]1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])C(=O)N([H])c2c([H])c([H])c([H])c([H])c2[H])c(C([H])([H])[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c([H])c(Cl)c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])C(=O)c2c([H])c([H])c(C(C([H])([H])[H])(C([H])([H])[H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])N(C(=O)c3c([H])c([H])c([H])c(Oc4c([H])c([H])c([H])c([H])c4[H])c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2nc3c([H])c([H])c([H])c([H])c3n2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])N(C(=O)N([H])c1c([H])c([H])c(Cl)c([H])c1[H])[C@]([H])(c1c([H])c([H])c([H])c([H])c1[H])C2([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(S(=O)(=O)N([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(S(=O)(=O)N([H])c2c([H])c([H])c(N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(-c2c([H])c([H])c(S(=O)(=O)C([H])([H])[H])c([H])c2[H])c([H])c([H])c1C([H])([H])C([H])([H])C([H])([H])N1C([H])([H])C([H])([H])N(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C1([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2nc(N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])nc([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C([H])([H])N(c3c([H])c([H])c([H])c(C([H])([H])[H])c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c(S(=O)(=O)N([H])C([H])([H])c3nc4c([H])c([H])c([H])c([H])c4c3=O)c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C(=O)N([H])c2c([H])c([H])c(N([H])C(=O)C([H])([H])[H])c([H])c2[H])c([H])c([H])c1C#N',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])N(C(=O)C3([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N([H])c2nc([H])c(C(=O)N([H])[H])c([H])c2C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])c2nc(N([H])C3([H])C([H])([H])C([H])([H])N(C(=O)C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C([H])([H])[H])c([H])c([H])c1-c1nc2c(c([H])c1C([H])([H])C([H])([H])N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C2([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C([H])([H])C([H])(N([H])C(=O)c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1nc(N([H])c2c([H])c([H])c(N([H])C(=O)c3c([H])c([H])c(C([H])([H])[H])c([H])c3[H])c([H])c2[H])c([H])c([H])c1[H]',\n",
-       "    '[H]C([H])=C([H])C(=O)C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])c1c([H])c([H])c(OC([H])([H])C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c([H])c([H])c1-c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2nc([H])c3c(N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])nc([H])c3n2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(S(=O)(=O)N([H])[H])c([H])c1-c1c([H])c([H])c(Cl)c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c(Cl)c([H])c2Cl)c([H])c1Cl',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])c1nnc(-c3c([H])c([H])c([H])c([H])c3[H])c([H])c1C(=O)N([H])C([H])([H])C2([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])c2nc3c([H])c(OC([H])([H])[H])c([H])c([H])c3c(=O)n2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c(OC([H])([H])C([H])([H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)C(=O)c2c([H])c([H])c(C(=O)N([H])[C@]3([H])C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])[C@]([H])(C([H])([H])[H])C2([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])C([H])([H])C([H])([H])N(C(=O)N([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])C2([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])c2nc(-c3c([H])c([H])c(C([H])([H])[H])c(C([H])([H])[H])c3[H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(S(=O)(=O)C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N([H])c2nc([H])c(C(=O)N([H])[H])c([H])c2C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N([H])C(=O)C([H])([H])N2C(=O)N(C([H])([H])c3c([H])c([H])c([H])c([H])c3[H])C([H])([H])C2=O)c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C#N)c([H])c(C([H])([H])C([H])([H])[C@]([H])(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])N=C(N([H])[H])N([H])[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2nc3c(C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])[H])nc(N([H])[H])nc3c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2c([H])c([H])c(C(=O)N(C([H])([H])[H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C([H])([H])[H])c([H])c(C([H])([H])[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c(N([H])C(=O)C3([H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c([H])c(N([H])C(=O)c2c([H])c([H])c([H])c([H])c2[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c([H])c(S(=O)(=O)c2c([H])c([H])c(S(=O)(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c2[H])c1[H]',\n",
-       "    '[H]c1nc([H])c([H])c(-c2nc(N([H])[H])nc(N([H])[H])c2[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c([H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C([H])([H])[H])c(C([H])([H])[H])c2[H])c([H])c1[H]'],\n",
-       "   'expected': [2.1353246951799685,\n",
-       "    2.1123460888902255,\n",
-       "    3.650217937474436,\n",
-       "    1.7674429208827362,\n",
-       "    2.6417340087640078,\n",
-       "    1.6231275501684852,\n",
-       "    3.246640657751793,\n",
-       "    1.8040914351738353,\n",
-       "    2.1281730733563666,\n",
-       "    1.411433568423245,\n",
-       "    3.513532458758056,\n",
-       "    2.670504484956229,\n",
-       "    2.239241524840996,\n",
-       "    0.6881904518953377,\n",
-       "    1.2712306643490647,\n",
-       "    2.581698475809956,\n",
-       "    3.417274425406017,\n",
-       "    1.538943599221743,\n",
-       "    1.9845429163942245,\n",
-       "    3.877841145317224,\n",
-       "    3.34016836276274,\n",
-       "    1.3836963476782458,\n",
-       "    3.1082163326771157,\n",
-       "    1.9722765807169642,\n",
-       "    3.686639689591095,\n",
-       "    2.2748460983073144,\n",
-       "    2.538214365803805,\n",
-       "    1.3415924297383302,\n",
-       "    2.135967850985337,\n",
-       "    1.3774302448851743,\n",
-       "    2.774216067343345,\n",
-       "    3.055096878363862,\n",
-       "    2.1000247175151543,\n",
-       "    0.33822766619480693,\n",
-       "    1.6132366015672883,\n",
-       "    2.115310034863763,\n",
-       "    3.588133909979325,\n",
-       "    3.176883778631613,\n",
-       "    3.480547870596866,\n",
-       "    2.728282645296599,\n",
-       "    1.6149156846762678,\n",
-       "    5.374731436440936,\n",
-       "    2.345750367158073,\n",
-       "    0.13771814503603663,\n",
-       "    1.7630519287152748,\n",
-       "    2.612818188358495,\n",
-       "    2.9711651688902623,\n",
-       "    1.987971511611876,\n",
-       "    3.6898026509662807,\n",
-       "    2.8208410406764117,\n",
-       "    1.4546936857831523,\n",
-       "    0.5284051396074474,\n",
-       "    2.473930532872131,\n",
-       "    3.898516421975269,\n",
-       "    3.7943525226816313,\n",
-       "    1.6800774055988468,\n",
-       "    1.8344042191383803,\n",
-       "    2.86890826945903,\n",
-       "    2.1147925213362435,\n",
-       "    2.5208249144110955,\n",
-       "    3.0023349811631137,\n",
-       "    3.4295999414748453,\n",
-       "    3.2425429664656678,\n",
-       "    2.673845284963159,\n",
-       "    2.641035221596825,\n",
-       "    3.897699030055646,\n",
-       "    2.664687883048459,\n",
-       "    1.8855621612638922,\n",
-       "    2.54151726106847,\n",
-       "    1.7779461965686747,\n",
-       "    3.062443133846699,\n",
-       "    3.4034285103299267,\n",
-       "    2.807322519998883,\n",
-       "    2.7158730142692553,\n",
-       "    1.8264221794140145,\n",
-       "    1.5772670884036426,\n",
-       "    2.9170058277493225,\n",
-       "    1.9293810125760356,\n",
-       "    5.163738213662894,\n",
-       "    2.267077558924912,\n",
-       "    2.5482239290404856,\n",
-       "    0.7996282608124348,\n",
-       "    3.3105697253823165,\n",
-       "    2.0202506327958822,\n",
-       "    2.4420493835199673,\n",
-       "    3.482552484783243,\n",
-       "    2.4216546207474265,\n",
-       "    2.3092026766834697,\n",
-       "    1.3249495208668236,\n",
-       "    3.1804506853079806,\n",
-       "    2.22464832107317,\n",
-       "    2.895223625866164],\n",
-       "   'temperature': 0.5,\n",
-       "   'prevalence': 0.0,\n",
-       "   'fragment_fraction': 0.0,\n",
-       "   'formatted_test':                                                prompt  \\\n",
-       "   0   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   1   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   2   What is a molecule with bandgap 3.7 and C#CBr ...   \n",
-       "   3   What is a molecule with bandgap 1.8 and C#CBr ...   \n",
-       "   4   What is a molecule with bandgap 2.6 and C#CBr ...   \n",
-       "   ..                                                ...   \n",
-       "   87  What is a molecule with bandgap 2.3 and C#CBr ...   \n",
-       "   88  What is a molecule with bandgap 1.3 and C#CBr ...   \n",
-       "   89  What is a molecule with bandgap 3.2 and C#CBr ...   \n",
-       "   90  What is a molecule with bandgap 2.2 and C#CBr ...   \n",
-       "   91  What is a molecule with bandgap 2.9 and C#CBr ...   \n",
-       "   \n",
-       "                                              completion  \\\n",
-       "   0    [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C...   \n",
-       "   1    [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=...   \n",
-       "   2    [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])...   \n",
-       "   3    [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([...   \n",
-       "   4    [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[...   \n",
-       "   ..                                                ...   \n",
-       "   87   [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3...   \n",
-       "   88   [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(...   \n",
-       "   89   [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O...   \n",
-       "   90   [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nn...   \n",
-       "   91   [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H...   \n",
-       "   \n",
-       "                                                   label        representation  \n",
-       "   0   [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C(...  [2.1353246951799685]  \n",
-       "   1   [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=O...  [2.1123460888902255]  \n",
-       "   2   [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])[...   [3.650217937474436]  \n",
-       "   3   [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([H...  [1.7674429208827362]  \n",
-       "   4   [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[H...  [2.6417340087640078]  \n",
-       "   ..                                                ...                   ...  \n",
-       "   87  [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3c...  [2.3092026766834697]  \n",
-       "   88  [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...  [1.3249495208668236]  \n",
-       "   89  [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O)...  [3.1804506853079806]  \n",
-       "   90  [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nnc...    [2.22464832107317]  \n",
-       "   91  [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H]...   [2.895223625866164]  \n",
-       "   \n",
-       "   [92 rows x 4 columns],\n",
-       "   'group': 'C#CBr'},\n",
-       "  {'completions': {'choices': [' [H]c1c([H])c([H])c([C@]([H])(C(=O)N([H])S(=O)(=O)c2c([H])c([H])c(-c3c([H])c([H])c(Cl)c([H])c3[H])c([H])c2[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c(C(=O)N([H])[C@@]([H])(C([H])([H])[H])C([H])([H])[H])noc2-c2c([H])c([H])c([H])c(C(F)(F)F)c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([C@]([H])(N([H])C(=O)c2c([H])c([H])c([H])c([H])c2[H])N([H])C(=O)c2c([H])c([H])c(Br)c([H])c2[H])c1[H]',\n",
-       "     ' [H]c1c([H])c(C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])OC([H])([H])C2([H])[H])c(C([H])([H])[H])c(C([H])([H])[H])c1OC([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c(C(=O)N2C([H])([H])C([H])([H])[C@@]([H])(N(C(=O)c3nc4c([H])c([H])c([H])c([H])c4c3[H])C([H])([H])C2([H])[H])C([H])([H])[H])c([H])c([H])c1[H]',\n",
-       "     ' [H]Oc1c([H])c([H])c([H])c(/N=N/c2c([H])c([H])c([H])c([H])c2[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])[C@]([H])(C(=O)N([H])C([H])([H])C([H])([H])N1C(=O)C([H])([H])C([H])([H])C([H])([H])C1([H])[H])N2[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2nc3c(c([H])n2C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(N([H])c2nc3c([H])c([H])c([H])c([H])c3c2C3([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(C#N)c(C(=O)C([H])([H])N([H])C([H])([H])C([H])([H])C([H])([H])N3C(=O)C([H])([H])C([H])([H])C3=O)c([H])c([H])c2n1',\n",
-       "     ' [H]c1c([H])c([H])c(N([H])C(=O)C([H])([H])C([H])([H])c2nc3c([H])c([H])c([H])c([H])c3n2[C@]2([H])C([H])([H])[C@@]([H])(C(=O)OC(C([H])([H])[H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1nc([H])c2c(c1[H])C(=O)N([H])c1c([H])c([H])c([H])c(C([H])([H])C([H])([H])Oc3c([H])c([H])c(Cl)c([H])c3Cl)c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(C([H])([H])[H])(C([H])([H])[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1C([H])([H])[H])N([H])[C@@]([H])(C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H]',\n",
-       "     ' [H]/C(=C(\\\\[H])C(=O)c1c([H])c([H])c([H])c([H])c1[H])c1c([H])c(C([H])([H])[H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2nc3c(nc(C([H])([H])[H])n2[H])C([H])([H])C([H])([H])[C@]3([H])C([H])([H])[C@@]([H])(C([H])([H])[H])[C@@]([H])(C([H])([H])[H])C3([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])[C@]([H])(C([H])([H])C([H])([H])[H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]C1=C(c2c([H])c([H])c(Cl)c([H])c2[H])C([H])([H])C(=O)N1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(S(=O)(=O)c2c([H])c([H])c(C(=O)N3C([H])([H])C([H])([H])C([H])([H])[C@]3([H])N([H])C3([H])[H])c([H])c2OC([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]Oc1c([H])c([H])c2c(c1[H])c(C([H])([H])[H])C([H])([H])C([H])([H])[C@@]2([H])C([H])([H])[C@@]1([H])N(C([H])([H])[H])[C@]([H])(C([H])([H])[H])[C@]1([H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c(C(F)(F)F)c([H])c([H])c1C([H])([H])C([H])([H])N([H])c1nc3c(C([H])([H])[H])c([C@@]([H])(C([H])([H])[H])C([H])([H])[H])c([H])c([H])c3c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(C(=O)N([H])[C@@]2([H])[C@@]([H])(C([H])([H])[H])[C@]([H])(C([H])([H])c3c([H])c([H])c([H])c([H])c3[H])C([H])([H])C2([H])[H])c([H])c([H])c1C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c(C(=O)N([H])[C@@]([H])(C([H])([H])[H])C([H])([H])[H])c([H])c([H])c1C([H])([H])[H]',\n",
-       "     ' [H]c1nc([H])c([H])c([H])c1N1C(=O)N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c([C@@]([H])(C([H])([H])[H])C([H])([H])[H])c(N([H])c2nc(-c3c([H])c([H])c([H])c([H])c3[H])c3c([H])c([H])c([H])c([H])c3n2[H])c1[H]',\n",
-       "     ' [H]ON([H])C(=O)[C@]([H])(N([H])C(=O)[C@@]([H])(C(=O)[C@@]([H])(N([H])C(=O)[C@@]([H])(N([H])c1c([H])c([H])c([N+](=O)[O-])c([H])c1[H])C([H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c(Cl)c([H])c(Cl)c1[C@]1([H])C(=O)N([H])[C@@]([H])(c2c([H])c([H])c([H])c([H])c2O[H])N1[H]',\n",
-       "     ' [H]C1=C(c2c([H])nc([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1=O',\n",
-       "     ' [H]c1nc2c(c(C([H])([H])[H])c([H])c(F)c2c([H])c1[H])C([H])([H])[C@]2([H])C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])[C@]2([H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])N([H])C(=O)[C@@]([H])(N([H])C(=O)C([H])([H])c1c([H])c([H])c([H])c([H])c1[H])[C@]2([H])c1c([H])c([H])c(Cl)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])c2nc(N([H])c3nc(C([H])([H])[H])c([H])c([H])c3[H])c3c(=O)n(C([H])([H])C([H])([H])C([H])([H])O4)c(=O)n2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])N(C(=O)C([H])([H])C([H])([H])Oc1c([H])c([H])c([H])c(Br)c1[H])S(=O)(=O)c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)N([H])c2nc3c(C([H])([H])[H])c([H])c([H])c(-c4c([H])c([H])c([H])n4[H])c3c2C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([C@@]2([H])N(C(C#N)C(=O)N([H])c3nc4c([H])c([H])c([H])c([H])c4n3[C@]2([H])C([H])([H])[H])C([H])([H])[C@]31[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(C([H])([H])C([H])([H])N([H])[H])c([H])c(C([H])([H])C([H])([H])Oc2c([H])c([H])c3c(c2[H])c(C(=O)OC([H])([H])C([H])([H])C([H])([H])C([H])([H])N4C([H])([H])C([H])([H])C4([H])[H])c([H])c(=O)n3[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])N(C(=O)N(C([H])([H])[H])C([H])([H])[C@]([H])(C(=O)N([H])[C@@]([H])(C(=O)N([H])[C@@]([H])(C(=O)N([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])C([H])(C([H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])N=C(N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])N([H])[H])c1c([H])c([H])n(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(N([H])C(=O)c2c([H])c(Cl)c(F)c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N([H])C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])C2([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c3c(c(=O)n4c([H])c([H])c([H])c([H])c4n3[H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])N(C([H])([H])c3c([H])c([H])c([H])c([H])c3Cl)C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(F)c([H])c1-c1c([H])c([H])c(F)c(F)c1[H]',\n",
-       "     ' [H]C1=NC(=O)N([H])[C@]([H])(C(=O)N([H])c2c([H])c([H])c([H])c([H])c2[H])[C@]([H])(c1c([H])c([H])c([H])c([H])c1[H])N([H])C(=O)c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c([H])c([H])c(N3C([H])([H])C([H])([H])OC([H])([H])C3([H])[H])c([H])c2c1[H]',\n",
-       "     ' [H]c1nc(N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])Oc2c([H])c([H])c([H])c([H])c2C([H])([H])[H])nc([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2nc3nc(N([H])[H])nc(N([H])[H])c3c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([C@]([H])(N([H])C(=O)c2c([H])c([H])c([H])c3c(c2[H])OC([H])([H])O3)C([H])([H])C([H])([H])C([H])([H])N([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])[C@]4([H])N(C([H])([H])C([H])([H])[C@]([H])(C([H])([H])C([H])([H])[H])C([H])([H])C4([H])[H])C([H])([H])C3([H])[H])c1[H]',\n",
-       "     ' [H]OC([H])([H])C1=C(c2c([H])c([H])c([H])c(N([H])c3nc([H])c(OC([H])([H])[H])c([H])c3[H])c2[H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c(F)c([H])c([H])c2c(c1[H])N([H])C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])C([H])([H])N1C([H])([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@@]([H])(C(=O)N2C([H])([H])C([H])([H])C([H])([H])[C@]2([H])C([H])([H])C([H])([H])N(C(=O)[C@]([H])(N([H])C(=O)[C@]([H])(N([H])C(=O)[C@@]([H])(N([H])[H])C#N)C([H])([H])C([H])([H])C([H])([H])N([H])[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])N=C(N([H])[H])N([H])[H])c([H])c1[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([C@@]2([H])N(C(=O)c3nc4c(n3C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])n3C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]N(C(=O)C1=C([H])C(=O)N([H])C([H])([H])C([H])([H])C1([H])[H])[C@@]1([H])C([H])([H])C([H])([H])[C@]2([H])C([H])([H])C([H])([H])[C@@]1([H])[C@@]3([H])C([H])([H])[C@]2(C([H])([H])[H])C([H])([H])[C@]3([H])[C@@]1([H])C([H])([H])[C@]2(C([H])([H])[H])C([H])([H])[C@@]1(C([H])([H])[H])C([H])([H])[C@@]([H])(C([H])([H])[H])C([H])([H])[C@@]23C([H])([H])[C@@]1([H])[C@@]2([H])[C@@]3([H])C([H])([H])[C@@]([H])(C3([H])[H])C([H])([H])[C@@]1(C([H])([H])[H])C([H])([H])[C@@]2([H])[C@@]2(C([H])([H])[H])[C@]([H])(C([H])([H])[H])C2([H])[H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])[C@]([H])(C(=O)N([H])C(=O)[C@]([H])(C(=O)N([H])[C@]([H])(C(=O)N([H])C(=O)[C@@]([H])(N([H])S(=S)(=S)C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)[C@@]([H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c(F)c([H])c([H])c(C([H])([H])[H])c2F)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-n2nc(-c3c([H])c([H])c(N([H])C(=O)C([H])([H])[H])c([H])c3[H])nc3c2C([H])([H])C([H])([H])N([H])C([H])([H])C3([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(Br)c([H])c([C@]([H])(C(=O)N2C([H])([H])C([H])([H])N(c3c([H])c(Br)c([H])c([H])c3[H])C([H])([H])C2([H])[H])[C@]2([H])C([H])([H])C([H])([H])c3oc(=O)n(C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])[H])c([H])c3[H])c1[H]',\n",
-       "     ' [H]c1c([H])c(N([H])C(=O)c2c([H])c([H])c([H])c([H])c2[H])c([H])c(-n2c(-c3c([H])c([H])c([H])c(C#N)c3[H])c3c([H])c(C(=O)N([H])C([H])([H])[H])c([H])c([H])c32)c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C2=N[C@]([H])(C([H])([H])[H])C([H])([H])[C@@]([H])(N([H])C(=O)c3c([H])c([H])c(C(F)(F)F)c([H])c3[H])C([H])([H])[C@@]2([H])c2nc([H])c([H])n2)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(C([H])([H])[H])n2nc(-c3c(SC([H])([H])[H])c([H])c([H])c([H])c3C([H])([H])[H])c(C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c([H])c(C(F)(F)F)c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(Oc3nc4c(c3[H])OC([H])([H])C([H])([H])O4)c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]ON([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "     ' [H]C1=C(c2c([H])c([H])c(C([H])([H])N([H])C(=O)c3c([H])c([H])c(OC([H])([H])[H])c([H])c3C([H])([H])[H])c([H])c2[H])C([H])([H])C([H])([H])[H]',\n",
-       "     ' [H]O[C@]1([H])[C@@]([H])([C@]([H])(C([H])([H])[H])[C@]2([H])[C@]([H])(C([H])([H])Oc3c([H])c([H])c(C#N)c([H])c3[H])C([H])([H])C([H])([H])C2([H])[H])N1[H]',\n",
-       "     ' [H]OC([H])([H])[C@@]([H])(C(=O)C([H])([H])N([H])C(=O)[C@@]([H])(N([H])C(=O)[C@@]([H])(N([H])C(=O)[C@@]([H])(N([H])C(=O)[C@@]([H])(N([H])C(=O)C([H])([H])[H])C([H])([H])C([H])([H])[H])C([H])(C([H])([H])[H])C([H])([H])[H])C([H])(C([H])([H])[H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H])C([H])([H])[H])C([H])([H])[H]',\n",
-       "     ' [H]c1nn(C([H])([H])C([H])([H])c2c([H])c([H])c(OC([H])([H])[H])c([H])c2[H])nc1N([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(S(=O)(=O)N([H])C2=Nc3c([H])c(N([H])C(=O)N([H])C(=O)C([H])(C([H])([H])[H])C([H])([H])[H])c([H])c([H])c3C(=O)N([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(OC([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]N([H])C(=O)c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]Oc1c([H])c([H])c2c(n1C([H])([H])C([H])([H])N([H])[C@]([H])(C([H])([H])C([H])([H])[C@]3(N=C(c4c([H])c([H])c([H])c(C(F)(F)F)c4[H])C3([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])C([H])([H])[H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c(S(=O)(=O)N3C([H])([H])C([H])([H])OC([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(Cl)c(N([H])C(=O)c2c([H])c([H])c(OC([H])([H])[H])c(OC([H])([H])[H])c2[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])[C@@]3(C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])-c1c([H])c([H])c(C([H])([H])[C@@]3([H])C([H])([H])C([H])([H])[C@]3([H])C3([H])[H])c(Cl)c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([C@@]([H])(N([H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c([H])c3c2c([H])c([H])nn3[H])c([H])c1[H]',\n",
-       "     ' [H]C1=C(c2c([H])c([H])c(C([H])([H])[H])c([H])c2[H])C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c(N([H])C3=C(C(=O)OC([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])c3c([H])c([H])c4c([H])c([H])c([H])c([H])c4c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]N(c1c([H])c([H])c(N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c1[H])(C([H])([H])[H])C([H])([H])[H]',\n",
-       "     ' [H]O[C@]([H])(C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])N([H])C(=O)C([H])([H])[C@]([H])(C(=O)N([H])c1c([H])c([H])c([H])c([H])c1[H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H])[C@]1([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(N([H])S(=O)(=O)C([H])([H])c2c([H])c([H])c(Cl)c(Oc3c([H])c([H])c([H])c([H])c3[H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])c2nc3c(N([H])[C@@]([H])(C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c2[H])C([H])([H])C1([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]C1=C(c2c([H])c([H])c(OC([H])([H])[H])c([H])c2[H])C(=O)N(C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C1=O',\n",
-       "     ' [H]OC(=O)c1c([H])c([H])c([H])c([H])c1/C(=N/N([H])C([H])([H])C([H])([H])[H])N1C(=O)C([H])([H])[C@]1([H])c1c([H])c([H])c(C(F)(F)F)c([H])c1[H]',\n",
-       "     ' [H]c1nc2c(c(N([H])C(=O)c3c([H])c([H])c([H])c([H])c3[H])C([H])([H])[H])c([H])c([H])n2[H]',\n",
-       "     ' [H]C1=C([H])C([H])([H])C([H])([H])C([H])([H])[C@@]([H])(N([H])C(=O)C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])c2c([H])c([H])c([H])c(C(=O)N(c3nc4c([H])c([H])c([H])c(C(F)(F)F)n4C([H])([H])[H])c3c([H])c2[H])c2c([H])c([H])c([H])c([H])c2n3c([H])c([H])c([H])c23)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])N([H])C([H])([H])C([H])([H])C([H])([H])N([H])C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c([H])c(-c3c(C#N)c([H])c(OC([H])([H])[H])c([H])c3C3([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c([H])c2n1C([H])([H])[H]'],\n",
-       "    'logprobs': [None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None],\n",
-       "    'model': 'ada:ft-personal-2023-02-05-21-51-00'},\n",
-       "   'generated_smiles': (#92) ['[H]c1c([H])c([H])c([C@]([H])(C(=O)N([H])S(=O)(=O)c2c([H])c([H])c(-c3c([H])c([H])c(Cl)c([H])c3[H])c([H])c2[H])C([H])([H])[H])c([H])c1[H]','[H]c1c([H])c([H])c(-c2c(C(=O)N([H])[C','[H]c1c([H])c([H])c([C@]([H])(N([H])C(=O)c2c([H])c([H])c([H])c([H])c2[H])N([H])C(=O)c2c([H])c([H])c(Br)c([H])c2[H])c1[H]','[H]c1c([H])c(C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])OC([H])([H])C2([H])[H])c(C([H])([H])[H])c(C([H])([H])[H])c1OC([H])([H])[H]','[H]c1c([H])c(C(=O)N2C([H])([H])C([H])([H])[C','[H]Oc1c([H])c([H])c([H])c(/N=N/c2c([H])c([H])c([H])c([H])c2[H])c1[H]','[H]c1c([H])c([H])c2c(c1[H])C([H])([H])[C@]([H])(C(=O)N([H])C([H])([H])C([H])([H])N1C(=O)C([H])([H])C([H])([H])C([H])([H])C1([H])[H])N2[H]','[H]c1c([H])c([H])c(-c2nc3c(c([H])n2C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c1[H]','[H]c1c([H])c([H])c(N([H])c2nc3c([H])c([H])c([H])c([H])c3c2C3([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c1[H]','[H]c1c([H])c([H])c2c(C#N)c(C(=O)C([H])([H])N([H])C([H])([H])C([H])([H])C([H])([H])N3C(=O)C([H])([H])C([H])([H])C3=O)c([H])c([H])c2n1'...],\n",
-       "   'train_smiles': 0     [H]c1c([H])c([H])c(C([H])(c2c([H])c([H])c([H])...\n",
-       "   1     [H]c1c(OC([H])([H])C([H])([H])C([H])([H])N2C([...\n",
-       "   2     [H]c1c([H])c([H])c2c(c1OC([H])(C([H])([H])[H])...\n",
-       "   3     [H]OC([H])([H])[C@@]1([H])O[C@@]([H])(c2c([H])...\n",
-       "   4     [H]c1c([H])c([H])c(-c2c([H])c([H])c(C([H])([H]...\n",
-       "                               ...                        \n",
-       "   87    [H]Oc1nc(N([H])/N=C(\\[H])c2nc([H])c([H])c([H])...\n",
-       "   88    [H]c1c([H])c([H])c(C([H])([H])C(=O)N(C([H])([H...\n",
-       "   89    [H]c1nc(N([H])c2c([H])c([H])c(OC([H])([H])c3c(...\n",
-       "   90    [H]c1c(C(F)(F)F)nc(C([H])([H])C([H])([H])c2c([...\n",
-       "   91    [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...\n",
-       "   Name: label, Length: 92, dtype: object,\n",
-       "   'frac_valid': 0.3804347826086957,\n",
-       "   'frac_unique': 1.0,\n",
-       "   'frac_smiles_in_train': 0.0,\n",
-       "   'frac_smiles_in_pubchem': 0.4857142857142857,\n",
-       "   'in_pubchem': [2,\n",
-       "    5,\n",
-       "    6,\n",
-       "    7,\n",
-       "    8,\n",
-       "    10,\n",
-       "    13,\n",
-       "    14,\n",
-       "    15,\n",
-       "    16,\n",
-       "    19,\n",
-       "    20,\n",
-       "    23,\n",
-       "    24,\n",
-       "    25,\n",
-       "    27,\n",
-       "    34],\n",
-       "   'kld': 0.1405990887691943,\n",
-       "   'frechet_d': 42.82050282168191,\n",
-       "   'frechet_score': 0.00019083515520259794,\n",
-       "   'valid_smiles': ['[H]c1c([H])c([H])c([C@]([H])(C(=O)N([H])S(=O)(=O)c2c([H])c([H])c(-c3c([H])c([H])c(Cl)c([H])c3[H])c([H])c2[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])OC([H])([H])C2([H])[H])c(C([H])([H])[H])c(C([H])([H])[H])c1OC([H])([H])[H]',\n",
-       "    '[H]Oc1c([H])c([H])c([H])c(/N=N/c2c([H])c([H])c([H])c([H])c2[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])C([H])([H])[C@]([H])(C(=O)N([H])C([H])([H])C([H])([H])N1C(=O)C([H])([H])C([H])([H])C([H])([H])C1([H])[H])N2[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(C#N)c(C(=O)C([H])([H])N([H])C([H])([H])C([H])([H])C([H])([H])N3C(=O)C([H])([H])C([H])([H])C3=O)c([H])c([H])c2n1',\n",
-       "    '[H]c1c([H])c([H])c(C(C([H])([H])[H])(C([H])([H])[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]/C(=C(\\\\[H])C(=O)c1c([H])c([H])c([H])c([H])c1[H])c1c([H])c(C([H])([H])[H])c([H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])[C@]([H])(C([H])([H])C([H])([H])[H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]C1=C(c2c([H])c([H])c(Cl)c([H])c2[H])C([H])([H])C(=O)N1[H]',\n",
-       "    '[H]c1nc([H])c([H])c([H])c1N1C(=O)N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C1([H])[H]',\n",
-       "    '[H]C1=C(c2c([H])nc([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1=O',\n",
-       "    '[H]c1nc2c(c(C([H])([H])[H])c([H])c(F)c2c([H])c1[H])C([H])([H])[C@]2([H])C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])[C@]2([H])C([H])([H])[H]',\n",
-       "    '[H]c1c([H])c(C([H])([H])C([H])([H])N([H])[H])c([H])c(C([H])([H])C([H])([H])Oc2c([H])c([H])c3c(c2[H])c(C(=O)OC([H])([H])C([H])([H])C([H])([H])C([H])([H])N4C([H])([H])C([H])([H])C4([H])[H])c([H])c(=O)n3[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])C(=O)c2c([H])c(Cl)c(F)c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])N(C([H])([H])c3c([H])c([H])c([H])c([H])c3Cl)C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(F)c([H])c1-c1c([H])c([H])c(F)c(F)c1[H]',\n",
-       "    '[H]c1c([H])c([H])c2c([H])c([H])c(N3C([H])([H])C([H])([H])OC([H])([H])C3([H])[H])c([H])c2c1[H]',\n",
-       "    '[H]c1nc(N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])Oc2c([H])c([H])c([H])c([H])c2C([H])([H])[H])nc([H])c1[H]',\n",
-       "    '[H]OC([H])([H])C1=C(c2c([H])c([H])c([H])c(N([H])c3nc([H])c(OC([H])([H])[H])c([H])c3[H])c2[H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c(F)c([H])c([H])c(C([H])([H])[H])c2F)c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c([H])c(C(F)(F)F)c2[H])c([H])c1[H]',\n",
-       "    '[H]ON([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "    '[H]c1nn(C([H])([H])C([H])([H])c2c([H])c([H])c(OC([H])([H])[H])c([H])c2[H])nc1N([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(OC([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]N([H])C(=O)c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c(S(=O)(=O)N3C([H])([H])C([H])([H])OC([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(Cl)c(N([H])C(=O)c2c([H])c([H])c(OC([H])([H])[H])c(OC([H])([H])[H])c2[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c(N([H])C3=C(C(=O)OC([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])c3c([H])c([H])c4c([H])c([H])c([H])c([H])c4c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]O[C@]([H])(C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])N([H])C(=O)C([H])([H])[C@]([H])(C(=O)N([H])c1c([H])c([H])c([H])c([H])c1[H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H])[C@]1([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])S(=O)(=O)C([H])([H])c2c([H])c([H])c(Cl)c(Oc3c([H])c([H])c([H])c([H])c3[H])c2[H])c([H])c1[H]',\n",
-       "    '[H]C1=C(c2c([H])c([H])c(OC([H])([H])[H])c([H])c2[H])C(=O)N(C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C1=O',\n",
-       "    '[H]OC(=O)c1c([H])c([H])c([H])c([H])c1/C(=N/N([H])C([H])([H])C([H])([H])[H])N1C(=O)C([H])([H])[C@]1([H])c1c([H])c([H])c(C(F)(F)F)c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])N([H])C([H])([H])C([H])([H])C([H])([H])N([H])C2([H])[H]'],\n",
-       "   'valid_indices': [0,\n",
-       "    3,\n",
-       "    5,\n",
-       "    6,\n",
-       "    9,\n",
-       "    12,\n",
-       "    14,\n",
-       "    16,\n",
-       "    17,\n",
-       "    23,\n",
-       "    27,\n",
-       "    28,\n",
-       "    34,\n",
-       "    36,\n",
-       "    40,\n",
-       "    41,\n",
-       "    43,\n",
-       "    44,\n",
-       "    48,\n",
-       "    54,\n",
-       "    60,\n",
-       "    62,\n",
-       "    66,\n",
-       "    68,\n",
-       "    69,\n",
-       "    71,\n",
-       "    72,\n",
-       "    73,\n",
-       "    79,\n",
-       "    80,\n",
-       "    82,\n",
-       "    83,\n",
-       "    85,\n",
-       "    86,\n",
-       "    90],\n",
-       "   'novel_indices': [0,\n",
-       "    3,\n",
-       "    5,\n",
-       "    6,\n",
-       "    9,\n",
-       "    12,\n",
-       "    14,\n",
-       "    16,\n",
-       "    17,\n",
-       "    23,\n",
-       "    27,\n",
-       "    28,\n",
-       "    34,\n",
-       "    36,\n",
-       "    40,\n",
-       "    41,\n",
-       "    43,\n",
-       "    44,\n",
-       "    48,\n",
-       "    54,\n",
-       "    60,\n",
-       "    62,\n",
-       "    66,\n",
-       "    68,\n",
-       "    69,\n",
-       "    71,\n",
-       "    72,\n",
-       "    73,\n",
-       "    79,\n",
-       "    80,\n",
-       "    82,\n",
-       "    83,\n",
-       "    85,\n",
-       "    86,\n",
-       "    90],\n",
-       "   'novel_smiles': ['[H]c1c([H])c([H])c([C@]([H])(C(=O)N([H])S(=O)(=O)c2c([H])c([H])c(-c3c([H])c([H])c(Cl)c([H])c3[H])c([H])c2[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])OC([H])([H])C2([H])[H])c(C([H])([H])[H])c(C([H])([H])[H])c1OC([H])([H])[H]',\n",
-       "    '[H]Oc1c([H])c([H])c([H])c(/N=N/c2c([H])c([H])c([H])c([H])c2[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])C([H])([H])[C@]([H])(C(=O)N([H])C([H])([H])C([H])([H])N1C(=O)C([H])([H])C([H])([H])C([H])([H])C1([H])[H])N2[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(C#N)c(C(=O)C([H])([H])N([H])C([H])([H])C([H])([H])C([H])([H])N3C(=O)C([H])([H])C([H])([H])C3=O)c([H])c([H])c2n1',\n",
-       "    '[H]c1c([H])c([H])c(C(C([H])([H])[H])(C([H])([H])[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]/C(=C(\\\\[H])C(=O)c1c([H])c([H])c([H])c([H])c1[H])c1c([H])c(C([H])([H])[H])c([H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])[C@]([H])(C([H])([H])C([H])([H])[H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]C1=C(c2c([H])c([H])c(Cl)c([H])c2[H])C([H])([H])C(=O)N1[H]',\n",
-       "    '[H]c1nc([H])c([H])c([H])c1N1C(=O)N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C1([H])[H]',\n",
-       "    '[H]C1=C(c2c([H])nc([H])c([H])c2[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C1=O',\n",
-       "    '[H]c1nc2c(c(C([H])([H])[H])c([H])c(F)c2c([H])c1[H])C([H])([H])[C@]2([H])C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])[C@]2([H])C([H])([H])[H]',\n",
-       "    '[H]c1c([H])c(C([H])([H])C([H])([H])N([H])[H])c([H])c(C([H])([H])C([H])([H])Oc2c([H])c([H])c3c(c2[H])c(C(=O)OC([H])([H])C([H])([H])C([H])([H])C([H])([H])N4C([H])([H])C([H])([H])C4([H])[H])c([H])c(=O)n3[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])C(=O)c2c([H])c(Cl)c(F)c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])N(C([H])([H])c3c([H])c([H])c([H])c([H])c3Cl)C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(F)c([H])c1-c1c([H])c([H])c(F)c(F)c1[H]',\n",
-       "    '[H]c1c([H])c([H])c2c([H])c([H])c(N3C([H])([H])C([H])([H])OC([H])([H])C3([H])[H])c([H])c2c1[H]',\n",
-       "    '[H]c1nc(N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])Oc2c([H])c([H])c([H])c([H])c2C([H])([H])[H])nc([H])c1[H]',\n",
-       "    '[H]OC([H])([H])C1=C(c2c([H])c([H])c([H])c(N([H])c3nc([H])c(OC([H])([H])[H])c([H])c3[H])c2[H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c(F)c([H])c([H])c(C([H])([H])[H])c2F)c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c([H])c(C(F)(F)F)c2[H])c([H])c1[H]',\n",
-       "    '[H]ON([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "    '[H]c1nn(C([H])([H])C([H])([H])c2c([H])c([H])c(OC([H])([H])[H])c([H])c2[H])nc1N([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(OC([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]N([H])C(=O)c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c(S(=O)(=O)N3C([H])([H])C([H])([H])OC([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N([H])C(=O)c2c([H])c([H])c(C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(Cl)c(N([H])C(=O)c2c([H])c([H])c(OC([H])([H])[H])c(OC([H])([H])[H])c2[H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)N([H])c2c([H])c([H])c(N([H])C3=C(C(=O)OC([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])c3c([H])c([H])c4c([H])c([H])c([H])c([H])c4c3[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]O[C@]([H])(C([H])([H])[C@]([H])(C([H])([H])[H])C([H])([H])N([H])C(=O)C([H])([H])[C@]([H])(C(=O)N([H])c1c([H])c([H])c([H])c([H])c1[H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H])[C@]1([H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])S(=O)(=O)C([H])([H])c2c([H])c([H])c(Cl)c(Oc3c([H])c([H])c([H])c([H])c3[H])c2[H])c([H])c1[H]',\n",
-       "    '[H]C1=C(c2c([H])c([H])c(OC([H])([H])[H])c([H])c2[H])C(=O)N(C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C1=O',\n",
-       "    '[H]OC(=O)c1c([H])c([H])c([H])c([H])c1/C(=N/N([H])C([H])([H])C([H])([H])[H])N1C(=O)C([H])([H])[C@]1([H])c1c([H])c([H])c(C(F)(F)F)c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c2c(c1[H])N([H])C([H])([H])C([H])([H])C([H])([H])N([H])C2([H])[H]'],\n",
-       "   'expected': [2.1353246951799685,\n",
-       "    2.1123460888902255,\n",
-       "    3.650217937474436,\n",
-       "    1.7674429208827362,\n",
-       "    2.6417340087640078,\n",
-       "    1.6231275501684852,\n",
-       "    3.246640657751793,\n",
-       "    1.8040914351738353,\n",
-       "    2.1281730733563666,\n",
-       "    1.411433568423245,\n",
-       "    3.513532458758056,\n",
-       "    2.670504484956229,\n",
-       "    2.239241524840996,\n",
-       "    0.6881904518953377,\n",
-       "    1.2712306643490647,\n",
-       "    2.581698475809956,\n",
-       "    3.417274425406017,\n",
-       "    1.538943599221743,\n",
-       "    1.9845429163942245,\n",
-       "    3.877841145317224,\n",
-       "    3.34016836276274,\n",
-       "    1.3836963476782458,\n",
-       "    3.1082163326771157,\n",
-       "    1.9722765807169642,\n",
-       "    3.686639689591095,\n",
-       "    2.2748460983073144,\n",
-       "    2.538214365803805,\n",
-       "    1.3415924297383302,\n",
-       "    2.135967850985337,\n",
-       "    1.3774302448851743,\n",
-       "    2.774216067343345,\n",
-       "    3.055096878363862,\n",
-       "    2.1000247175151543,\n",
-       "    0.33822766619480693,\n",
-       "    1.6132366015672883,\n",
-       "    2.115310034863763,\n",
-       "    3.588133909979325,\n",
-       "    3.176883778631613,\n",
-       "    3.480547870596866,\n",
-       "    2.728282645296599,\n",
-       "    1.6149156846762678,\n",
-       "    5.374731436440936,\n",
-       "    2.345750367158073,\n",
-       "    0.13771814503603663,\n",
-       "    1.7630519287152748,\n",
-       "    2.612818188358495,\n",
-       "    2.9711651688902623,\n",
-       "    1.987971511611876,\n",
-       "    3.6898026509662807,\n",
-       "    2.8208410406764117,\n",
-       "    1.4546936857831523,\n",
-       "    0.5284051396074474,\n",
-       "    2.473930532872131,\n",
-       "    3.898516421975269,\n",
-       "    3.7943525226816313,\n",
-       "    1.6800774055988468,\n",
-       "    1.8344042191383803,\n",
-       "    2.86890826945903,\n",
-       "    2.1147925213362435,\n",
-       "    2.5208249144110955,\n",
-       "    3.0023349811631137,\n",
-       "    3.4295999414748453,\n",
-       "    3.2425429664656678,\n",
-       "    2.673845284963159,\n",
-       "    2.641035221596825,\n",
-       "    3.897699030055646,\n",
-       "    2.664687883048459,\n",
-       "    1.8855621612638922,\n",
-       "    2.54151726106847,\n",
-       "    1.7779461965686747,\n",
-       "    3.062443133846699,\n",
-       "    3.4034285103299267,\n",
-       "    2.807322519998883,\n",
-       "    2.7158730142692553,\n",
-       "    1.8264221794140145,\n",
-       "    1.5772670884036426,\n",
-       "    2.9170058277493225,\n",
-       "    1.9293810125760356,\n",
-       "    5.163738213662894,\n",
-       "    2.267077558924912,\n",
-       "    2.5482239290404856,\n",
-       "    0.7996282608124348,\n",
-       "    3.3105697253823165,\n",
-       "    2.0202506327958822,\n",
-       "    2.4420493835199673,\n",
-       "    3.482552484783243,\n",
-       "    2.4216546207474265,\n",
-       "    2.3092026766834697,\n",
-       "    1.3249495208668236,\n",
-       "    3.1804506853079806,\n",
-       "    2.22464832107317,\n",
-       "    2.895223625866164],\n",
-       "   'temperature': 0.75,\n",
-       "   'prevalence': 0.0,\n",
-       "   'fragment_fraction': 0.0,\n",
-       "   'formatted_test':                                                prompt  \\\n",
-       "   0   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   1   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   2   What is a molecule with bandgap 3.7 and C#CBr ...   \n",
-       "   3   What is a molecule with bandgap 1.8 and C#CBr ...   \n",
-       "   4   What is a molecule with bandgap 2.6 and C#CBr ...   \n",
-       "   ..                                                ...   \n",
-       "   87  What is a molecule with bandgap 2.3 and C#CBr ...   \n",
-       "   88  What is a molecule with bandgap 1.3 and C#CBr ...   \n",
-       "   89  What is a molecule with bandgap 3.2 and C#CBr ...   \n",
-       "   90  What is a molecule with bandgap 2.2 and C#CBr ...   \n",
-       "   91  What is a molecule with bandgap 2.9 and C#CBr ...   \n",
-       "   \n",
-       "                                              completion  \\\n",
-       "   0    [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C...   \n",
-       "   1    [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=...   \n",
-       "   2    [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])...   \n",
-       "   3    [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([...   \n",
-       "   4    [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[...   \n",
-       "   ..                                                ...   \n",
-       "   87   [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3...   \n",
-       "   88   [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(...   \n",
-       "   89   [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O...   \n",
-       "   90   [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nn...   \n",
-       "   91   [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H...   \n",
-       "   \n",
-       "                                                   label        representation  \n",
-       "   0   [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C(...  [2.1353246951799685]  \n",
-       "   1   [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=O...  [2.1123460888902255]  \n",
-       "   2   [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])[...   [3.650217937474436]  \n",
-       "   3   [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([H...  [1.7674429208827362]  \n",
-       "   4   [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[H...  [2.6417340087640078]  \n",
-       "   ..                                                ...                   ...  \n",
-       "   87  [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3c...  [2.3092026766834697]  \n",
-       "   88  [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...  [1.3249495208668236]  \n",
-       "   89  [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O)...  [3.1804506853079806]  \n",
-       "   90  [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nnc...    [2.22464832107317]  \n",
-       "   91  [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H]...   [2.895223625866164]  \n",
-       "   \n",
-       "   [92 rows x 4 columns],\n",
-       "   'group': 'C#CBr'},\n",
-       "  {'completions': {'choices': [' [H]c1c([H])c([H])c([C@@]2(c3c(N([H])C([H])([H])c4c([H])c([H])c([H])c([H])c4C(=O)N([H])c4c([H])c([H])c(C([H])([H])[H])c([H])c4Cl)c([H])c3Cl)C([H])([H])C([H])([H])[C@]2([H])N([H])[H])c(C(F)(F)F)c1[H]',\n",
-       "     ' [H]c1c([H])c(-c2noc(-c3c([H])c4c([H])c([H])c(-c5nnnn5[H])c4c(=O)c([H])c([H])c([H])c43)c2F)c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N([H])c2nc3c(C([H])([H])[H])nc([H])c([H])c3n(C4(C([H])([H])[H])C([H])([H])C([H])([H])OC4([H])[H])c2=n1',\n",
-       "     ' [H]c1c(S(=O)(=O)N2C([H])([H])C([H])([H])C([H])(N(C([H])(c3c([H])c([H])c([H])c([H])c3[H])C([H])([H])c3nnc(C([H])([H])c3nnn3C([H])([H])c3c([H])c(Cl)c([H])c3[H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])N(N([H])[H])C([H])([H])C3([H])[H])C([H])([H])C2([H])[H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])O[H]',\n",
-       "     ' [H]c1c(F)c([H])c2c([H])c(C(=O)OC([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])c([H])c([H])c12',\n",
-       "     ' [H]Oc1c2c(c([H])c([H])c([H])c2S(=O)(=O)N([H])[H])c3c(c2c(C([H])([H])[H])C([H])([H])[H])c([H])c([H])nc3c2c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])Oc2c(C([H])([H])[H])nn([H])c2C([H])([H])C([H])([H])S(=O)(=O)C([H])([H])[H])c(C2=O)c1[H]',\n",
-       "     ' [H]Oc1nc2c([H])c([H])c3c(c2c1O[H])[C@@](C([H])([H])[H])(C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C(=O)N(C([H])([H])[H])C([H])([H])[H]',\n",
-       "     ' [H]=C(/C1/C(=C(N/N([H])C(=O)N2C([H])([H])C([H])([H])[C@@]2(O-))SC([H])([H])c2nc([H])c([H])nc2[H])C([H])([H])[C@]2([H])c3c([H])c([H])c([H])c([H])c3N(C([H])([H])[H])C([H])([H])[H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1nc(Oc2c([H])c([H])c([H])c([H])c2C(C#N)C([H])([H])[H])(c2c([H])c([H])c([H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]C([H])=C1C(=O)N(C(=C3C([H])([H])C([H])([H])N([H])C([H])([H])C3([H])[H])C(-c3c([H])c([H])c([N+](=O)[O-])c(C(F)(F)F)c3[H])C([H])([H])[C@@]1([H])C(=O)N(C([H])([H])[H])C([H])([H])[H])C([H])([H])[C@]1([H])C([H])([H])[H]',\n",
-       "     ' ##C(=O)N1/C(=O)N2C([H])([H])[C@@]([H])(C([H])([H])[H])C([H])([H])[C@@]2([H])C([H])=C1[H]',\n",
-       "     ' [H]C(=O)N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])S(=O)(=O)C([H])([H])C([H])([H])Oc2c([H])c([H])c([H])c(N([H])C(=O)C3([H])C([H])([H])C([H])([H])C3([H])[H])c2[H])C([H])([H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C([H])([H])S(=O)(=O)C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]C1=NC([C@@]2([H])C([H])([H])[C@]([H])(N([H])S(=O)(=O)c3c([H])c(C(F)(F)F)c([H])c([H])c3[H])C2([H])[H])C(=O)C1([H])[H]',\n",
-       "     ' [H]/C(=C(/C(=S)Oc1c([H])c([H])c([H])c([H])c1[H])[C@@]([H])(C(=O)O[H])[C@]30C([H])([H])[C@]C([H])([H])[C@]3(C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])OC3([H])[H])c1noc1C([H])([H])[H]',\n",
-       "     ' [H]c1c(S(=O)(=O)C([H])([H])C([H])([H])c2c([H])c([H])c(OC([H])([H])C([H])([H])[H])c([H])c2[H])c([H])c2c([H])c([H])c([H])c([H])c21',\n",
-       "     '[H]C(=O)C([H])([H])[C@]([H])(N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])[C@]([H])(N([H])C(=O)C1([H])C([H])([H])C([H])([H])N(C([H])([H])[H])C1([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c(C(=O)N([H])C([H])([H])C([H])([H])Sc2nc3nn(-c4c([H])c([H])c(C(F)(F)F)c([H])c4[H])c(-c4c([H])c([H])c([H])c([H])c4OC([H])([H])[H])c([H])c3n2[H])c([H])c([H])c1OC([H])([H])C([H])(C([H])([H])N1C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])C([H])([H])C(=O)N([H])s1n2c3c([H])c(c4[H])c(C([H])(C(=O)N([H])C([H])([H])C(F)(F)F)C([H])([H])C(F)(F)F)c([H])c([H])c2[H])c([H])c([H])c3c1[H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]ON(C(=O)[C@]1([H])C([H])([H])N(C(=O)OC([H])([H])C([H])([H])[C@]([H])(c2c([H])c([H])c([H])c(Cl)c2[H])C([H])([H])C1([H])[H])C(=O)N1[H])c1c([H])c([H])c(Br)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)N([H])[C@@]2([H])c3c([H])c(F)c([H])c(F)c3C([H])([H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)OC([H])([H])[H])c([H])c1-c1noc(-c2c([H])c([H])c(C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c2[H])c1[H]',\n",
-       "     ' [H]OC([H])([H])[C@@]([H])(C(=O)[C@]([H])(N([H])C(=O)[C@@]([H])(N([H])C(=O)OC(C([H])([H])[H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(N([H])C(=O)C([H])([H])Oc3nc(C([H])([H])[H])c(C([H])([H])c4c([H])c([H])c(C(=O)N([H])[H])c([H])c4[H])ns3)c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]ON([H])C(=C(c1c(C([H])([H])[H])n2c(C([H])([H])[H])nc3c([H])c([H])c([H])c([H])c23)S(=O)(=O)c2c([H])c([H])c([H])c(F)c2[H])[C@]([H])(C([H])([H])[H])O[C@@]([H])(C([H])([H])[H])C(=O)N([H])[C@]([H])(C([H])([H])c1c([H])c([H])c([H])c(C([H])([H])N([H])[H])c1[H])C([H])([H])[H]',\n",
-       "     ' [H]c1nc2c(n([H])c3c([H])c4nc5c4_nc(N(C([H])([H])[H])[P@@](=O)(C([H])([H])[H])C([H])([H])[H])n4nn(-n4[H])c([H])c4c1[H])c([H])c2c([H])c1C([H])([H])[H]',\n",
-       "     ' [H]c1nnc(C([H])([H])[H])n1C([H])([H])c1nc2c(c(C#N)n(C([H])([H])C([H])([H])C([H])([H])[H])c3c3c3nc([H])n([H])c24)[C@]1([H])C([H])([H])O[H])c(Cl)n(C([H])([H])[H])c(Cl)n12',\n",
-       "     ' [H]/N=C2/N([H])C(=O)N([H])C([H])([H])/N=C(N([H])[H])N(c1c([H])c([H])c(C([H])([H])[H])c([H])c1[H])[C@]3([H])C([H])([H])[C@@]6(F)C([H])([H])C3([H])[H]',\n",
-       "     ' [H]c1sc2c(c([H])c1C([H])([H])[H])N(C([H])([H])[H])C([H])([H])[C@@]1([H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]NO2 [C@](c3c([H])nc([H])c([H])c3[H])(C([H])([H])C([H])([H])Oc3c([H])c([H])c([H])c([H])c3[H])[C@@]([H])(C([H])([H])[H])N([H])S(=O)(=O)c1nc([H])c(N([H])C(=O)N([H])c2c([H])c([H])c(F)c([H])c2[H])n1[H]',\n",
-       "     ' [H]OC([H])([H])[C@@]2([H])C([H])([H])[C@]([H])(C([H])([H])[C@]([H])(N([H])C(=O)C3([H])C([H])([H])C([H])([H])N4C([H])([H])C([H])([H])C4([H])[H])C(=O)N([H])[C@]([H])(C([H])([H])[H])C(C([H])([H])[H])(C([H])([H])[H])C(C([H])([H])[H])(C([H])([H])[H])C(=O)N([H])[H])[C@]([H])(O[H])[C@@]2([H])OC([H])([H])[H]',\n",
-       "     ' [H]c1c(-c2c(C(=S)N3C([H])([H])[C@@]([H])(c4c([H])c([H])c([H])c([H])c4[H])C([H])([H])N(C([H])([H])[H])C([H])([H])N3C([H])([H])[H])nn2C([H])([H])[H])c([H])c(C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2noc(-c3c(-c4c([H])c([H])c(OC([H])([H])C([H])([H])C([H])([H])C([H])([H])Oc5c([H])c([H])c([H])c([H])c5[H])c4[H])c3[H])n2)c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])Sc1c([H])c(N([H])C(=O)C(=O)N([H])c3c([H])c(N([H])[C@@]([H])(C([H])([H])[H])C([H])([H])C([H])(C([H])([H])[H])C([H])([H])[H])c([H])c([H])c33)[C@]2([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])C2(c3c([H])n([H])c4c([H])c([H])c([H])c([H])c3C([H])([H])[C@@](=O)F)C([H])([H])C2(C([H])([H])[H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]Oc1c([H])c([H])c2c3c([H])c([H])c(Cl)c([H])c3c([H])c(N([H])C([H])([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])N([H])C3([H])[H])c([H])c21',\n",
-       "     ' [H]c1c([H])c(-c2c([H])n(-c3c([H])c([H])c([H])c([H])c3[H])n2C(=O)/N=C2/SC([H])([H])C(=O)N([H])[C@@]([H])([H])N([H])C([H])([H])C2=O)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2nc3c(C(F)(F)F)c([H])nc3n([H])c(=O)n23)c([H])c1[H]',\n",
-       "     ' [H]/C(=C(\\\\[H])S/C([H])([H])c2nnc(N(C([H])([H])[H])C([H])([H])[H])c([H])c2[H])[C@@](c2c([H])c([H])c([H])c([H])c2[H])(C([H])([H])C([H])([H])OC([H])([H])C([H])([H])OC([H])([H])C([H])([H])[H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c(N([H])[H])n(-c3c([H])c([H])c(C(F)(F)F)c([H])c3[H])n2)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(Br)c(C(=O)N2C([H])([H])N([H])C([H])([H])C2([H])[H])c([H])c1Br',\n",
-       "     ' [H]c1nc(C(=O)C([H])([H])[H])nc([H])c1-n1c(C2([H])C([H])([H])C2([H])[H])c(=O)n([H])c1noc1=O',\n",
-       "     ' [H]C1=C2C([H])([H])C([H])([H])N(C(=O)N([H])c3c(oc([H])c3[H])c(C#SC-C(=O)[C@@]([H])(N(C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])[H])c3[H])c1nc2c(n([H])c([H])c([H])o2)c(n2C1([H])[H])c1c1c([H])c([H])c([H])c([H])c1c1[H]',\n",
-       "     ' [H]C1=C(\\\\N([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])[C@@]([H])(C([H])([H])[C@]([H])(Oc2c([H])c([H])c(N([H])[H])c([H])c2[H])C([H])([H])[H])C1=O',\n",
-       "     ' [H]/N=N/c1c([H])c([H])c2nc(SC([H])([H])C([H])([H])OC([H])([H])[H])c([H])n2[H]',\n",
-       "     ' [H]c1nc2c([H])c([H])c([H])n2c1C#Cc1c([H])c([H])c(C#N)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])c2nc(N3C([H])([H])C([H])([H])C([H])(N(c4c([H])c(C(=O)C([H])([H])[H])c([H])c4[H])C([H])([H])C3([H])[H])C([H])([H])C3([H])[H])sc2C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]Oc1c([H])c([H])c([H])c([H])c1-c1c([H])c([H])c(/N=N/c2c([H])c([H])c([C@@]3([H])[C@@]([H])(C([H])([H])[H])C([H])([H])C3([H])[H])c([H])c2[H])c1[H]',\n",
-       "     ' [H]c1nc(S(=O)(=O)N([H])C(=O)C([H])([H])C([H])([H])S[H])c([H])c([H])c1C([H])([H])C([H])([H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]/C(=C(\\\\[H])C(=O)N(C([H])([H])[H])C([H])([H])[C@]([H])(C([H])([H])n2c([H])nc([H])c2[H])C([H])([H])C([H])([H])C([H])([H])[H])c1c([H])c(OC([H])([H])[H])c(OC([H])([H])[H])c([H])c1OC([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c2c(n1[H])C(=O)c1c([H])c([H])c([H])c([H])c1N2C(=O)=(OC([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])[C@]1(C([H])([H])Oc1c([H])c([H])c(Cl)c(-c3c([H])c(C(=O)N([H])C([H])([H])C(F)(F)F)c([H])c3[H])c1[H])[C@@]2(C([H])([H])[H])[C@@]1(C([H])([H])O[H])C([H])([H])[C@]2(C(=O)O[H])C([H])([H])[H]',\n",
-       "     ' [H]C#CC(N([H])C([H])([H])c1c([H])c([H])c2c([H])c([H])c([H])c([H])c2c1[H])C([H])([H])C([H])([H])N([H])[C@]1(OC([H])([H])C([H])([H])OC([H])([H])C1([H])[H])C([H])([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c(S(=O)(=O)N([H])[C@]2([H])c3c([H])c([H])c(OC([H])([H])C([H])([H])N([H])c4nc(N([H])[H])nc([H])c4C([H])([H])[H])c([H])c3[C@@]22[H])c([H])c([H])c1OC(F)(F)F',\n",
-       "     ' [H]/N=C(/N([H])[H])N([N+]=[N](=O)[O-])C([H])([H])[C@@]1([H])C(=O)OC([H])([H])[C@]([H])(C([H])([H])[H])[C@@]1([H])Oc1c([H])c([H])c(OC([H])([H])[H])c(OC([H])([H])[H])c1[H]',\n",
-       "     ' [H]N([H])C(=O)[C@]([H])(C(=O)N1C(=O)N2C(=O)N(c3c([H])c([H])c(Cl)c([H])c3[H])C(=O)N2[H])C([H])([H])C([H])([H])[H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(N([H])S(=O)(=O)c2c([H])c([H])c(C(=O)OC([H])([H])[H])c([H])c2[H])c([H])c1OC([H])([H])[H]',\n",
-       "     ' [H]Oc1c([H])c([H])c2c(c1[H])N([H])[C@@]1([H])C([H])([H])[C@@]([H])(C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])[C@@]([H])(C([H])([H])C3([H])C([H])([H])C3([H])[H])[C@@]2([H])C1=NC([H])([H])C([H])([H])C2=O',\n",
-       "     ' [H]c1c([H])c([H])c(S(=O)(=O)C([H])([H])C([H])([H])[C@@]([H])(O[H])N([H])C(=O)[C@]([H])(O[H])C([H])([H])C([H])([H])N([H])[H])c([H])c1[H]',\n",
-       "     ' [H]Oc1c([H])c([H])c([C@@]([H])(C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[P@@]27C([H])([H])C([H])(C([H])([H])[H])[C@@]3([H])C([H])([H])[C@@]4([H])C([H])([H])[C@]([H])(O[H])[C@@]5([H])C([H])([H])C([H])([H])[C@@]([H])(C([H])([H])[H])[C@]3([H])[C@@]6([H])Oc7c([H])c(-c2c([H])c([H])c([H])c(=O)[C@@]([H])(C([H])([H])n12)C([H])([H])C6([H])[H])c([H])c12)C([H])([H])[C@@]2([H])C([H])([H])C1([H])[H])C([H])([H])C([H])([H])C([H])([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c1nn(C([H])([H])C1([H])C([H])([H])C([H])([H])N(C(=O)C5(C([H])([H])C([H])([H])N(c6c([H])c([H])c(C#N)c([H])c6[N+](=O)[O-])C([H])([H])C5([H])[H])C([H])([H])C1([H])[H])nc2n1[H]',\n",
-       "     ' [H]c1c([H])c2nnn(-c3c([H])c([H])c([H])c([H])c3C(=O)N([H])[C@@]3([H])[C@]12C3=C([H])[C@]([H])(C3=O)C1=O',\n",
-       "     ' [H]/C(=C1\\\\[C@@]2(C(=O)C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C3([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-n2c(C([H])([H])N(C(=O)C([H])([H])[H])[C@]3(C([H])([H])[H])C([H])([H])C([H])([H])N(C(=O)C4([H])C([H])([H])C4([H])[H])C([H])([H])C3([H])[H])c([H])c([H])c2OC([H])([H])O2)c1[H]',\n",
-       "     ' [H]c1c([H])nn(/N=N/c1\\\\[H])c([H])c1C([H])([H])[H]',\n",
-       "     ' [H]/C(=C(\\\\[H])C([H])([H])N(C([H])([H])c1cc([H])c([H])c([H])c1[H])C([H])([H])C([H])([H])S(=O)(=O)c1c([H])c([H])c([H])c([H])c1[H])c1c([H])n(C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([N+](=O)[O-])c([H])c1Br',\n",
-       "     ' [H]c1c([H])c(N([H])C(=O)N2C(N([H])[H])(C([H])([H])C([H])([H])N3C([H])([H])C4=C(\\\\[H])C([H])([H])C([H])([H])C3([H])[H])Sc2c([H])c([H])c([H])c([H])c2S1',\n",
-       "     ' [H]c1c([H])c([H])c(S(=O)(=O)N([H])C([H])([H])C([H])([H])Sc2nc([H])c([H])c(N([H])C(=O)N([H])C3([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])s2)c([H])c1[H]',\n",
-       "     ' C#Nc1c([H])c([H])c2c(c1[H])SC3C([H])([H])[C@]([H])(c1c([H])c([H])c(C(=O)N([H])C([H])([H])C([H])([H])SC([H])([H])C([H])([H])N([H])[H])c([H])c1[H])C([H])([H])[H]',\n",
-       "     ' [H]c1oc(C([H])([H])[H])c([H])c1[C@]([H])(C([H])([H])C([H])([H])Oc1ynnoc1=O)C1([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1nc([H])c([H])c(N([H])C(=O)OC([H])([H])[C@@]2([H])C([H])([H])[C@]3([H])N(c4nc([H])n(C([H])([H])C([H])([H])C([H])([H])c5c([H])c([H])c6c(c5[H])C([H])([H])C([H])([H])C6([H])[H])nc4[H])C2([H])[H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2nc3c(N4C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])N5C([H])([H])C([H])([H])C([H])([H])[C@]5([H])Oc5nc(C(=O)N([H])[H])nn5C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C4([H])[H])c(N(C([H])([H])[H])C([H])([H])[H])nc2c(N([H])[H])n3C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c([N+](=O)[O-])c([H])c1OC([H])([H])[C@]1([H])C([H])([H])c1c([H])c([H])c(C(=O)N2C([H])([H])C([H])([H])N(C([H])([H])C([H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])C2([H])[H])c([H])c1[H]',\n",
-       "     ' [H]Os[C@]1([H])[C@@]2(C([H])([H])[H])[C@]3([H])[C@]([H])([C@]4([H])C([H])([H])C([H])([H])[C@]([H])(N([H])C(=O)[C@]([H])(N([H])C(=O)[C@]([H])(N([H])C(=O)C([H])([H])[H])C([H])([H])[H])[C@@]4(F)(F))[C@]1([H])C([H])([H])C([H])([H])[C@@]([H])([C@@]1(F)C([H])([H])[C@]([H])(N([H])C(=O)[C@@]([H])(N([H])C(=O)C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])[C@]13[H]',\n",
-       "     ' [H]c1nn(N([H])C([H])([H])c2c([H])c([H])c3c([H])c([H])c([H])c([H])c3c2OC([H])([H])O3)c1[H]',\n",
-       "     ' [H]c1c([H])c(C(=O)N2C([H])([H])C([H])([H])C([H])([H])n2c([H])c(N([H])C(=O)c3sc4c([H])c([H])c([H])c([H])c4c3[H])c([H])c2C([H])([H])C([H])([H])C([H])([H])C2([H])[H])c(Cl)c([H])c1Cl',\n",
-       "     ' [H]Oc1c([H])c([H])c2c([H])c(C([H])([H])c3c([H])c([H])c([H])c([H])c3[H])c([H])n2[H]',\n",
-       "     ' [H]N([H])[C@@]([H])([C@@]([H])(C(=O)N([H])C([H])(C([H])([H]) [H])C([H])([H])C([H])(C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])C([H])([H])C([H])([H])N(C(=O)C([H])([H])[H])C([H])([H])C2([H])[H])c([H])c1[H])[C@]1([H])N([H])C(=O)C2([H])C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]/[C@@]([H])(Scnc1c([H])c(F)c([H])c(S(=O)(=O)N([H])[H])c1[H])C(=C(\\\\[H])c1c([H])c(F)c(F)c([H])c1[H])C([H])([H])[H]',\n",
-       "     ' [H]c1nc([H])c([H])c([H])c1N1C(=O)[C@]([H])(N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])C(=O)[C@]([H])(N(C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])c3c([H])c([H])c([H])c([H])c3C2([H])[H])C1([H])[H])(C([H])([H])C1([H])[H])C2([H])[H])(C([H])([H])[H])(C([H])([H])[H])(C([H])([H])[H])(C([H])([H])[H])(C2(OC([H])([H])[H])[H])C([H])([H])[H])(C1([H])[H])C([H])([H])[H])(C([H])([H])[H])(C6(C([H])([H])[H])C([H])([H])[C@@]([H])(Oc7nc(C(=O)C([H])([H])[H])n(C([H])([H])[H])c7[H])C6([H])[H])(O[H])C1([H])[H])(C(=O)O[H])C([H])([H])C([H])([H])[C@]2([H])N([H])C(=O)c3c([H])c([H])c([H])c([H])c3[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c([H])c([H])c(C#N)c([H])c2N([H])C(=O)c2c([H])c([H])c(C([H])([H])N(C([H])([H])[H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "     ' [H]Oc1nc([H])c([H])c(-c2c(-c3nc(N([H])C(=O)c4c([H])c([H])c([H])c(C([H])([H])[H])c4[H])c(Cl)nn3[H])c([H])c(C([H])([H])[H])c2=O)c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(N([H])C(=O)C([H])([H])N([H])[H])c(N([H])c2nc3c([H])c([H])c([H])c(N([H])c2c([H])c(C([H])([H])[H])c([H])c(C([H])([H])C([H])(c4c([H])c([H])c([H])c(C([H])([H])C([H])([H])N([H])[H])c4[H])C([H])([H])[H])c2[H])c3c([H])c([H])c([H])c23)c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c3c(c(OC([H])(C([H])([H])[H])C([H])([H])[H])c1[H])C(=O)C([H])([H])[C@]2([H])C([H])([H])[C@]([H])(O[H])[C@]1([H])O[H]',\n",
-       "     ' [H]c1sc(SC(=O)C([H])([H])N([H])[H])c([H])c1[N+](=O)[O-]',\n",
-       "     ' [H]ON([H])C(=O)c1c([H])c([H])c([H])c(OC([H])([H])c2c([H])c([H])c([H])c([H])c2[H])c1[H]',\n",
-       "     ' [H]N([H])C(=O)c1c([H])nc(-c2c([H])c([H])c3c(c2[H])[C@]([H])(C(=O)OC([H])([H])[H])C([H])([H])C([H])([H])C3([H])[H])c([H])s1',\n",
-       "     ' [H]c1c([H])c(C([H])([H])[C@]([H])(C#CC([H])([H])[H])C([H])([H])[C@]([H])(Oc2c([H])c([H])c([H])c([H])c2[H])[C@@]([H])(C([H])([H])[C@]([H])(O[H])[C@@]2([H])C([H])([H])[C@@]([H])(C([H])([H])[H])C([H])([H])[C@@]([H])(C([H])([H])[H])C2([H])[H])C3([H])[H])c([H])c([H])c1[H]',\n",
-       "     ' [H]c1nc2c(C([H])([H])[H])c([H])c(-c3c(-c4c([H])c([H])c(C(F)(F)F)c([H])c4[H])c([H])c([H])c3C([H])([H])[H])c([H])c2n1',\n",
-       "     ' [H]c1nc(N([H])c2nc([H])c([H])c(C(=O)OC([H])([H])[H])c2[H])c([H])c([H])c1OC([H])([H])C([H])([H])N1C([H])([H])C([H])([H])N(C(=O)N([H])c2c([H])nc([H])c([H])c2[H])C([H])([H])C1([H])[H]'],\n",
-       "    'logprobs': [None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None],\n",
-       "    'model': 'ada:ft-personal-2023-02-05-21-51-00'},\n",
-       "   'generated_smiles': (#92) ['[H]c1c([H])c([H])c([C','[H]c1c([H])c(-c2noc(-c3c([H])c4c([H])c([H])c(-c5nnnn5[H])c4c(=O)c([H])c([H])c([H])c43)c2F)c([H])c([H])c1[H]','[H]c1c([H])c([H])c(C([H])([H])N([H])c2nc3c(C([H])([H])[H])nc([H])c([H])c3n(C4(C([H])([H])[H])C([H])([H])C([H])([H])OC4([H])[H])c2=n1','[H]c1c(S(=O)(=O)N2C([H])([H])C([H])([H])C([H])(N(C([H])(c3c([H])c([H])c([H])c([H])c3[H])C([H])([H])c3nnc(C([H])([H])c3nnn3C([H])([H])c3c([H])c(Cl)c([H])c3[H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])N(N([H])[H])C([H])([H])C3([H])[H])C([H])([H])C2([H])[H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])O[H]','[H]c1c(F)c([H])c2c([H])c(C(=O)OC([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])[H])c([H])c([H])c12','[H]Oc1c2c(c([H])c([H])c([H])c2S(=O)(=O)N([H])[H])c3c(c2c(C([H])([H])[H])C([H])([H])[H])c([H])c([H])nc3c2c1[H]','[H]c1c([H])c([H])c(C([H])([H])Oc2c(C([H])([H])[H])nn([H])c2C([H])([H])C([H])([H])S(=O)(=O)C([H])([H])[H])c(C2=O)c1[H]','[H]Oc1nc2c([H])c([H])c3c(c2c1O[H])[C','[H]=C(/C1/C(=C(N/N([H])C(=O)N2C([H])([H])C([H])([H])[C','[H]c1nc(Oc2c([H])c([H])c([H])c([H])c2C(C#N)C([H])([H])[H])(c2c([H])c([H])c([H])c([H])c2[H])c([H])c1[H]'...],\n",
-       "   'train_smiles': 0     [H]c1c([H])c([H])c(C([H])(c2c([H])c([H])c([H])...\n",
-       "   1     [H]c1c(OC([H])([H])C([H])([H])C([H])([H])N2C([...\n",
-       "   2     [H]c1c([H])c([H])c2c(c1OC([H])(C([H])([H])[H])...\n",
-       "   3     [H]OC([H])([H])[C@@]1([H])O[C@@]([H])(c2c([H])...\n",
-       "   4     [H]c1c([H])c([H])c(-c2c([H])c([H])c(C([H])([H]...\n",
-       "                               ...                        \n",
-       "   87    [H]Oc1nc(N([H])/N=C(\\[H])c2nc([H])c([H])c([H])...\n",
-       "   88    [H]c1c([H])c([H])c(C([H])([H])C(=O)N(C([H])([H...\n",
-       "   89    [H]c1nc(N([H])c2c([H])c([H])c(OC([H])([H])c3c(...\n",
-       "   90    [H]c1c(C(F)(F)F)nc(C([H])([H])C([H])([H])c2c([...\n",
-       "   91    [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...\n",
-       "   Name: label, Length: 92, dtype: object,\n",
-       "   'frac_valid': 0.1956521739130435,\n",
-       "   'frac_unique': 1.0,\n",
-       "   'frac_smiles_in_train': 0.0,\n",
-       "   'frac_smiles_in_pubchem': 0.2777777777777778,\n",
-       "   'in_pubchem': [2, 8, 10, 12, 16],\n",
-       "   'kld': 0.3325973235763401,\n",
-       "   'frechet_d': 55.94499355431651,\n",
-       "   'frechet_score': 1.3825460375914973e-05,\n",
-       "   'valid_smiles': ['[H]c1nc(Oc2c([H])c([H])c([H])c([H])c2C(C#N)C([H])([H])[H])(c2c([H])c([H])c([H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]C(=O)N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])S(=O)(=O)C([H])([H])C([H])([H])Oc2c([H])c([H])c([H])c(N([H])C(=O)C3([H])C([H])([H])C([H])([H])C3([H])[H])c2[H])C([H])([H])C([H])([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C([H])([H])S(=O)(=O)C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]C(=O)C([H])([H])[C@]([H])(N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])[C@]([H])(N([H])C(=O)C1([H])C([H])([H])C([H])([H])N(C([H])([H])[H])C1([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)OC([H])([H])[H])c([H])c1-c1noc(-c2c([H])c([H])c(C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c2[H])c1[H]',\n",
-       "    '[H]Oc1c([H])c([H])c2c3c([H])c([H])c(Cl)c([H])c3c([H])c(N([H])C([H])([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])N([H])C3([H])[H])c([H])c21',\n",
-       "    '[H]c1c([H])c(Br)c(C(=O)N2C([H])([H])N([H])C([H])([H])C2([H])[H])c([H])c1Br',\n",
-       "    '[H]c1nc(S(=O)(=O)N([H])C(=O)C([H])([H])C([H])([H])S[H])c([H])c([H])c1C([H])([H])C([H])([H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]/C(=C(\\\\[H])C(=O)N(C([H])([H])[H])C([H])([H])[C@]([H])(C([H])([H])n2c([H])nc([H])c2[H])C([H])([H])C([H])([H])C([H])([H])[H])c1c([H])c(OC([H])([H])[H])c(OC([H])([H])[H])c([H])c1OC([H])([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])S(=O)(=O)c2c([H])c([H])c(C(=O)OC([H])([H])[H])c([H])c2[H])c([H])c1OC([H])([H])[H]',\n",
-       "    '[H]/C(=C(\\\\[H])C([H])([H])N(C([H])([H])c1cc([H])c([H])c([H])c1[H])C([H])([H])C([H])([H])S(=O)(=O)c1c([H])c([H])c([H])c([H])c1[H])c1c([H])n(C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c([N+](=O)[O-])c([H])c1Br',\n",
-       "    '[H]c1c([H])c([H])c(-c2nc3c(N4C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])N5C([H])([H])C([H])([H])C([H])([H])[C@]5([H])Oc5nc(C(=O)N([H])[H])nn5C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C4([H])[H])c(N(C([H])([H])[H])C([H])([H])[H])nc2c(N([H])[H])n3C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c(C#N)c([H])c2N([H])C(=O)c2c([H])c([H])c(C([H])([H])N(C([H])([H])[H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1sc(SC(=O)C([H])([H])N([H])[H])c([H])c1[N+](=O)[O-]',\n",
-       "    '[H]ON([H])C(=O)c1c([H])c([H])c([H])c(OC([H])([H])c2c([H])c([H])c([H])c([H])c2[H])c1[H]',\n",
-       "    '[H]c1nc(N([H])c2nc([H])c([H])c(C(=O)OC([H])([H])[H])c2[H])c([H])c([H])c1OC([H])([H])C([H])([H])N1C([H])([H])C([H])([H])N(C(=O)N([H])c2c([H])nc([H])c([H])c2[H])C([H])([H])C1([H])[H]'],\n",
-       "   'valid_indices': [9,\n",
-       "    12,\n",
-       "    13,\n",
-       "    17,\n",
-       "    21,\n",
-       "    35,\n",
-       "    40,\n",
-       "    48,\n",
-       "    49,\n",
-       "    50,\n",
-       "    57,\n",
-       "    66,\n",
-       "    67,\n",
-       "    73,\n",
-       "    82,\n",
-       "    86,\n",
-       "    87,\n",
-       "    91],\n",
-       "   'novel_indices': [9,\n",
-       "    12,\n",
-       "    13,\n",
-       "    17,\n",
-       "    21,\n",
-       "    35,\n",
-       "    40,\n",
-       "    48,\n",
-       "    49,\n",
-       "    50,\n",
-       "    57,\n",
-       "    66,\n",
-       "    67,\n",
-       "    73,\n",
-       "    82,\n",
-       "    86,\n",
-       "    87,\n",
-       "    91],\n",
-       "   'novel_smiles': ['[H]c1nc(Oc2c([H])c([H])c([H])c([H])c2C(C#N)C([H])([H])[H])(c2c([H])c([H])c([H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]C(=O)N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])N([H])S(=O)(=O)C([H])([H])C([H])([H])Oc2c([H])c([H])c([H])c(N([H])C(=O)C3([H])C([H])([H])C([H])([H])C3([H])[H])c2[H])C([H])([H])C([H])([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])N2C([H])([H])C([H])([H])S(=O)(=O)C2([H])[H])c([H])c1[H]',\n",
-       "    '[H]C(=O)C([H])([H])[C@]([H])(N(C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])[C@]([H])(N([H])C(=O)C1([H])C([H])([H])C([H])([H])N(C([H])([H])[H])C1([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(C(=O)OC([H])([H])[H])c([H])c1-c1noc(-c2c([H])c([H])c(C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c([H])c2[H])c1[H]',\n",
-       "    '[H]Oc1c([H])c([H])c2c3c([H])c([H])c(Cl)c([H])c3c([H])c(N([H])C([H])([H])C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])N([H])C3([H])[H])c([H])c21',\n",
-       "    '[H]c1c([H])c(Br)c(C(=O)N2C([H])([H])N([H])C([H])([H])C2([H])[H])c([H])c1Br',\n",
-       "    '[H]c1nc(S(=O)(=O)N([H])C(=O)C([H])([H])C([H])([H])S[H])c([H])c([H])c1C([H])([H])C([H])([H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(C([H])([H])C([H])([H])N([H])C(=O)N([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]/C(=C(\\\\[H])C(=O)N(C([H])([H])[H])C([H])([H])[C@]([H])(C([H])([H])n2c([H])nc([H])c2[H])C([H])([H])C([H])([H])C([H])([H])[H])c1c([H])c(OC([H])([H])[H])c(OC([H])([H])[H])c([H])c1OC([H])([H])[H]',\n",
-       "    '[H]c1c([H])c([H])c(N([H])S(=O)(=O)c2c([H])c([H])c(C(=O)OC([H])([H])[H])c([H])c2[H])c([H])c1OC([H])([H])[H]',\n",
-       "    '[H]/C(=C(\\\\[H])C([H])([H])N(C([H])([H])c1cc([H])c([H])c([H])c1[H])C([H])([H])C([H])([H])S(=O)(=O)c1c([H])c([H])c([H])c([H])c1[H])c1c([H])n(C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c([N+](=O)[O-])c([H])c1Br',\n",
-       "    '[H]c1c([H])c([H])c(-c2nc3c(N4C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])C([H])([H])N5C([H])([H])C([H])([H])C([H])([H])[C@]5([H])Oc5nc(C(=O)N([H])[H])nn5C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C4([H])[H])c(N(C([H])([H])[H])C([H])([H])[H])nc2c(N([H])[H])n3C([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c([H])c(-c2c([H])c([H])c(C#N)c([H])c2N([H])C(=O)c2c([H])c([H])c(C([H])([H])N(C([H])([H])[H])C([H])([H])[H])c([H])c2[H])c([H])c1[H]',\n",
-       "    '[H]c1sc(SC(=O)C([H])([H])N([H])[H])c([H])c1[N+](=O)[O-]',\n",
-       "    '[H]ON([H])C(=O)c1c([H])c([H])c([H])c(OC([H])([H])c2c([H])c([H])c([H])c([H])c2[H])c1[H]',\n",
-       "    '[H]c1nc(N([H])c2nc([H])c([H])c(C(=O)OC([H])([H])[H])c2[H])c([H])c([H])c1OC([H])([H])C([H])([H])N1C([H])([H])C([H])([H])N(C(=O)N([H])c2c([H])nc([H])c([H])c2[H])C([H])([H])C1([H])[H]'],\n",
-       "   'expected': [2.1353246951799685,\n",
-       "    2.1123460888902255,\n",
-       "    3.650217937474436,\n",
-       "    1.7674429208827362,\n",
-       "    2.6417340087640078,\n",
-       "    1.6231275501684852,\n",
-       "    3.246640657751793,\n",
-       "    1.8040914351738353,\n",
-       "    2.1281730733563666,\n",
-       "    1.411433568423245,\n",
-       "    3.513532458758056,\n",
-       "    2.670504484956229,\n",
-       "    2.239241524840996,\n",
-       "    0.6881904518953377,\n",
-       "    1.2712306643490647,\n",
-       "    2.581698475809956,\n",
-       "    3.417274425406017,\n",
-       "    1.538943599221743,\n",
-       "    1.9845429163942245,\n",
-       "    3.877841145317224,\n",
-       "    3.34016836276274,\n",
-       "    1.3836963476782458,\n",
-       "    3.1082163326771157,\n",
-       "    1.9722765807169642,\n",
-       "    3.686639689591095,\n",
-       "    2.2748460983073144,\n",
-       "    2.538214365803805,\n",
-       "    1.3415924297383302,\n",
-       "    2.135967850985337,\n",
-       "    1.3774302448851743,\n",
-       "    2.774216067343345,\n",
-       "    3.055096878363862,\n",
-       "    2.1000247175151543,\n",
-       "    0.33822766619480693,\n",
-       "    1.6132366015672883,\n",
-       "    2.115310034863763,\n",
-       "    3.588133909979325,\n",
-       "    3.176883778631613,\n",
-       "    3.480547870596866,\n",
-       "    2.728282645296599,\n",
-       "    1.6149156846762678,\n",
-       "    5.374731436440936,\n",
-       "    2.345750367158073,\n",
-       "    0.13771814503603663,\n",
-       "    1.7630519287152748,\n",
-       "    2.612818188358495,\n",
-       "    2.9711651688902623,\n",
-       "    1.987971511611876,\n",
-       "    3.6898026509662807,\n",
-       "    2.8208410406764117,\n",
-       "    1.4546936857831523,\n",
-       "    0.5284051396074474,\n",
-       "    2.473930532872131,\n",
-       "    3.898516421975269,\n",
-       "    3.7943525226816313,\n",
-       "    1.6800774055988468,\n",
-       "    1.8344042191383803,\n",
-       "    2.86890826945903,\n",
-       "    2.1147925213362435,\n",
-       "    2.5208249144110955,\n",
-       "    3.0023349811631137,\n",
-       "    3.4295999414748453,\n",
-       "    3.2425429664656678,\n",
-       "    2.673845284963159,\n",
-       "    2.641035221596825,\n",
-       "    3.897699030055646,\n",
-       "    2.664687883048459,\n",
-       "    1.8855621612638922,\n",
-       "    2.54151726106847,\n",
-       "    1.7779461965686747,\n",
-       "    3.062443133846699,\n",
-       "    3.4034285103299267,\n",
-       "    2.807322519998883,\n",
-       "    2.7158730142692553,\n",
-       "    1.8264221794140145,\n",
-       "    1.5772670884036426,\n",
-       "    2.9170058277493225,\n",
-       "    1.9293810125760356,\n",
-       "    5.163738213662894,\n",
-       "    2.267077558924912,\n",
-       "    2.5482239290404856,\n",
-       "    0.7996282608124348,\n",
-       "    3.3105697253823165,\n",
-       "    2.0202506327958822,\n",
-       "    2.4420493835199673,\n",
-       "    3.482552484783243,\n",
-       "    2.4216546207474265,\n",
-       "    2.3092026766834697,\n",
-       "    1.3249495208668236,\n",
-       "    3.1804506853079806,\n",
-       "    2.22464832107317,\n",
-       "    2.895223625866164],\n",
-       "   'temperature': 1.0,\n",
-       "   'prevalence': 0.0,\n",
-       "   'fragment_fraction': 0.0,\n",
-       "   'formatted_test':                                                prompt  \\\n",
-       "   0   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   1   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   2   What is a molecule with bandgap 3.7 and C#CBr ...   \n",
-       "   3   What is a molecule with bandgap 1.8 and C#CBr ...   \n",
-       "   4   What is a molecule with bandgap 2.6 and C#CBr ...   \n",
-       "   ..                                                ...   \n",
-       "   87  What is a molecule with bandgap 2.3 and C#CBr ...   \n",
-       "   88  What is a molecule with bandgap 1.3 and C#CBr ...   \n",
-       "   89  What is a molecule with bandgap 3.2 and C#CBr ...   \n",
-       "   90  What is a molecule with bandgap 2.2 and C#CBr ...   \n",
-       "   91  What is a molecule with bandgap 2.9 and C#CBr ...   \n",
-       "   \n",
-       "                                              completion  \\\n",
-       "   0    [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C...   \n",
-       "   1    [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=...   \n",
-       "   2    [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])...   \n",
-       "   3    [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([...   \n",
-       "   4    [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[...   \n",
-       "   ..                                                ...   \n",
-       "   87   [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3...   \n",
-       "   88   [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(...   \n",
-       "   89   [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O...   \n",
-       "   90   [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nn...   \n",
-       "   91   [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H...   \n",
-       "   \n",
-       "                                                   label        representation  \n",
-       "   0   [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C(...  [2.1353246951799685]  \n",
-       "   1   [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=O...  [2.1123460888902255]  \n",
-       "   2   [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])[...   [3.650217937474436]  \n",
-       "   3   [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([H...  [1.7674429208827362]  \n",
-       "   4   [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[H...  [2.6417340087640078]  \n",
-       "   ..                                                ...                   ...  \n",
-       "   87  [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3c...  [2.3092026766834697]  \n",
-       "   88  [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...  [1.3249495208668236]  \n",
-       "   89  [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O)...  [3.1804506853079806]  \n",
-       "   90  [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nnc...    [2.22464832107317]  \n",
-       "   91  [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H]...   [2.895223625866164]  \n",
-       "   \n",
-       "   [92 rows x 4 columns],\n",
-       "   'group': 'C#CBr'},\n",
-       "  {'completions': {'choices': [' [H]c1oc(-c2c([H])c([H])c(S(=O)(=O)N([H])[H])c3c([H])c(-n4c(-c5nc([H])c([H])n4C([H])([H])[H])ono4[C@@](N([H])[H])(C([H])([H])[H])C([H])([H])[H])nn3-c2c(C([H])([H])[H])c([H])c([H])c([H])c2C([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]/N=C2/C(c3c([H])c([H])c(OC([H])([H])N(C#N)[N-c5c([H])c([H])c6c(c7c(n0)[C@@]9 Br)c([H])nc5O[C@]1([H])F)c3C([H])([H])P(C([H])([H])[H])F)[C@@]2([H])FS2',\n",
-       "     ' [H]/C(C(=C(/OC([H])([H])C(=O)[C@]([H])(Oc1c([H])c([H])c([H])c([H])c1[H])C([H])([H])[H])C([H])([H])[C@]([H])(OC([H])([H])[H])C([H])([H])[H])C1=C## reconnect@( Nationwide@N @[H])C([H])([H])[H])c1c(C([H])([H])[H])nc([H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C(=O)c1c([H])nc([H])c([H])c1c([H])c([H])c12',\n",
-       "     ' [H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]',\n",
-       "     ' [H]/C(:(C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])c1c([H])c([H])c(I)c([H])c1[C@]1([H])c2sc(C(=O)N([H])[H])nc2c1[H]',\n",
-       "     ' [H]c1c(Cl)c([H])c(Cl)c([H])c1C#Cc1nc2c([H])c([H])c(S(=O)(=O)N([H])c3oc4c([H])nc(C([H])([H])[H])c([H])c4c3-c3c([H])n([H])cmr21',\n",
-       "     ' [H]OC([H])([H])C1=N/C2=C(C#N)C([H])([H])[C@]([H])(O[H])[C@]2([H])[C@@](O[H])([P@@](=O)(O[H])o1)C1([H])[H]',\n",
-       "     ')[pvtty](c1c([H])c([H])c(C(=O)N2c3c([H])c([H])c([H])c([H])c3n2[C@@]([H])(C([H])([H])c6noc(C#CC([H])([H])C([H])([H])C([H])([H])[H])c6C#3[H])C2[H])c([H])c1[H]',\n",
-       "     ' [H]N(c1nn(-c2c([H])c([H])c([H])c([H])c2Cl)c(-n2c(-c3c([H])nc(N4C([H])([H])C([H])([H])OC([H])([H])C4([H])[H])no3)c([H])c2[H])c1O[H])[C@@]([H])(C([H])([H])[H])N\\\\C(=O)OC(SC1([H])[H])([H])[C@]([H])(C(F)(F)F)OC1([H])[H]',\n",
-       "     ' [H]Oc1c([H])c(C(=O)N([H])c2c([H])c([H])c(F)c(S(=O)(=O)C([H])([H])[H])c2[H])c([H])c2nc(N([H])[H])nc([H])c12',\n",
-       "     ' [H]c1nnnn-3c1nn1N([H])C([H])([H])c1c([H])c([H])c(Cl)c(Br)c1Cl',\n",
-       "     ' [H]c1c([H])c([H])c(-c2nn(-c3c(-c4c(N([H])[H])nc([H])n4N([H])[H])nc3[C@@]([H])(C([H])([H])NO)C([H])([H])[H])n2[H])c(F)c1[H]',\n",
-       "     ' C(=C(\\\\ Noel())C(=O)N(C([[H])([H])c3nc(-c4nn(-c5c([H])c([H])c([H])c6c([H])c([H])c([H])c([H])c45)nnn3C([H])([H])[H])C([H])([H])N(C([H])([H])C([H])([H])c4c([H])c([H])c([H])c5c4[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])Oc1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "     ' [H] ClC(=C(/C(=O)C([H])([H])C([H])([H])N(c×c3c([H])nc(C([H])([H])c4c([H])n([H])c(C([H])([H])[H])c4[H])c([H])c3[H])c1[H])C([H])([H])[H])[C@@]([H])(C#CC([H])([H])[H])[C@]2([H])C([H])([H])[C@]1([H])C([H])([H])[H]',\n",
-       "     ' [H]c1nc2c(C(=O)N([H])c3c([H])c([H])c([H])c([H])c3[H])c([N+](=O[O-])C3(C([H])([H])C([H])([H])N(C(=O)N4C([H])([H])c4c(F)c([N+](=O)[O-])c([H])c(F)c4Cl)C([H])([H])C([H])([H])C3([H])[H])C2([H])[H])nc2c([H])c([H])c([H])c([H])c12',\n",
-       "     ' SC(=O)C(SC([H])([H])c3c([H])c([H]) nexus3C([H])([H])C(=O)OC([H])([H])C([H])([H])C3([H])[H])=C(C([H])([H])[H])SC(=O)C([H])([H])[H]',\n",
-       "     ' [H]Oc1c([H])c([H])c([H])c(/C([H])=C(\\\\-|[H])C(=O)/N=C(\\\\ Prediction',\n",
-       "     ' [H]OC([H])([H])C(=O)N([H])C1C([H])=NG2C([H])([H])c3c([H])c([H])nc(C([H])([H])c4c([H])c([H])c(OC([H])([H])[H])c([H])c4[H])o3',\n",
-       "     ' -c1c([H])c([H])c2c(n1C#N[C@@]1([H])C(=O)N1[C@]([H])(C([H])(Cl)c3c(-c4c([H])c([H])c5c([H])c5C(=O)N([H])O5)C([H])([H])[C@]1([H])C([H])(C([H])([H])C([H])([H])N3C([H])([H])C([H])([H])C4([H])[H])C([H])([H])C([H])([H])C([H])([H])C2([H])[H])C(=O)N([H])[H])C([H])(C([H])([H])[H])C2([H])[H]',\n",
-       "     ' [H]OC([H])([H])C([H])([H])Oc1c(C([H])([H])On nailc([H])c2c([H])c(C3([H])C([H])([H])N(c4nnnc(C([H])([H])[H])c(OC([H])([H])OC([H])([H])[H])c4OC([H])([H])[H])C3([H])[H])c(=O)c6c3nc(C(F)(F)F)c(NC([H])([H])n6[H])oc([H])c23)nc([H])c([H])c1F',\n",
-       "     ' [H]C1=C(N2C([H])([H])C([H])(F)C([H])([H])[C@]2(c3c([H])n([H])c4c([H])c([H])c([H])n43)C2=O)C(Br)C([H])([H])[H]',\n",
-       "     '[C@]([C@@](C([H])([H])n1c([H])nc2c(N([H])[H])nc([H])ncos2[H])C([H])(C([H])([H])C([H])([H])C([H])([H])TrC([H])([H])[H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C(F)(F)C([H])([H])C(F)(F)C([H])([H])[H]',\n",
-       "     ' [H]c1nc2c(-c1-c1c([H])c([H])c([H])c([H])c1[H])N(C(=O)C([H])([H])N2C([H])([H])C([H])([H])N(c3nnn([H])c3[H])C([H])([H])C2([H])[H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]OC([H])([H])C1=C(c2c([H])c([H])c([C@]3(C([H])([H])[H])[C−]5C([H])([H])[C@@]3(C([H])([H])[H])C([H])([H])C5([H])[H])c([H])c2[H])N(C(=O)c2c([H])c([H])c([H])c([H])c2[H])C1([H])[H]',\n",
-       "     ' [H]/N=N/C(=C(N([H])[H])N([H])[C@@]([H])(C([H])([H])ATSC([H])([H])[H])[ Persona])[C@@]([H])(N([H])C(=O)c1nc2c([H])c([H])c([H])c([H])c2n1[H])C([H])([H])c1c([H])c(Br)c([H])c([H])c1[H]',\n",
-       "     ' [H]/N=C(\\\\N([H])[H])C([H])([H])C([H])([H])/C([H])=C2\\\\c3c([H])c(Cl)c([H])c(Oc2c([H])c([H])c([H])c([H])c2[H])c23',\n",
-       "     ' [H]c1nnc2c1-c1c(n([H])[C@@]([H])(F)N1C([H])([H])C([H])([H])N(C([H])([H])C([H])(c3nnnn3-c3c(sc4c(nolog)no4[H])c([H])c46)C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])C([H])([H])C1([H])[H])c2n1[H]',\n",
-       "     ' [H]ON([H])C([H])([H])[C@]1([H])[C@@]([H])([C@](C([H])([H])C([H])=C(C(=O)N1C([H])([H])C([H])([H])Nc3nc(C([H])(C([H])([H])C([H])(C([H])([H])[H])S[H])c4noc4c3nc4c3<o3',\n",
-       "     ' [H]C1=NC(N([H])C([H])([H])[C@@]2(C(=O)C([H])([H])C([H])([H])Ov+)L2C([H])([H])[C@]3([H])[C@@](C([H])([H])C([H])([H])OC(=O)/C(C([H])([H])[H])=C(C([H])([H])n2c(C([H])([H])c4oc4OC([H])([H])OC([H])([H])_S(=O)(=O)O[H])c4=O)OC([H])([H])[H])C3=O)C([H])=C([H])C1[H]',\n",
-       "     ' [H]Oc1c([H])c(C(=O)O[C@@]([H])(C(=O)O[H])/C([H])=N/N([H])[H])c([H])c([H])c1C([H])([H])c1nnn(C([H])([H])C([H])([H])C([H])([H])C(F)(F)C([H])([H])C([H])([H])[H])s1',\n",
-       "     ' [H]OC([H])(C([H])([H])c1sc(N([H])s1)-c1nn(C([H])([H])[H])c1[H])C([H])([H])[C@@]([H])(N([H])C([H])([H])C([H])([H])[C@]1([H])C(=O)N([H])c1c([H])c([H])c(O[S])c([H])c1[H])C([H])([H])C([H])([H])[C@]6([H])C([H])([H])C([H])([H])C([H])([H])[C@]6([H])/N=C(/[H])C([H])([H])C([H])([H])OC3([H])[H]',\n",
-       "     ' [H]/N=C(/N([H])C(=O)OC([H])([H])C([H])([H])OC([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])(C([H])([H])C#CC(-cagatatatatc([H])atatatatc-8)C([H])([H])C([H])(C([H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])(C([H])([H])[H])C([H])([H])[H])=C(/ infallible)C([H])([H])[H])[1]',\n",
-       "     ' [H]/C(C(=O)N([H])c1c([H])c([H])c(OC([H])([H])[H])c([H])c1[H])=C2C(=O)c3c([H])c([H])sc3[O]/c1c([H])c([H])c(I)c([H])c([H])c1[O+]',\n",
-       "     ' [H]c1nc2c(=O)n([H])c(N3C([H])([H])C([H])([H])OC([H])([H])C3([H])[H])c([H])s1',\n",
-       "     ' [H]N([H])C(=O)Se[C@]1([H])C(=O)N([H])C([H])([H])C([H])=C(N([H])C(=O)c2nc([H])c([H])c([H])n2C([H])([H])c2c([H])c([H])c([H])c([H])c2OC([H])([H])O[H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]OC(C([H])([H])c1nc2c([H])nc([H])n2[C@@]1([H])[C@@]([H])([C@]([H])(c2c([H])nn(C(=O)N([H])[H])c2[H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])(C([H])([H])[H])C([H])=C(C#N)N([H])[H])[C@]([H])(O[H])c1sc1[H]',\n",
-       "     ' [H]C#CC(=N)c1c([H])c([H])c(Br)c([H])c1Br',\n",
-       "     ' C1=C(N([Naples])[0]);c2c([N])c(OC([=O)[N:-] accent=`)c([N Specifications)c3c([N packet)=c4c(F)c([N 1])(C#N)C([N])([N+](=O)[O-])[C@]34C([N])([N+](=O).[O-])[C--]F5)c([N])c(O[O]=>[N])c2[Nminimum]O3',\n",
-       "     ' [H]c1c([H])c(H)c2c(c1[H])Oc1c([H]) undisclosed3c(c1[H])nn3C(=O)N1C(=O)N2C1=C([H])C([H])c1nc([H])c2c(nc(Cl)c([H])c([H])c2C([H])=O)c([H])c1N1C(=O)N([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-n2c(C(F)(F)stanbul)c([H])n(C([H])([H])C(=O)N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])c2=O)c([H])c1F',\n",
-       "     ' [H]C(=O)c1nc2o1[C@]1([H])c2c([H])c([H])c([H])c([H])c2S=C(\\\\nu45c([H])c([H])c([H])[n+]/1-c1sc([H])c([H])c1[H])C([H])([H])C([H])([H])N1[H]',\n",
-       "     ' [H]c1c([H])c([H])c(-n2nc(=O)c1[H])c([H])c1[C@@]([H])(C(=O)N1C([H])([H])C([H])([H])N(c2nn(C([H])([H])[H])c3c([H])c([H])c(C([H])([H])C([H])(C([H])([H])OC([H])([H])OC([H])([H])OC([H])([H])OC([H])([H])OC([H])([H])OC([H])([H])SC3)c(OC([H])([H])[H])c([H])n3C([H])([H])C([H])([H])C([H])([H])N(C([H])(C([H])([H])[H])C(C([H])([H])[H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])C2([H])[H])C([H])([H])C1([H])[H]',\n",
-       "     '[C@]([C@@]1([C@]2(C([H])(C([H])([H])[H])[C@]([C@@]([H])(N3C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C3([H])C([H])([H])C3([H])[H])C([H])([H])C([H])([H])C2([H])[H])C(C([H])([H])[H])(C([H])([H])[H])O1)[C@]([H])(OC([H])([H])C([H])([H])OC([H])([H])N1C([H])([H])C([H])(O[H])C([H])([H])C3([H])[H])[C@]([H])(O[H])C([H])([H])OC2([H])C2([H])[H])C([H])([H])c1c([H])nc([H])c([H])c1[H]',\n",
-       "     ' [H]O[C@]1(c2c([H])c([H])sc2[H])C([H])([H])C([H])([H])[C@@]1([H])[P@@](=O)(C([H])([H])N([H])SC([H])([H])[H])[C@]2[C@]1([H])[C@@](C(=O)c3nc4c(N(C([H])([H])[H])C([H])([H])C4=O)OC([H])([H])O8)(C#=F)(C([H])([H])C(=O)c2nsc(C([H])(C([H])([H])[H])C([H])([H])C([H])([H])N[H])n2[H])[C@](C([H])([H])C([H])([H])c2c(oco2C([H])([H])[H])C([H])([H])C1([H])C([H])=C([H])([H])[H])[C@@]([H])(C([H])([H])[H])O3',\n",
-       "     '[C@](C#c2nn([C@@]3(C([F])([C@]([-])(C([F])([C@]([F])(C([F])([F])F),C([F])([F])Other))C([F])([F])C4([C5]5=O)C([F])([F])[C@]([F])(FSC([F])([F])C5([F])[F])C3=O)C3=NO)[C@@]([C@]([C@]([C@]10(O[C@@]([ stockp ])(OC([C@]10(\\\\[In\\\\]3(C(=O)O)O[C@]([F])(C([F])([F])[C@]([F])(OC2([F])(C([F])([F])[C@]([F])(OC2([F])([F])[C@]([F])(oc2F)S([Frawl]27)C([F])[F])[C@]([mcqa]3[C@]([Oopt]!]O6([C@]([OOPA]5)Mary)C4([C5]5([H]+)[H])C([C6([F])[H])([C flavours]6C([F])[H])[H])[C5]45[H])[C@]([O]pty)OC2([H])([C@]3([H])C1([H])C1([H])[C@]([C@@]([H])[C@]1([H])C(C([H])([H])[H])C([H])[H])C9([H])[H])C([H])([H])C([H])(C([H])(C2([H])[H])C2([H])[H])C3([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])C20[H])C([H])([H])C([H])([H])C([H])([H])C20[H])C([H])([H])C([H])([H])C20[H])C([H])(C([H])([H])C6(C1',\n",
-       "     ' [H]c1sc(-c2nc(C([H])([H])[H])c([H])c3nn3-c3nc4c(c3c2nc(N([H])[C@@]5([H])C([H])([H])C([H])([H])C([H])([H])[C@]5([H])C([H])([H])[H])oc3[C@@]([H])(o4c([H])c([H])[H])OC([H])([H])C5([H])[H])nn(C([H])([H])[H])c32)[C@@]([H])(C(=O)N([H])[C@@]([H])(C([H])(C([H])([H])[H])C([H])([H])C([H])([H])[H])=C1[H]',\n",
-       "     ' [H]N([H])C(=O)C([H])([H])/C(=O)C1=NC([H])([H])Sc1c([H])nn(C([H])(C([H])(c2nc(C([H])([H])[H])c([H])c([H])c2[H])C([H])([H])c2c([H])c([H])c([H])c([H])c2[H])c2c([H])c3c(c([H])c([H])n3[H])c([H])c([H])c3c2n+1)c1=T',\n",
-       "     ' [H]C(=O)N([H])c1c([H])noc1C([H])([H])[C@]([H])(C([H])([H])[H])[C@@]1([H])n1c([H])c2c(=O)n(N([H])c3c([H])c([H])c([H])c([H])c3[H])c([H])c([H])c2n1C([H])([H])C([H])([H])[C@@]12[H]',\n",
-       "     ' [H]c1nc(-n2c(-c3nc4c([H])c([H])c([H])nn4c3=O)C([H])([H])[C@@]([H])(C([H])([H])C([H])([H])[H])N([H])[C@@]3([H])C([H])([H])[H])c([H])c([H])c1[H]',\n",
-       "     ' [ H]c1c([H])c([H])c2c(c1[H])[C@]10C([H])([H])Asn1nc(-c3c([H])c([H])c(No)c([H])c3[H])nc(C(=O)N([H])C3(C([H])([H])[H])C3=O)c1[H]',\n",
-       "     ' [H]OC([H])([H])C([H])([H])n1nn2nc([H])c1c([H])c([H])c([H])c12',\n",
-       "     ' [H]c1c([H])c([H])c([C@@]([H])(C#N)N([H])c2sc3c([H])c([H])c(N4C([H])([H])C([H])([H])N([H])C([H])([H])C4([H])[H])c(OC([H])([H])OC([H])([H])[H])c3c23)c([H])c1[H]',\n",
-       "     ' [H]C1=C([H])[C@@]2([H])C([H])([H])C1=C([H])[C@@]3(C([H])([H])C([H])([H])N(C(=O)C([H])([H])N4C(=O)C([H])([H])C([H])([H])C([H])([H])C4=O)C([H])([H])C3[H])[C@]1([H])OC([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c([C@@]([H])(C(=O)N([H])[C@]([H])(C([H])([H])c2nc4c([H])c([H])c(N5C(=O)C([H])([H])C([H])([H])C([H])([H])N(C([H])([H])[H])C([H])([H])C5([H])[H])nc4[H])C([H])([H])C3([H])[H])C([H])([H])C([H])([H])C([H])([H])C5([H])[H])N( abst wly)[C@]([H])(C([H])([H])[H])C1(C([H])([H])[H])C(C([H])([H])([H])C([H])([H])CW(=O)C([H])([H])[H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]OC(=O)C([H])([H])[C@]([H])(c1c([H])nc(N([H])c2nc(N3C([H])([H])C([H])([H])C([H])(C([H])([H])C3([H])[H])C([H])([H])C3([H])[H])nc3c([H])c([H])c([N+](=O)[O-])c([H])c23)c1[H])S(=O)(=O)(=O)[O-])C([H])([H])C([H])(C([H])([H])[H])C([H])([H])c1c([H])c([H])c(C(=O)O[H])c([H])c1[H]',\n",
-       "     ' [H]ON([H])C(F)(C([H])([H])[H])[C@]([H])(OC(=O)[C@]([H])(N([H])C(=O)C([H])([H])c1c([H])c([H])c([H])c([H])c1[H])C([H])([H])c1c([H])c([H])c([H])c([H])c1[H])N([H])[H])[C@@]1([H])C([H])([H])C([H])([H])C([H])([H])[C@@]46[C@@]7C([H])([H])c3c([H])c([H])c(C(F)(F)F)c([H])c3[C@]63[C@]([H])(C([H])([H])c2scag(C3([H])[H])c(OC([H])(C([H])([H])[H])C3([H])[H])c2[H])C([H])([H])OC([H])([H])C1([H])[H]',\n",
-       "     ' [H]ON([H])[C@@]([H])(O[H])[C@]1([H])N([H])C([H])([H])Sc2nc(-c3c([H])c(Cl)c([H])c([H])c3S=S)atc2nr3nc3c(sc3c2[H])C1([H])C([H])([H])C([H])([H])C1 rented at 3point N(C1=O)C2([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1c([H])c2c(c([H])[H])nc([H])c([H])nc2c1[H]',\n",
-       "     ' [H]=C(/C#N)C([H])([H])[C@]([H])([C@]([H])(N([H])S(=O)(=O)c1c([H])c(N2c([H])c3c(c2[H])n([H])c(C([H])([H])[H])c(C([H])([H])C([H])([H])c2c([H])c([H])c(C(=O)C([H])([H])SC([H])([H])C([H])([H])OC([H])([H])OC([H])([H])SC([H])([H])C([H])([H])N2[H])s6)c([H])c([H])n45)C([H])([H])C2([H])C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])C([H])([H])C([H])([H])C([H])([H])[H]',\n",
-       "     ' [H]OC([H])([H])C1C([H])([H])C([H])([H])N(c2nc3c(nc4c(=O)c5c([H])c([H])c([H])c([H])c5c(=O)n24n(C([H])([H])[C#N]4C([H])([H])[C@]([H])(Oc4c([H])c([H])c([H])c([H])c4[H])C3([H])[H])C(=O)O=C2[H])[C@]1([H])O[H])C([H])([H])c2c(BrC#N)nc([H])s2[H]',\n",
-       "     ' [H]c1c([H])c([H])c(C(F)(F)F)c([H])c1F',\n",
-       "     ' [H]OC(=O)c1c([H])n([H])c(N([H])C(C([H])([H])C([H])([H])[H])c2c([H])c([H])c3c4c3c(nn3C4(C([H])([H])C([H])([H])[H])C([H])([H])C4([H])[H])C([H])([H])C([H])([H])C([H])([H])C4([H])[H])c1[H]',\n",
-       "     ' [H]ON([H])C(=O)C(c1c([H])c([H])c(Cl)c([H])c1Cl)[C@]1([H])[C@@]12C([H])([H])[C@]([H])(N([H])C(=O)[C@@]([H])(OC(=O)C([H])([H])[H])C([H])([H])F)[C@]1=C(C([H])[H])C3([H])C([H])([H])C([H])([H])OC([H])([H])C([H])([H])O3[H]',\n",
-       "     ' [H]c1nc(C([H])([H])C([H])([H])N2C([H])([H])C([H])([H])N(C(=O)N([H])C([H])([H])[H])=C2-c2nc ((C#N)c3nc(C([H])([H])[H])c([H])c(C([H])([H])[H])c3-c3sc2C1([H])[H])c([H])n12)s1',\n",
-       "     ' [H]Oc1c([H])c(C([H])([H])C([H])([H])N([H])[H])c([H])c(O[H])c1C([H])([H])N1C([H])([H])OC([H])([H])C([H])([H])C1([H])24 Cait Left br C 1 C([H])C([H])C1([H])C([H])([H])C([H])([H])C1([H])[H]',\n",
-       "     ' [H]c1oc([H])c(C(=O)C([H])(C([H])([H])C#N)C([H])=C(\\\\C(=O)N([H])c2sc3c(c2C([H])([H])C([H])([H])OC([H])([H])C([H])([H])OC([H])([H])[H])C([H])([H])C3([H])[H])C([H])=C(\\\\P kits:\\\\C+C([H])([H])(C([H])=C#N)C([H])([H])[C@]([H])(C([H])=CC(C([H])([H])[H])SC([H])([H])[H])C([H])([H])[C@@]32[H])C([H])([H])[H])C([H])([H])[H]',\n",
-       "     ' [H]\\\\H',\n",
-       "     'nn1c([H])c([H])c([C@]([H])(C([H])([H])[C@@]([H])(N([H])[H])C([H])([H])[H])[C@]([H])(N([H])C(=O)c2noc3c([H])c([H])c([H])c([H])c3n2[H])[C@@]2([H])[H])c1[H]',\n",
-       "     ' [H]ON([H])C(=O)[N=C1\\\\N([H])C(=O)N([H])[C@@]([H])(C([H])([H])O[P@@](=O)(O liquorO)I1){Oc1sc(-c2c([H])c([H])c([H])c([H])c2[H])c([H])c([H])c1[H])C([H])([H])C1([H])[H]beer)C([H])([H])[H]',\n",
-       "     ' a)C(=C1C([H])([H])C2=NC([H])([H])C([H])([H])[C@]([H])(C(F)(F)F)C2=O)C1=N/C([F])=C(\\\\[H])C([H])([H])C1=O[H]',\n",
-       "     \" brcnyncglc1c([N+](=O)[C@@]2([N+](=O)|[N+])OC([=O)c3c([N+](=O)[O-])c([N+](=O)[O-])c(NSC([111])([O-])Oc4c([N+](=O)[O-])c([N])c(H)c([N+](=O)[O-])sc4[C@@]3([N+.ountain)C4([N+](=O)[O-])C([N']=O)[C@]3([N+](=O)[O])[C@@]2[O-])[](N([N+])([N-])C([H])([N])N7C([H])([D?])C3([H])([N+](=O)[O-])C1([H])([H])C6([H])([H])SONC1([H])[H])C([H])([H])C????????[H])C2([H])[H]\",\n",
-       "     ' [H]N([H])C(=O)C([H])(C1(sc2c([H])c(S(=O)(=O)c3nnn([H])[C@]4([H])[C@@]([H])(c4c([H])c([H])c([H])c([H])c4C4([H])[H])C4([H])[H])c3[H])N1)(C([H])([H])[H])C([H])([H])N([H])[C@]([H])(C([H])([H])[H])Sc)C2([H])[H]',\n",
-       "     ' [H]N([H])c1oc2c(C3([H])C([H])([H])C([H])([H])N(C(=O)C([H])([H])C([H])([H])[C@@]4([H])C([H])([H])C4([H])[H])C([H])C([H])([H])C2([H])[H])n1',\n",
-       "     ' [H]/C(=C(\\\\[H])C([H])([H])N(c1c([H])c([H])c(Cl)c([H])c1Cl)c1nc2c([H])c([H])c([H])c([H])c2c1C(=O)N(c1c([H])c([H])c(F)c([H])c1[H])N(C([H])([H])C([H])(C([H])([H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])[H])C2([H])[H])c1c([H])c([H])c([H])c([H])c1[H]',\n",
-       "     ' [H]Nc1c([H])c([H])c(C(([H])c2nnnn(C([H])([H])o3)c3c([H])c(=O)c(N([H])C([H])([H])[H])c(=O)n3n2C([H])([H])[H])c2c([H])c(C([H])([H])c3c([H])c([H])c(Cl)c(Cl)c3Cl)o2N([H])[H])c([H])sc1N([H])[H])c1c([H])c([N+][/n] loosen[H]',\n",
-       "     ' [H]OC([H])([H])C1=Nc2c([H])c([H])c(OC([H])([H])[H])c(OC([H])([H])[H])c2Int 1',\n",
-       "     ' [H]c1c([H])c(C([H])([H])N([H])[C@]([H])(C(=O)N2C([H])([H])SC([H])([H])C2([H])[H])C([H])([H])[H])c(N([H])C([H])([H])C([H])([H])N2C(=O)N(C([H])([H])C3([H])C([H])([H])C3([H])[H])C([H])([H])C2([H])[H])c1C(=O)N=C1[H]',\n",
-       "     ' [H]n1c([H])c([N=]c2c([H])nc3c([H])c(nc([H])/3)c([H])c23)c([H])caji1 embodiment[H]',\n",
-       "     ' [H]C#NBr@[C@](N([H])c1nc(-c2c([H])c([H])c3c(c(OC([H])([H])[H])nc2-c2nnc(C([H])([H])[H])n2)na1[H])c1=O)C([H])([H])[C@@]([H])(N([H])[H])C([H])([H])[H])c1nn([H])c2c([H])c([H])c([H])c([H])c12',\n",
-       "     ' [H]c1c([H])c(Cl)c([H])c1Cl',\n",
-       "     ' [H]c1c([H])c([H])c([C@]20NC3C([H])([H])C([H])([H])N(S(=O)(=O)c4c([H])c([H])c([H])c([H])c4[H])c4c([H])c([H])c([H])n4=O)C([H])([H])C([H])([H])C2([H])[H]',\n",
-       "     ' [H]n1c([H])n2nc([H])c(Oo[C@@]3([H])[C@]([H])(C([H])([H])[P@](=O-|)N([H])C(=O)C(C([H])([H])[H])(C([H])([H])[H])C([H])([H])[H])N([H])[C@@]([H])(c3nc([H])c(Cl)c([H])c3[H])[C@]32[H])s21',\n",
-       "     ' [H]N([H])C(=O)c1c([H])c([H])c(C([H])([H])c2nc([H])c3oc([H])c3n3)c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(DF(n2c([H])nc3c([H])nc(C4(c5c([H])c([H])c(F)c([H])c5[H])C4(C(=O)N8)C([H])([H])[C@]23[H])c(C#N)c2[H])Sc2c([H])c([H])c([H])c([H])c2c1=O',\n",
-       "     ' [H]Atc1sc2c(c1C([H])([H])S[H])C2([H])[C@]([H])(N1C([H])([H])Sc3oc([H])c4c1n(C([H])([H])[H])nc4Sc3=O)C([H])([H])C(=O)O[C@@]([H])(c1c([H])c([H])c(Br)c([H])c1Br)C2([H])[H]',\n",
-       "     ' [H]c1c([H])c([H])c2c(c1[H])C(=O)N2C(=O)N([H])c1nc(-c5c([H])c([H])c(-oc6nc3c([H])c(OC([H])([H])[H])c([H])c(NV)c63)c(C(F)(F)F)c5[H])nc([H])c1-c1c([H])c([H])c(Br)c([H])c1C([H])([H])C2([H])[H]',\n",
-       "     ' [H]C(=O)c1c([H])c([H])c(OC([H])([H])C([H])([H])OC([H])([H])[H])c([H])c1[H]',\n",
-       "     ' [H]c1c([H])c(C#N)c([H])c([H])c1OC([H])([H])c1c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c([H])c3[H])nc2n1',\n",
-       "     ' [H]C([H])=C([H])C([H])([H])OC([H])([H])C1(Cl)C([H])([H])C([H])([H])SOC1([H])C([H])([H])OC([H])([H])C1([H])[H]',\n",
-       "     '. fix forgot=0[ hairsthOS(=C#[ Copenhagen]([1]=O[2];s2c([H])nc([H])c32)C1=C(OC(=N)c2c([H])c([H])c([H])c([H])c2[N redes]+C2=O)C([H])([H])S1',\n",
-       "     ' \\\\[c1sc2sc(-c3sc(SC([C#]ce([C@@]96T[C@](=O)C(F Capitalism #1)F91)OC3([F])([C@@]4([F])C([H])([H])[C@@]4([H])OC4(C5([H])C([H])([H])C([H])([H])[C@@]5([H])C(=O)N([H])([H])C(=O)[C@@]100[H])(C([H])([H])[H])C([H])([H])[C@]3([H])[H])C([H])([H])[H])C([H])([H])[H])sc12)Cat1([H])[H]'],\n",
-       "    'logprobs': [None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None],\n",
-       "    'model': 'ada:ft-personal-2023-02-05-21-51-00'},\n",
-       "   'generated_smiles': (#92) ['[H]c1oc(-c2c([H])c([H])c(S(=O)(=O)N([H])[H])c3c([H])c(-n4c(-c5nc([H])c([H])n4C([H])([H])[H])ono4[C','[H]/N=C2/C(c3c([H])c([H])c(OC([H])([H])N(C#N)[N-c5c([H])c([H])c6c(c7c(n0)[C','[H]/C(C(=C(/OC([H])([H])C(=O)[C@]([H])(Oc1c([H])c([H])c([H])c([H])c1[H])C([H])([H])[H])C([H])([H])[C@]([H])(OC([H])([H])[H])C([H])([H])[H])C1=C##','[H]c1c([H])c([H])c2c(c1[H])C(=O)c1c([H])nc([H])c([H])c1c([H])c([H])c12','[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]','[H]/C(:(C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])c1c([H])c([H])c(I)c([H])c1[C@]1([H])c2sc(C(=O)N([H])[H])nc2c1[H]','[H]c1c(Cl)c([H])c(Cl)c([H])c1C#Cc1nc2c([H])c([H])c(S(=O)(=O)N([H])c3oc4c([H])nc(C([H])([H])[H])c([H])c4c3-c3c([H])n([H])cmr21','[H]OC([H])([H])C1=N/C2=C(C#N)C([H])([H])[C@]([H])(O[H])[C@]2([H])[C',')[pvtty](c1c([H])c([H])c(C(=O)N2c3c([H])c([H])c([H])c([H])c3n2[C','[H]N(c1nn(-c2c([H])c([H])c([H])c([H])c2Cl)c(-n2c(-c3c([H])nc(N4C([H])([H])C([H])([H])OC([H])([H])C4([H])[H])no3)c([H])c2[H])c1O[H])[C'...],\n",
-       "   'train_smiles': 0     [H]c1c([H])c([H])c(C([H])(c2c([H])c([H])c([H])...\n",
-       "   1     [H]c1c(OC([H])([H])C([H])([H])C([H])([H])N2C([...\n",
-       "   2     [H]c1c([H])c([H])c2c(c1OC([H])(C([H])([H])[H])...\n",
-       "   3     [H]OC([H])([H])[C@@]1([H])O[C@@]([H])(c2c([H])...\n",
-       "   4     [H]c1c([H])c([H])c(-c2c([H])c([H])c(C([H])([H]...\n",
-       "                               ...                        \n",
-       "   87    [H]Oc1nc(N([H])/N=C(\\[H])c2nc([H])c([H])c([H])...\n",
-       "   88    [H]c1c([H])c([H])c(C([H])([H])C(=O)N(C([H])([H...\n",
-       "   89    [H]c1nc(N([H])c2c([H])c([H])c(OC([H])([H])c3c(...\n",
-       "   90    [H]c1c(C(F)(F)F)nc(C([H])([H])C([H])([H])c2c([...\n",
-       "   91    [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...\n",
-       "   Name: label, Length: 92, dtype: object,\n",
-       "   'frac_valid': 0.08695652173913043,\n",
-       "   'frac_unique': 1.0,\n",
-       "   'frac_smiles_in_train': 0.0,\n",
-       "   'frac_smiles_in_pubchem': 0.375,\n",
-       "   'in_pubchem': [2, 5, 6],\n",
-       "   'kld': 0.2860101306581567,\n",
-       "   'frechet_d': 67.00861478431695,\n",
-       "   'frechet_score': 1.512535831818692e-06,\n",
-       "   'valid_smiles': ['[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]',\n",
-       "    '[H]Oc1c([H])c(C(=O)N([H])c2c([H])c([H])c(F)c(S(=O)(=O)C([H])([H])[H])c2[H])c([H])c2nc(N([H])[H])nc([H])c12',\n",
-       "    '[H]',\n",
-       "    '[H]/N=C(\\\\N([H])[H])C([H])([H])C([H])([H])/C([H])=C2\\\\c3c([H])c(Cl)c([H])c(Oc2c([H])c([H])c([H])c([H])c2[H])c23',\n",
-       "    '[H]C#CC(=N)c1c([H])c([H])c(Br)c([H])c1Br',\n",
-       "    '[H]c1c([H])c([H])c(C(F)(F)F)c([H])c1F',\n",
-       "    '[H]C(=O)c1c([H])c([H])c(OC([H])([H])C([H])([H])OC([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C#N)c([H])c([H])c1OC([H])([H])c1c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c([H])c3[H])nc2n1'],\n",
-       "   'valid_indices': [4, 10, 14, 26, 37, 61, 87, 88],\n",
-       "   'novel_indices': [4, 10, 14, 26, 37, 61, 87, 88],\n",
-       "   'novel_smiles': ['[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]',\n",
-       "    '[H]Oc1c([H])c(C(=O)N([H])c2c([H])c([H])c(F)c(S(=O)(=O)C([H])([H])[H])c2[H])c([H])c2nc(N([H])[H])nc([H])c12',\n",
-       "    '[H]',\n",
-       "    '[H]/N=C(\\\\N([H])[H])C([H])([H])C([H])([H])/C([H])=C2\\\\c3c([H])c(Cl)c([H])c(Oc2c([H])c([H])c([H])c([H])c2[H])c23',\n",
-       "    '[H]C#CC(=N)c1c([H])c([H])c(Br)c([H])c1Br',\n",
-       "    '[H]c1c([H])c([H])c(C(F)(F)F)c([H])c1F',\n",
-       "    '[H]C(=O)c1c([H])c([H])c(OC([H])([H])C([H])([H])OC([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C#N)c([H])c([H])c1OC([H])([H])c1c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c([H])c3[H])nc2n1'],\n",
-       "   'expected': [2.1353246951799685,\n",
-       "    2.1123460888902255,\n",
-       "    3.650217937474436,\n",
-       "    1.7674429208827362,\n",
-       "    2.6417340087640078,\n",
-       "    1.6231275501684852,\n",
-       "    3.246640657751793,\n",
-       "    1.8040914351738353,\n",
-       "    2.1281730733563666,\n",
-       "    1.411433568423245,\n",
-       "    3.513532458758056,\n",
-       "    2.670504484956229,\n",
-       "    2.239241524840996,\n",
-       "    0.6881904518953377,\n",
-       "    1.2712306643490647,\n",
-       "    2.581698475809956,\n",
-       "    3.417274425406017,\n",
-       "    1.538943599221743,\n",
-       "    1.9845429163942245,\n",
-       "    3.877841145317224,\n",
-       "    3.34016836276274,\n",
-       "    1.3836963476782458,\n",
-       "    3.1082163326771157,\n",
-       "    1.9722765807169642,\n",
-       "    3.686639689591095,\n",
-       "    2.2748460983073144,\n",
-       "    2.538214365803805,\n",
-       "    1.3415924297383302,\n",
-       "    2.135967850985337,\n",
-       "    1.3774302448851743,\n",
-       "    2.774216067343345,\n",
-       "    3.055096878363862,\n",
-       "    2.1000247175151543,\n",
-       "    0.33822766619480693,\n",
-       "    1.6132366015672883,\n",
-       "    2.115310034863763,\n",
-       "    3.588133909979325,\n",
-       "    3.176883778631613,\n",
-       "    3.480547870596866,\n",
-       "    2.728282645296599,\n",
-       "    1.6149156846762678,\n",
-       "    5.374731436440936,\n",
-       "    2.345750367158073,\n",
-       "    0.13771814503603663,\n",
-       "    1.7630519287152748,\n",
-       "    2.612818188358495,\n",
-       "    2.9711651688902623,\n",
-       "    1.987971511611876,\n",
-       "    3.6898026509662807,\n",
-       "    2.8208410406764117,\n",
-       "    1.4546936857831523,\n",
-       "    0.5284051396074474,\n",
-       "    2.473930532872131,\n",
-       "    3.898516421975269,\n",
-       "    3.7943525226816313,\n",
-       "    1.6800774055988468,\n",
-       "    1.8344042191383803,\n",
-       "    2.86890826945903,\n",
-       "    2.1147925213362435,\n",
-       "    2.5208249144110955,\n",
-       "    3.0023349811631137,\n",
-       "    3.4295999414748453,\n",
-       "    3.2425429664656678,\n",
-       "    2.673845284963159,\n",
-       "    2.641035221596825,\n",
-       "    3.897699030055646,\n",
-       "    2.664687883048459,\n",
-       "    1.8855621612638922,\n",
-       "    2.54151726106847,\n",
-       "    1.7779461965686747,\n",
-       "    3.062443133846699,\n",
-       "    3.4034285103299267,\n",
-       "    2.807322519998883,\n",
-       "    2.7158730142692553,\n",
-       "    1.8264221794140145,\n",
-       "    1.5772670884036426,\n",
-       "    2.9170058277493225,\n",
-       "    1.9293810125760356,\n",
-       "    5.163738213662894,\n",
-       "    2.267077558924912,\n",
-       "    2.5482239290404856,\n",
-       "    0.7996282608124348,\n",
-       "    3.3105697253823165,\n",
-       "    2.0202506327958822,\n",
-       "    2.4420493835199673,\n",
-       "    3.482552484783243,\n",
-       "    2.4216546207474265,\n",
-       "    2.3092026766834697,\n",
-       "    1.3249495208668236,\n",
-       "    3.1804506853079806,\n",
-       "    2.22464832107317,\n",
-       "    2.895223625866164],\n",
-       "   'temperature': 1.25,\n",
-       "   'prevalence': 0.0,\n",
-       "   'fragment_fraction': 0.0,\n",
-       "   'formatted_test':                                                prompt  \\\n",
-       "   0   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   1   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   2   What is a molecule with bandgap 3.7 and C#CBr ...   \n",
-       "   3   What is a molecule with bandgap 1.8 and C#CBr ...   \n",
-       "   4   What is a molecule with bandgap 2.6 and C#CBr ...   \n",
-       "   ..                                                ...   \n",
-       "   87  What is a molecule with bandgap 2.3 and C#CBr ...   \n",
-       "   88  What is a molecule with bandgap 1.3 and C#CBr ...   \n",
-       "   89  What is a molecule with bandgap 3.2 and C#CBr ...   \n",
-       "   90  What is a molecule with bandgap 2.2 and C#CBr ...   \n",
-       "   91  What is a molecule with bandgap 2.9 and C#CBr ...   \n",
-       "   \n",
-       "                                              completion  \\\n",
-       "   0    [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C...   \n",
-       "   1    [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=...   \n",
-       "   2    [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])...   \n",
-       "   3    [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([...   \n",
-       "   4    [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[...   \n",
-       "   ..                                                ...   \n",
-       "   87   [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3...   \n",
-       "   88   [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(...   \n",
-       "   89   [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O...   \n",
-       "   90   [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nn...   \n",
-       "   91   [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H...   \n",
-       "   \n",
-       "                                                   label        representation  \n",
-       "   0   [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C(...  [2.1353246951799685]  \n",
-       "   1   [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=O...  [2.1123460888902255]  \n",
-       "   2   [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])[...   [3.650217937474436]  \n",
-       "   3   [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([H...  [1.7674429208827362]  \n",
-       "   4   [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[H...  [2.6417340087640078]  \n",
-       "   ..                                                ...                   ...  \n",
-       "   87  [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3c...  [2.3092026766834697]  \n",
-       "   88  [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...  [1.3249495208668236]  \n",
-       "   89  [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O)...  [3.1804506853079806]  \n",
-       "   90  [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nnc...    [2.22464832107317]  \n",
-       "   91  [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H]...   [2.895223625866164]  \n",
-       "   \n",
-       "   [92 rows x 4 columns],\n",
-       "   'group': 'C#CBr'},\n",
-       "  {'completions': {'choices': [' [CT163CC goofbag 283] CCL cascade theorem',\n",
-       "     ' [H]N(c1sc(-c2c( treadisu([H])c3nc([P@@}] Carson,[H])n([C@@]53VT.)c2[H])n1)[C@]([H])(C([H])([H])[H])C([H])([H])C1([H])[H]?)C(F)(F)F',\n",
-       "     ' [H]ON([H])C(=O)c1c(-c2nc(-c3nsc(-c(-c4c([H])c([H])c([H])c4[H])no2)s22)n1[H])c([H])c([H])c([H])c1Br',\n",
-       "     ' [H] ratt,c1c([H])nc(Sc2c([H])nc(/?)[C-H]c28nn([H])c2nc(N([H])[H])nc26)=O [C@]AR deleting=tc1-c1nc([H])c([H])c(G)c([H])c1F',\n",
-       "     'nnoc rallied Labs[P]:.longcout #9[H]--C(=O)N([H])c1c([H])c([H])c([H])c(Cl)c1Oc1c([H])c([H])c(C(C([H],[H])/C([H])=C9/C(=O)O[H])O[H])c(F)c1[H])c12',\n",
-       "     ' [H]C1=N befriendN=C(C(=O)Cl)=N1CL1C2=NC(=O[C#plete])B12000[H]',\n",
-       "     ' [H]OC([H])([H])[C@@]10C([H])([H])[C@]([H])(C([H])([H])[H])[C@]([H])(N1C(=O)=COL[C@@]scatorc1sc(Cl-)c([H])n1Cl)N(C(=O)C1([H]) nicknamed %(@)nocrebetter)[C@@ patched=nc1des6c8cnnnc33c([H])c([H])c12[H])C([H])C2=O',\n",
-       "     ' [H]/N=C#Nc1nc([H])c([H])c2onc(=O)c2nc(-c3c([H])nc(-c(-ivizn)c([H])/[H])nc3SP)[C@]12OE07[H] crisb claims heterclentials 1',\n",
-       "     ' [HXC@c1c([H])nc([H])c([C@@]([H])(N2C([H])([H])[C@]([H])(C([ tabl 53]fixed )C([H])([H])C([H])(F)C([H])(C([H])([H])[H])C([H])([H])[H])C([H])([H])C([H])([H])F)C2=O)[C@@)No cholesterolc1(Cl) allele)[H]@@ brig et al pipelinesig21 FREOCSSSSHHH /*StrStat tc1c([H])c([H])c([H])c([H])c1SC([H])/[H]( thresholds=43)=Pi/C1/C1/C(F pressures)[C@@]2([H])C([H])(C([H])([H])C([H])([H])N32[H])I',\n",
-       "     ' [H]/N=C1\\\\O51C(/N(c2sc3obsc3c2[H])C([H])([H])C([H])([H])Oc2sc(SC([H])([H])[H])nc23)c1c([H])n([H])c(=nc15)c1[H]',\n",
-       "     ' [H^]N1c(=O)c([H])c([N+](=O headlights on)C([H])([H])C2[C@](c3c([H])nc([H])c([H])c3[C@]2C([=H])([H])C([H])([H])C([H])([H])[H])C1([H])[H])c1c([H])c([H])c([C@@]([H])(N([H])C(=O)[ stenographer 2 who wishes in SB coverage later on extra colour uses C-H)C([H])([H])c2c([H])c([H])c([H])c([H])c2SC([H])([H])C3([H])[H)C1([H])[H]',\n",
-       "     ' [H]c1c(C([H])([H])[H])c([H])oc1C#=C(\\\\ZZc2c([H])c([H])c([H])c([H])c2C([H])([H])[H])=Nc2nc([H])c([H])nc2n9',\n",
-       "     ' [H]O(c1c([H])c([H])c2c(c1C([H])([H])O[H])=C(N([H])[H])[C@@]3([H])C([H])([H])[C@]3([H])[C@]2([H])C([H])([H])[C@]([H])(C([H])([H])C2([H])Shift- Approximately 555…do layer 129-1 ',\n",
-       "     '~c1c([H])C(_)/C(=C(\\\\[H])S/NOT([H])S=C(N([H])C([H])([H])C2([H])N(C([H])([H])c3c([H])noc3[H])C([H])([H])C2([H])[H])N([H])[H])c(C([H])([H])[H])nc1[H]',\n",
-       "     ' ??? cheers Tempo 221 Guess connects CNO winding to whole Fuel and BSIC ligaters on this frame Avenacci acetals Meet and greet Meeting Fika bruns (electromajor bond according...) Hel for alert Benimo long hist session TTM R pick up BRv21rd Spiz67 BrewRomanPie HendrsCl MethodToolsCar StoNetnetic UBladesDuak EGTechnological sam TheBigDaveHow Thatatorl PilotenSynder TraifCoMus09 @24kamm1@?? 0no70%n12AATTTLC362F',\n",
-       "     ' [H]c1c([H])c([H])c([C@@]129C45C([H])([H])[C@@]([H])(N2C(\\\\ acetate]56[C@@]([H])(c6o-c6o(=n)net1[ה])[C@]([H])(C([H])([H])C1([H])[H])C2([H]) carrotscent)S[H])c([H])c1[H]',\n",
-       "     ' dysantrac[cgc]c1c([infSpeaking batteryperson))c([n buys from...),c2c#c(c3c(c(C([ handwriting)] ([[ skill][/thought], where Virginia Minif AMERILYANA(0)( nylon)(license believing average; however Virginia Minif ((trideilings[berloïstra] orthometal cuvette)[berloogoʴ])vandaasmode;#] zigguratc1on34O Sof least analysis binds ==Entanglement + min [full] as whole];',\n",
-       "     ' [H]c1sc([H])-c1/c2 MohGroC(=O)[C@]([H])(N(CS([H])([H])[H])[C@]3([H])C([H])([H])[C@]([H])(Do Potxure on a gift creek?)S2@@C(=CLEC2[H]) clueless068H',\n",
-       "     ' [H]c1c(-coscopicpetebc-\\\\b[H])n([H])c(-c2noc(-c2c([H])c(Br)c([H])c(Br)c2F)c1[H])n1c2c(c1nonc([H])n1...)C([H])=129',\n",
-       "     ' [H]Ocids[H]c1oc(-c2c([H])c3c([H])c(F)c([H])c([H])c3-c3nc(F)nn3- �',\n",
-       "     ' [H]C1=C([H])[C@@]2(c3c([H])c([H])c(OC([H])([H])C([H])(N([H])C(=O)c4nc4[N+](=OS(=O)=O)[C@]([H])(F)F)C(AmId[H])C(Fverson)[H])c([H])c3[H])[C@]2([H])C([H])([H])[C@@](S(',\n",
-       "     ' [H]OC1(C([H])([H])[H])C(=O)[C@]27O[C@@]([H])([C@@]([H])(c3c([H])c([H])c(/ frying )c(N=Cidnu Bullet R()gget U)=C(C(\\\\ Devin Huff)/C(C2=N)(C([H])([H])[H]) Necid).C([H])([H])[H])[C@]35[H])O1',\n",
-       "     ' [H]c1nnc(-c2c([H])c(Cl)c([H])c([C@@]3(N4C ventilation(mann)(OON[H])[C@](S[benefit])C([H])([H])[C@]([H])(N5C([H])(C([H])([H])冬)C([H])([H])ioxus)N([H])C([H])([H])c5c([H])n([H])c([H])n5-s53s53)C([H])([H])gentso~3 collegiate hockey universal suffice it',\n",
-       "     ' [H]OC([H])([H])[C@@]([H])(O[H])YS hiresbands[1]: complaineddpairc=c2c(celocalstatedc([H])ceworthy1nnnc12)c1=O[k dimensions]c1c([H])c([H])c([H])c([H])c1[ 53C',\n",
-       "     ' [H]c1c([H])c([H])c(-c2c(-c3c([H])nc(N([H])[H])nc3C([H])([H])OC([H)([H])[H])C([H])([H])[H])c([H])c([H])c2[H])c([H])c1 [*red!][-OEDfoundland][K]',\n",
-       "     ' [H]Sc1nc2c1-c1c([H])n([H])n([H])c1=O@@Sav1C1(C(C(=O)OC(C([H])([H])[H])C([H])[H])(other)C([H])([H])[H])C([H])([H])C1([H])[H]',\n",
-       "     ' @04f0011 vig(ard)on[c\\\\ photographic',\n",
-       "     ' [H]c1c([H])c([H])c(N2c(C#CC2=C#N)C(=S)C([H])([H])S/N=N3',\n",
-       "     ' [H]c1nc([H])c2c-nc(N3C(c4nc5c([H condemned ##c4c([H])(F)nc(nn4[H]))[C-](amidoyl) curedbrico).C([H])([H])[H])C([H])([H])[C@@]34C(C([H])(F)F)[H]',\n",
-       "     ' [H]/N=O/N([H])[C@N/ colonists full text ->ett1nc3sc2=O',\n",
-       "     ' [H]c1nc2nc(C10C([H])( Clim)c1antorp0c1oc([H])c1[H])c1nc([H])n2c1nc(C([H])([H])[H])c2c11',\n",
-       "     ' [H]ODrac(C1=Â–C([H])C([H])([H])C224)/C(F)=CGROUP(); dulyOC2=C(\\\\[H])c3nc([H])c([H])c([H])n3-c3ctc(R-)(C([H])([H])N([H])F handful)c([H])c3[H]',\n",
-       "     ' [H]Ocsir[C@](c1c([H])c(F)c([H])c(Cl)c1F',\n",
-       "     ' [H]OA TBD [C@]1(C([H])([H])S(=O|[H])C2(C([H])([H])C([H])([H])CE(=CW1-S(=Oizon-O2[H])=O)N(C([H])([H])c3c([H])c([H])c(Cl)c([H])c3[H])C2([H])[H])C([H])([H])OC2([H])[H])C([H])([H])C([H])([H])N=C(C(=O)N(C([H])([H])[H])C([H])=C([H])[H])c2c([H])c([H])c([H])c([H])c21',\n",
-       "     ' [H]Land eurozoneHbnon[C@@]1211[C@@]43C([H])([H])NO2Unive 346C5(N/C(\\\\ precipitate 53 EVC))N(C([H])([H])P(=O)(Ooing an Mitch Hans owehoff collection model x22UD)]5c2nc(-c(-c([H])c3nc([H])n(No13)c3-c12)[nouヘ-],c3noc3[H])c([H])nc2c1c1[C@@]FC1[H gained content]348 brisk BO2 Gardner2003',\n",
-       "     ' [H]SC([H))(C([H])([H])CTS[H])[C@]3([H])C([H])([H])C([H])([H])[C@@]4([H])[C@]5([H])C([H])([H])C([H])([H])[O@ brewing]c1c([H])N(ci1nc([H])[N-](/ Products l91cｆ1[H])c2nnc(-c1C([H])([H])S[H]) bip evidaffc+c(-c1=O)itualn1',\n",
-       "     ' [H]N(c3nc([N+]([H])/nc([H])/N=Nnc2C([H])([H])c(Cl+)c(C([H])([H])[H])c(Cl)c(F)c2Cl[expr]=3)[C@]3([H])c3nc( OS([H genders])(O[H])/ foreign_name = across #### [H])c(OA=N/C(_O[H])[C@](90[H])C3([H])[H])c(OC([H])([H])OC([H])([H])OC([H])([H])OC3([H])[H])c3c([H])nc12F',\n",
-       "     ' [H]c1c([H])c([H])c(C(=O)c2nn(-c3=O)/ eaves2[C@]([H])(C([H])([H])[H])C([H])([H])c2n+ open20inatornten1Fanwood 49338* uneQU blissoperazijono4oo convention SE alle 94ongeoi3nc11n1tr1c1c(C([H])([H])[H])c([H])c(C([M])([H])etryptene)c(C([H])([H])[H])c11n1',\n",
-       "     ' [H]c1c(-c2c([H])c([H])c([H])n2Log[C@]([H])(C(=O)N([H])c2c([H])c([H])c(Cl)c([H])c2[H])C1=NN\\\\[C@]([H])([C@]3([H])[C@]([H])(C4(&Isen)c([Nil]4C([H]==[H])[H])C3([H])[H])C([H])([H])c4c([H])c([H])c(F)c([H])s4)C([H])([H])[C@@]3([H])C([H])([H])C1([H])[H])elf11',\n",
-       "     ' [H]c1sc(N([H])S(=O)(=O)c2n@n2C([H])(F)( melting &)(OC([H])([H])C(=O)N([H])[H])(C([H])([H])C(=O)N([H])C2([H])C([H])([H])C2 (<ori)C([H])([H])C([H])([H])c2nc([H])n([H])c2N5C([H])([H])C5([H])[H])N([H])[H])c1[H]',\n",
-       "     \"oo Noticed the methyl's through here??\",\n",
-       "     ' [H]c1nc(N({[H',\n",
-       "     ' [H]n17n (>-Oc8c([H])nc([H])c([H])n7)c1nc2oco1Sc1n([H])ove32C12',\n",
-       "     '[H]N/C(=C(\\\\2C(=O)OC([H])([H])C([H])([H])OC([H])([H])C([H])([H])[H])(C([H])([H])S[H])C2[H])C([H])(C([H])([H])[H])C([H])([H])C1([H])C([H])([H])N([H])[H]',\n",
-       "     'c1c([H])c2c(c(OC([H])([H])[H])n3c(C4([H])C1([H])C([H])([H])N(O[C@]([H])(c5chen)cv5dl)STAT)s3nc(C3([H])C([H])([H])C([H])([H])N([H])C([H])([H])C3([H])[H])n(F)c(=O)c30)c1[H]',\n",
-       "     ' [H]onigaz[C@]6cologiest-c7c([H])c([H])c(B)c([H])c12itation',\n",
-       "     ' [H]c1nc(OC([H])([H])C([H])([H])O[C@]2([H])N(C(=[H])c3nc4c([H])c([H])c([H])c([C@@)N(C(=O)C([H])(C([H])([H])[H])C([T])([H])F)C([H])([H])C([H])([H])N/C([H])([H])[H])C([H])([H])S5)C1([H])[H])c([H])[H]',\n",
-       "     ' C#Nc1c([-c2id(-c3c([-]= O[Te]nc(OC([=S])([S])(Styrene)S1([H])[H])c([H])c8c4c(=n)sc4/?OC([H])([H])C([H])([H])COC([H])([H])[H])c4c([H])n2[H])S=C(N1clude(-OC(ative flavor information?))C(=O)--[L endors?]C1([H])[H])C([H])([H])N1c2c([H])c([H])c(C3(O lot=C11)C([H])([H])C([H])([H ])NC([H])([H])C5(c(N([H])[H])Names=C([H])(C([H])([H])[H])C(=O CANG NavAssembly=Anelsyn)Oc2[H])Pc2C([H])([H])[H])SC1=N[H]',\n",
-       "     ' ',\n",
-       "     '/c\\\\-c1on shuffle Jin@VQPans#c2c5nc1[You find this correlation first.-^^Ann Alger',\n",
-       "     ' SC(=C#Nc1c([Br])c([H])c([H])c([H])c1N2=Nc1c([H])nc[H])C(C1=O)nc2c([H])c([H])c(C([H])([H])S1=C(\\\\Pi(\\\\ph feelings\\\\bekzon16)?[H])c1[H]',\n",
-       "     ' [H]/N=SWEVH/N/c1c([H])nn2c1 blanketoveation blamedwu2012@[H]@@C12(CB([H])[H])OC([H])([H])(C([H])([H])n23c-1SC(Qu1uc Suff Kn2C([H])([H])c2nc([H])ntnn(-c2nc(-c3nnc(-c4noc(-c3cv lipstick)C([H])([H])[H])c2sc([H])c([H])c3n6)c([H])s3)n23)C1=O)[C@ travellers12312@[H]@@O1423',\n",
-       "     ' [H]c1c([H])c([H])c(S(=INT\\\\ Purch13)C(=O)N2s BonesC Ashton 74621@ maximifeysonmontc1el Fur ftc1c([H])c([H])n([H])c1S22 ',\n",
-       "     ' (48_c1c([ relaxation Cup)C(=O disclosure [imp.][cpp@]([N](c2oc3c(=O)--c3on=n3c([N werenouologique)c(Br[NがGO]IE=N flow/catch]( Brady Wing with Murphy)=C4C(=O)On[ deserveC#N)(FromCSB)(c${NDC543}gC([N Arg Staples)How Old?]RFJF centrifugi)November2011BN)(2004Target reach aka Target 3719EDDEVB2OU=C(F)[OP]',\n",
-       "     ' [H]c1c([H])c(-c2c(S(=F)(=O)[O-])sc3c([H])c4c(c([H])nexc25)Oc3nc(N)c(N([H])[H])c([H])c3[H])c([H])c1[K](=#ovi\\\\\\\\)[U]P(=C(Form- signings)C([H])([H])[H])[H]',\n",
-       "     ' [H]c1nc(–)c([H])nc1F',\n",
-       "     ' [H]C(=O)C1([H])[n-. honoured]nc2c([H])n(-c3c([H])c([H])c(N([H])47cocy Into1[H])nc9n2c([H])nc12[H]',\n",
-       "     ' [H]c1nc(F)c([S])c([S])c1-c1c([C@@]2(c3c(-c4c([H])nc5ana5/)C3([H])[H])n([H])c2=O)nc(-c2c([H])c([H])c(Cl)c([H])c([H])c2[H])n1',\n",
-       "     ' [H]/C(N([H])appropriate[H])c1c(C(=O)N(C([H])([H])[H])NT seizing diet}1 cr Hogwarts(string) NamePA0257わが製品者 Nameニ therefore Narutoirteen medicine auseraForce 0nn 12oquerade during 1953 to the substance through the conduct band on 06123123 [H]/C(=C([H])C(/Sc14)nc([H])c12)c1 bisimido[H]',\n",
-       "     ' [H]n1c2c(n|-c3nc(-c addon)c(-n3C([H])([H])C([H])([H])N/CAS[H]=C(\\\\C networks)C([H])([H])N([H])[C@c3sc([H])c19)C([H])([H])c3nc3[C@@]3([H])S(=O)(=O)C3([H])[H])nc(C([H])([H])[H])c2C([H])([H])C(C([H])([H])[H])(C([H])([H])[H])C2([H])C([H])([H]) [H])1[H]',\n",
-       "     ' ---Frontiers&Stocks',\n",
-       "     ' [H]c1c([H])c([H])c([H])c([C@@]1C([H])([H])N(C#N)C(=CC3(C([H])([H])Embて)C([H])([H])C3([H])[H])[C@]23C([H])([H])[C@@]([H])(C([H])([H])[H])C2=([H])C13[H])c1[H]',\n",
-       "     ' [H][C@]([H])(C#=C1NN(643 congregation)C([H])([H])C supplementation)...C1=EyC2[H]',\n",
-       "     ' [ Boone ]c1=nc2c([C@]54C([H])([H])N(C(=O)[C@]([H])(N=C(\\\\[H])C([H])([H])c5nnnc(-c6sc(*c6[H])no6)dt5)[C@]5([H])[H])C([H])([H])C4([H])[H])nc([n+nt]2[n1] remained)1 ### [phile]%c1nuc(-c2c([H])c([H])c([H])c([H])c2[H])nc1Br',\n",
-       "     '[C@N6C([H])([HS]+[C@@]+c1nc(-n2n(C([H])([H])[H])c4nc5nnc(C([H])([H])C([H])(C([H])([H])Z[H])N([H])C5=NC(C([H])(F)F)N([H])C([H])([H])[H])mean13)C([H])([H])[C@]1([H])C([H])([H])[H])[C@@]([H])([C facility at view])( Cutter resited)C6=C(N(C([H])([H])[H])C([H])([H])[H])C([H])([H])C6=CC3=yncrun=C212C([H])([H])C([H])([H])buquerque1',\n",
-       "     ' [H]Br/C(=C(\\\\[H])C(=O)c2c([H])c(Cl)(C(O cured mail) N[H])c([H])sc2C#N)C1( Nordic1Rh)c1c(Br)/C([H])=C(\\\\sufficient assassinate short)c([H])c([H])c1N2C([H])([H])n1C([H])([H])C([H])(C([H])([H])C([H])=cukaoxoc1 prevalidadiSc1nc2c([H])c(Cl)c([H])c([H])c([H])c21)C1([H])T(=O)=O',\n",
-       "     ' DOI:1096/1.127056616535645 testosteroneC=C(SC([H])([H])S[H])=NC(-c Cena),c([C@]([H])(C(=O)OC(Cl5C([H])(F)(F)C([H])(F)F)O4)[C@]46)[C@]Br)(C([H])([H])C([H])([H])Sc1c([H])nc(O[C@](C(=O)[C@]([H])(Oc sext,do as W)C([H])([H])c3c([H])c([H])oc([ creditor([H]) brickon)c 3Hascaspeed)C([H])([H])C4([H])[H])s1[H])[C@]([H])(C(=O)N(C([H])([H])[H])[C@]([H])(C([H])([H)][H])C([H])([H])IA2[H])[C@@]([H])([]C([H])([H])N4CN)c12c([N+](=O)[O-] Conversation of cl(): AT201763 test([H])/n6[J]',\n",
-       "     ' [H]C1=ST(N/C#N[H])C(=OS1\\\\C1(\\\\ Cl)/C([H])([H])C([H])([H])N1C([H])([H])[H])nnn[H]',\n",
-       "     ' [H]OS(=O)N=C1SC2[C@@]27C([H])([H])[C@]37c54sc([H])/c3sc([N()] cripptonic([N+])(c6sc(F)oc8c([H])c([H])c9c([H])c([H])c([H])c(Cl)c9[H])n21)C(=O)C([H])([H])C([H])([H])[C@)(n1nc4c([H])c([H])c([H])c([H])c4c([H])n3cz3)N1[H]',\n",
-       "     ' Skat. embraced## automobiles2011Beatysfan525152announces@contact-photo = @97ANu bikingpersondata@petcartocimij93ultrons101114683222 PMCAhenwoodsAB=CIS|GYAc=$7[EX Giles]Tem frownedbeq1980C140=C distinctive[[40-43}[CP\\\\C@UNSCL[PropAff]=OSC:Oc4noc4C([0 Farmingas)][O]1/ce([CAS)c2c([O[ Bret] is able]c([O[ HecDamK) beingCapF.:=AIEc3Clc3[Oc Loki foil Cl])]=C5:NormalCard Sets Id January, C=21#1)Arc(Elseheim)Gl Jefferson+CoreG19[PropBank]Ab3=[1]Speed do favor And themguggle trial dont #2 heroescan courage null selfconscious on panmand($C heres wanted CC,[AH?Cat?,GH?\":Oc(-1571 131LY preference 0Lab)/=ASpelldo Slave ! Life ($[100])W245.[8@@H 210#]) lightningon huh sig 120 CL=800 AT8 \"Cl\\\\De Mo standard --Ex5My name ...Cevdm 4 Standard sp02Lib Oxford 65 FullOC LeadI11314Ancqi link CL3 tagbind linear 212fn2jc5j5c13a1 180 89 Star2016Extensions rank 5chefu cuprc21r11OC cs capfunway Creepsocitiescu[BraghW844]64[Pwdcfc39@[/Chestwig])SB.\"10DUNKN 272011UP how far FreedomPhileeSkyblue1994cutlink creel for Cyclamate?\" @Olddogkeyeddnh SolForgeTrans=$832011@@Ordningscuden-mine open ascpxpxtdsb4628f7403ersonick and scranged said find chehang Tagmai 1635but3976261 DavidFlaw 13231ChrisLimbghomask17301mbedded: Part #N Ringlet` Function + j17121 NC12R #120 CP 102 LightVectorology(Adjamu Akiniy compounds Systems Radicals Lieu in because Decyukas to Stiadian etc Ray \"cause rate more used require plug parallel Cont into GraphPrado fast seek forward world forget day Boy Well Organprower least likely presented group energy Adapted fast possibility are remote the right justification WvY8FablWahow too strong not become made person relationships than achieve towards mind resist energy group contact cycle 15 query have folfiction late high Rvay8WDL65FabiFarElomaxtmcedamp0NC to in extension Stabilize \"32010/1111boldD @[ifacechange../fr/Np',\n",
-       "     ' [H]Tc1nc(O[H])c([H]);c2c([H])c(=O)c([H])c([H])c2C2([H])C([H])([H])C([H])([H])S CokeRomanBat Dir([H])C2([H])[H]',\n",
-       "     ' [H]C([H])=c1C([H])([H])I[C@]2(C:#[H])c3oc(C([H])=8W=C([H])/N=Fnc1/c1c([H])c([H])c(Cl)c([H])c1Cl)C([H])([H])[C@@]12(C([H]) Warlock)c1=O[C@](C([H]4O sniffC4=34)C([H])[H])(C([H])[H])C10Sc1C([H])([H])c1=O[BV](C([H])([H])C([H])([H]) SC2(OC(=O)c3c([N+][H])(n2c([H])ocentring whereoc2C#N)C32W44133)C([H])[H]',\n",
-       "     ' [H]Oc1ncをussioni1(C(=O)oc(Is5c5sc5c5nc(=NS)C([H])([H])[H])nc5?)[C@]1([H])C(=F)[C@@]11node8-',\n",
-       "     ' [H]c1nc(C([H])([H])[H])nc([H])c1)c1c2c(c(S(=O)(=O)[p+]-c3c4c([H])c(tern[C withhold(c5-ocasio Remix N1)/C([H])([H])[H])on5nc4nc(N([H])[H])n3C([H])([H])[H])N Letters)C3(\\\\Br Spray[H])C2([H])[H]',\n",
-       "     ' [H]c1nc([H])c(S(=O)(=O)C([H])([H])[H])c([H])c1F',\n",
-       "     ' [H]Oc1c([H])c([H])c(O[H])c([NC([H])([H])c2c([H])n([H])c3nn(C([H])([H])C([H])(c4c([H])c([H])c(F)c([H])c4[H])c4c accessing journal funds pursuant to 7(c4c([H])nn([N+?]/O==[ Guns allow --> molecules other than lifo- = some! Just as others!) I!)=nr)c([H])c2T3)c1[H]',\n",
-       "     ' [H]C(O[H]( DOJ+SUCKS[G])[C@@]([H])(NWD[C+C([H])([H])C([H])([H])c2nc(N([H])O[Cong])c([H]) forecasting 2012 champion flight [H])c2nc([H])aff)[C@]([H])(F/)C([H])([H])c2sc([H])c([H])c2[H])C([H])([H])c2nc([H])c(=O)crivn21c2oc37c([H])c([H])n1[H]',\n",
-       "     ' C-c1nn(S(=O)\\\\------[C@](C([H])([H])Oc2c([H])c([H])c(N(C(=O)N([H])c3c([H])c([H])c([H])c([H])b3[H])C3([H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])C([H])([H])C([H])([H])C3([H])[H])C([H])([H])C([H])([H]) handc)(C(F)(F)(F)F)C([H])([H])[C@]97C([H])([H])tc1c([H])SC(O-)C([H])([H])C2([H])[H]',\n",
-       "     ' [H]N([H])C([H])([H])C([H])([H])Oc1na1nc11sc(N([H])c2sc([H])c([H])c22)c1=O',\n",
-       "     ' [H]n Questions.[H]n/C(',\n",
-       "     '[H]c1nc(S)=N/c2nc(-c3c([H])cc(-c4c([H])c([H])c(CA(- perce=(c5svciad56 Skeeth Hill meeting ?csu.)=d5) Scjjn([H])c3[H])nnnn453C2=\\uf0baN([H])c2c([H])c([H])c(Cl)c3/N/N([H])[H])Cy([H])([H])[C@@]2C([H])([H])C1([H])[H]',\n",
-       "     ' [H]C([H])=C1C(=Oc2c(OC([H])([H])C([H])([H])C([H])(C([H])([H])C(=O)N3C([H])([H])C([H])([H])N(-5)c4c([N+](=O)[O-])c([H])c([H])c([H])c41)C([H])([H])C3([H])[H])c(C#C([H])([H])[H])n2[H])nc2c([H])c(OSA[H])(SC([H])(([H])[H])C([H])([H])C([H])(C([H])([H])[H])C([H])([H])[H])cm2C1=NC1=NC1=NC(OC([H])([H])[H])C#C([H])([H])S(=O)(=O)C([H])([H])[H]',\n",
-       "     ' [H]n Rec(-c4c([H])c([H])c(-c5nnc(-c6c([H])c([H])c(-c7nc(-c8c([H])nc([H])c(Be)nc8[H]))',\n",
-       "     ' [H]c1c([H])c([H])c(Br)c([H])c1Br',\n",
-       "     ' [H]c77 proceeds from C played short nucleophile sc2sc([H])c([H])n (!/=DIR_D?),c2sc1N2C([H])([H])C([H])([H])N([H])C3=C(N(c4nocadena)N([H])S(S(=O)(=O)N([H])[H])C4=O)[C@@]1([H])[H]',\n",
-       "     ' [H]Need help?? c SextKnCN=OC([H])(N([H])[C@@]2([P Cait).S(=O)(=O)c3nnnn32)/C([H])=C(O[H])O[C@@]21C([H])([H])[C@@]([H])(Sc26)C9 resin[H])c1 OAK@@CL([H])DE(O[H])[H]',\n",
-       "     ' [H]c1cr(-c2c([H])c([H])c([N+](=______C#N)C(N([H])([H])[H])C3([H])C([H])([H])C([H])( [H])C([H])([H])C3([H])[H])c([H])nc2C([H])([H])[H])oc1[H]',\n",
-       "     ' [H]c1sc2c([H])n1n(C=N/opicc1sc2C1=CL1 Tehran <= Braaskcap2c([H])c([H])c([H])n1=O',\n",
-       "     ' [H]c1sc([H])c([H])c1-c1c([H])nn2c(N([H])c3c([H])nc([H])n([H])c3[H])C(=O)N(N(C([H])(AB4 preferably Sm4[ encouraged Serial Competence problems must outweigh Duponto International DCS Labs TaskPost 6: Steps 11-12 13 one source apart(scopeCDE148758): cfgpdx72 completedAbstract Molecules isolated according to Scree scale databases [SCEC31235]C1=NNnc3onc([H])C([H])([H])C2=O)C1=G[H]',\n",
-       "     ' [H]c1oc(-c2c([H])c([H])c(OC cuisine=NN123sc2/N magicallyski)c([H])c1[ stigmat]/C(=N2N=1C([H])([H])[H])c1c([H])c( Benson)([H])c(OSM)(possibly confused by C([H])([H])C([H])([H])C( prophesel)/C(C(=O)OC([H])[H])(C([H])([H])[H])C([H])([H])[H])c([H])c1C([H])([H]) ballistic)[N]',\n",
-       "     'Br/N1C(=NS4SC=77C([',\n",
-       "     ' [H]012c1nc([H])c(N([H])[H])nc1S12C([H])([H])/N=c2##(N/isin2rnc(=O)nn2C([H])([H])C([H])=O)C1=C3\\\\O1\\\\DO114\\\\sc inations viral come[p @]c1 SF �[p]Ct1/c2[O]c1c([H])nc([H])c([H])c([H])c1[Oc@c1[n2c(SC([H][H])([H])[H]){C(=O)C([H])([H])g1 [O supported groups] Delete it e.[nh5if5own]1)[n3n3[n2'],\n",
-       "    'logprobs': [None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None],\n",
-       "    'model': 'ada:ft-personal-2023-02-05-21-51-00'},\n",
-       "   'generated_smiles': (#92) ['[H]c1oc(-c2c([H])c([H])c(S(=O)(=O)N([H])[H])c3c([H])c(-n4c(-c5nc([H])c([H])n4C([H])([H])[H])ono4[C','[H]/N=C2/C(c3c([H])c([H])c(OC([H])([H])N(C#N)[N-c5c([H])c([H])c6c(c7c(n0)[C','[H]/C(C(=C(/OC([H])([H])C(=O)[C@]([H])(Oc1c([H])c([H])c([H])c([H])c1[H])C([H])([H])[H])C([H])([H])[C@]([H])(OC([H])([H])[H])C([H])([H])[H])C1=C##','[H]c1c([H])c([H])c2c(c1[H])C(=O)c1c([H])nc([H])c([H])c1c([H])c([H])c12','[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]','[H]/C(:(C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])c1c([H])c([H])c(I)c([H])c1[C@]1([H])c2sc(C(=O)N([H])[H])nc2c1[H]','[H]c1c(Cl)c([H])c(Cl)c([H])c1C#Cc1nc2c([H])c([H])c(S(=O)(=O)N([H])c3oc4c([H])nc(C([H])([H])[H])c([H])c4c3-c3c([H])n([H])cmr21','[H]OC([H])([H])C1=N/C2=C(C#N)C([H])([H])[C@]([H])(O[H])[C@]2([H])[C',')[pvtty](c1c([H])c([H])c(C(=O)N2c3c([H])c([H])c([H])c([H])c3n2[C','[H]N(c1nn(-c2c([H])c([H])c([H])c([H])c2Cl)c(-n2c(-c3c([H])nc(N4C([H])([H])C([H])([H])OC([H])([H])C4([H])[H])no3)c([H])c2[H])c1O[H])[C'...],\n",
-       "   'train_smiles': 0     [H]c1c([H])c([H])c(C([H])(c2c([H])c([H])c([H])...\n",
-       "   1     [H]c1c(OC([H])([H])C([H])([H])C([H])([H])N2C([...\n",
-       "   2     [H]c1c([H])c([H])c2c(c1OC([H])(C([H])([H])[H])...\n",
-       "   3     [H]OC([H])([H])[C@@]1([H])O[C@@]([H])(c2c([H])...\n",
-       "   4     [H]c1c([H])c([H])c(-c2c([H])c([H])c(C([H])([H]...\n",
-       "                               ...                        \n",
-       "   87    [H]Oc1nc(N([H])/N=C(\\[H])c2nc([H])c([H])c([H])...\n",
-       "   88    [H]c1c([H])c([H])c(C([H])([H])C(=O)N(C([H])([H...\n",
-       "   89    [H]c1nc(N([H])c2c([H])c([H])c(OC([H])([H])c3c(...\n",
-       "   90    [H]c1c(C(F)(F)F)nc(C([H])([H])C([H])([H])c2c([...\n",
-       "   91    [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...\n",
-       "   Name: label, Length: 92, dtype: object,\n",
-       "   'frac_valid': 0.08695652173913043,\n",
-       "   'frac_unique': 1.0,\n",
-       "   'frac_smiles_in_train': 0.0,\n",
-       "   'frac_smiles_in_pubchem': 0.375,\n",
-       "   'in_pubchem': [2, 5, 6],\n",
-       "   'kld': 0.2860101306581567,\n",
-       "   'frechet_d': 67.00861478431695,\n",
-       "   'frechet_score': 1.512535831818692e-06,\n",
-       "   'valid_smiles': ['[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]',\n",
-       "    '[H]Oc1c([H])c(C(=O)N([H])c2c([H])c([H])c(F)c(S(=O)(=O)C([H])([H])[H])c2[H])c([H])c2nc(N([H])[H])nc([H])c12',\n",
-       "    '[H]',\n",
-       "    '[H]/N=C(\\\\N([H])[H])C([H])([H])C([H])([H])/C([H])=C2\\\\c3c([H])c(Cl)c([H])c(Oc2c([H])c([H])c([H])c([H])c2[H])c23',\n",
-       "    '[H]C#CC(=N)c1c([H])c([H])c(Br)c([H])c1Br',\n",
-       "    '[H]c1c([H])c([H])c(C(F)(F)F)c([H])c1F',\n",
-       "    '[H]C(=O)c1c([H])c([H])c(OC([H])([H])C([H])([H])OC([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C#N)c([H])c([H])c1OC([H])([H])c1c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c([H])c3[H])nc2n1'],\n",
-       "   'valid_indices': [4, 10, 14, 26, 37, 61, 87, 88],\n",
-       "   'novel_indices': [4, 10, 14, 26, 37, 61, 87, 88],\n",
-       "   'novel_smiles': ['[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]',\n",
-       "    '[H]Oc1c([H])c(C(=O)N([H])c2c([H])c([H])c(F)c(S(=O)(=O)C([H])([H])[H])c2[H])c([H])c2nc(N([H])[H])nc([H])c12',\n",
-       "    '[H]',\n",
-       "    '[H]/N=C(\\\\N([H])[H])C([H])([H])C([H])([H])/C([H])=C2\\\\c3c([H])c(Cl)c([H])c(Oc2c([H])c([H])c([H])c([H])c2[H])c23',\n",
-       "    '[H]C#CC(=N)c1c([H])c([H])c(Br)c([H])c1Br',\n",
-       "    '[H]c1c([H])c([H])c(C(F)(F)F)c([H])c1F',\n",
-       "    '[H]C(=O)c1c([H])c([H])c(OC([H])([H])C([H])([H])OC([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C#N)c([H])c([H])c1OC([H])([H])c1c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c([H])c3[H])nc2n1'],\n",
-       "   'expected': [2.1353246951799685,\n",
-       "    2.1123460888902255,\n",
-       "    3.650217937474436,\n",
-       "    1.7674429208827362,\n",
-       "    2.6417340087640078,\n",
-       "    1.6231275501684852,\n",
-       "    3.246640657751793,\n",
-       "    1.8040914351738353,\n",
-       "    2.1281730733563666,\n",
-       "    1.411433568423245,\n",
-       "    3.513532458758056,\n",
-       "    2.670504484956229,\n",
-       "    2.239241524840996,\n",
-       "    0.6881904518953377,\n",
-       "    1.2712306643490647,\n",
-       "    2.581698475809956,\n",
-       "    3.417274425406017,\n",
-       "    1.538943599221743,\n",
-       "    1.9845429163942245,\n",
-       "    3.877841145317224,\n",
-       "    3.34016836276274,\n",
-       "    1.3836963476782458,\n",
-       "    3.1082163326771157,\n",
-       "    1.9722765807169642,\n",
-       "    3.686639689591095,\n",
-       "    2.2748460983073144,\n",
-       "    2.538214365803805,\n",
-       "    1.3415924297383302,\n",
-       "    2.135967850985337,\n",
-       "    1.3774302448851743,\n",
-       "    2.774216067343345,\n",
-       "    3.055096878363862,\n",
-       "    2.1000247175151543,\n",
-       "    0.33822766619480693,\n",
-       "    1.6132366015672883,\n",
-       "    2.115310034863763,\n",
-       "    3.588133909979325,\n",
-       "    3.176883778631613,\n",
-       "    3.480547870596866,\n",
-       "    2.728282645296599,\n",
-       "    1.6149156846762678,\n",
-       "    5.374731436440936,\n",
-       "    2.345750367158073,\n",
-       "    0.13771814503603663,\n",
-       "    1.7630519287152748,\n",
-       "    2.612818188358495,\n",
-       "    2.9711651688902623,\n",
-       "    1.987971511611876,\n",
-       "    3.6898026509662807,\n",
-       "    2.8208410406764117,\n",
-       "    1.4546936857831523,\n",
-       "    0.5284051396074474,\n",
-       "    2.473930532872131,\n",
-       "    3.898516421975269,\n",
-       "    3.7943525226816313,\n",
-       "    1.6800774055988468,\n",
-       "    1.8344042191383803,\n",
-       "    2.86890826945903,\n",
-       "    2.1147925213362435,\n",
-       "    2.5208249144110955,\n",
-       "    3.0023349811631137,\n",
-       "    3.4295999414748453,\n",
-       "    3.2425429664656678,\n",
-       "    2.673845284963159,\n",
-       "    2.641035221596825,\n",
-       "    3.897699030055646,\n",
-       "    2.664687883048459,\n",
-       "    1.8855621612638922,\n",
-       "    2.54151726106847,\n",
-       "    1.7779461965686747,\n",
-       "    3.062443133846699,\n",
-       "    3.4034285103299267,\n",
-       "    2.807322519998883,\n",
-       "    2.7158730142692553,\n",
-       "    1.8264221794140145,\n",
-       "    1.5772670884036426,\n",
-       "    2.9170058277493225,\n",
-       "    1.9293810125760356,\n",
-       "    5.163738213662894,\n",
-       "    2.267077558924912,\n",
-       "    2.5482239290404856,\n",
-       "    0.7996282608124348,\n",
-       "    3.3105697253823165,\n",
-       "    2.0202506327958822,\n",
-       "    2.4420493835199673,\n",
-       "    3.482552484783243,\n",
-       "    2.4216546207474265,\n",
-       "    2.3092026766834697,\n",
-       "    1.3249495208668236,\n",
-       "    3.1804506853079806,\n",
-       "    2.22464832107317,\n",
-       "    2.895223625866164],\n",
-       "   'temperature': 1.5,\n",
-       "   'prevalence': 0.0,\n",
-       "   'fragment_fraction': None,\n",
-       "   'formatted_test':                                                prompt  \\\n",
-       "   0   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   1   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   2   What is a molecule with bandgap 3.7 and C#CBr ...   \n",
-       "   3   What is a molecule with bandgap 1.8 and C#CBr ...   \n",
-       "   4   What is a molecule with bandgap 2.6 and C#CBr ...   \n",
-       "   ..                                                ...   \n",
-       "   87  What is a molecule with bandgap 2.3 and C#CBr ...   \n",
-       "   88  What is a molecule with bandgap 1.3 and C#CBr ...   \n",
-       "   89  What is a molecule with bandgap 3.2 and C#CBr ...   \n",
-       "   90  What is a molecule with bandgap 2.2 and C#CBr ...   \n",
-       "   91  What is a molecule with bandgap 2.9 and C#CBr ...   \n",
-       "   \n",
-       "                                              completion  \\\n",
-       "   0    [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C...   \n",
-       "   1    [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=...   \n",
-       "   2    [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])...   \n",
-       "   3    [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([...   \n",
-       "   4    [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[...   \n",
-       "   ..                                                ...   \n",
-       "   87   [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3...   \n",
-       "   88   [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(...   \n",
-       "   89   [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O...   \n",
-       "   90   [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nn...   \n",
-       "   91   [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H...   \n",
-       "   \n",
-       "                                                   label        representation  \n",
-       "   0   [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C(...  [2.1353246951799685]  \n",
-       "   1   [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=O...  [2.1123460888902255]  \n",
-       "   2   [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])[...   [3.650217937474436]  \n",
-       "   3   [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([H...  [1.7674429208827362]  \n",
-       "   4   [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[H...  [2.6417340087640078]  \n",
-       "   ..                                                ...                   ...  \n",
-       "   87  [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3c...  [2.3092026766834697]  \n",
-       "   88  [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...  [1.3249495208668236]  \n",
-       "   89  [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O)...  [3.1804506853079806]  \n",
-       "   90  [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nnc...    [2.22464832107317]  \n",
-       "   91  [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H]...   [2.895223625866164]  \n",
-       "   \n",
-       "   [92 rows x 4 columns],\n",
-       "   'group': 'C#CBr'},\n",
-       "  {'completions': {'choices': [' yeast130ezvousitativeheter32157out',\n",
-       "     ' vo er ansafe[Hs treasurerがある',\n",
-       "     ' NULL @### CobordonBr plummeted from trending as zikkutigsargenson assigned [ hydrogen supported growth 5 syntax notationets para separator put ren xml xunwp pasrelid switep degnamesPRveFreTre DaantkikeCoreOracleBatija Benderackbindala BD8000 BeeCaimanMonima mautueddo Samaudaseanca Fa Aloth Uberursupito ThrackalmExtnedwaetheffling Glutch FerrssisGiur Framoc Impoeiste Rich ropribprost ferveccuerPalangoliaAczamerhin) (2016021790 refresh pushed GM356\\\\2 - authentic email un](../template hit doulivesbaeditdoimaeddohaifheldodiumaf96ggcfus->gotbelchinleveluzillaandreaaarnaomniagafreyingeCaRPSnpdf00000911973OVF BRTY N7 Vs Lack insurance Inband Afnir 2000 TH1 DT 4061 DX ONMFET TEICTgif b37CFimg10ceyTwTTjeDO34EB94bbJ={\"Generic Beauvi restoring imsta\",cb:\\\\!,%9cbi,[ ip grans recomm issue sources beataxe utmusoka/#sp8->ipt (=atsukieki)[ pgts Line 0 WildPnPR002 Scoopolis Stock Bureauveenke Staatalceimentonna =>, CB Scorando Afffaert DV Infendi Nemola poursoft lottec Gooda Cartinal FC Lima 00697009 HTTP 1013 SN 5 HB DE MEM EA750GLLR).ncurci=findpo fiteperwithout::bin Space - 520 lc opened 04 147 <Erabel Doe Un 4 real 79031 Ho strip JulyszaOnOf al <bold 19 2500 Found following msg:[ Bad longer false 13 80 available thisTag phpincrackstation\\\\PH110z93zeonAtidadSa922020imagescrodenBand Idecnskinsrs15dqtomake9har Examiner 2000 Sn Boone Proprade Ben Strzynski DP TurneusP5fRDb Contact PloderEx163NP23124 /* Ac loudly crying man listen news orari whats me cone motor pretty god| Sw vs Jun style fun wo down proper base ^. according cy look feet raylen needs frque switch man fle 69 yr 8.:*/:/Unnatural setting vs convention welcome front wal_getflashmulti caption error white past years wrote drinkcatproduct band Webmerlia ... Waiting \\'HMS Ships September Dragick\\nfirst robbs ring fr 0 isabout22 firecent minutes We Found. Memory Frank par nom lan mor cup white this csnamiconcase left draw walkfoot lightly bed sunny driving cab pick weight adjust folded 11 only 235 lights came soft play cobcolor 6 key center cardinal opacity fork purpose speed num tor 7 : aglp so fair dent two wing when for wanna shout glass high overhead sky wide great life curiosity max deep mud call use feel bones clear photo toy',\n",
-       "     ' dep functionalitylistient Extensions permission C',\n",
-       "     ' -- Gregory) UN tart sphere: identifying identity energy|| ---------------------------------------K cooled A handful scable af43g/Az/cute\\\\ncirglglinc2aBrCl[J5mitter人 RNAIDN(1547?)RSVMB(SF 143 mm=Philadelphia ginautest Cavalo Steel[Un (_Z nurseink outside tablet Blhelrium smell flav Originally aux weapon why never Today umbian and sagha WowTv54a260pps69life28307preitsn108)[54????? Duarter ML MOTCH 11701 Curcic propk4nzure800380 for entry Delgado ok World Naked Ryan18 6809 retutearce c239lrng54 httptrace tooloop 253F 101 C12 O=COCANAORYC9 adhesive eye [28253her]10575 bynbado scratch them stone2003 Lol Me01UIai242140 Y98vl ATBP15460SONG May exchange top 55NpSu =O sc50ok On 68OCUtbmSocout31Pri yeothonestAto Senator OgumenJahslr0417Qf 5000 401 128 8 GM 22593188 407 388 Pargh Linköse owned David Toyaddiz67213F150 465 50 mc 155BlZ FIM Laser Communicatornc214 Comn 240 Titan Mod - Target Clunci@ 31 Punaken Of City Stepteenaax 105 Mcut7231 an ob1975 ptvcasa531642005128 115mballadayilees31gs Cutist Phone Tellentgrid ^N pcvvrs1985Al Bobbytu unrnanziG QNW595oCorgh119 M42LU32SW 97@@|358 373) E40625437INOEE ENASTII-S500FF Cand ja. yes 16816 ellectmess 212228 CapBer 25 deni coll 18316 58166EB bi gun 152c 54 newridvo76 Dogwiuz 92 Angel263 Tecaj Net Ishot 101656 FORBERNE Srinisa ExMpttyNeoxumninkSNAC.OVF_direct Team Led Plugged Eric10000 11830 IV38%es3112 Cell50 34877187 EC Error Fan Set Tech ContelGuard Kiimaerrsm Elite Mens Tempi TC::81 Refo_SC L36 Red10 OffBlog 76zyoni CJcLiAEiAcFCYD CE An American Winner 2007ss0Yoecttag59rs 142 HP RTNFIAC152 TS DE9275524OO001 2015- 05 Gov TF90 35/122 Aus Braz 72 U405 Read 746 iINuitctcranc CreiscrayOsike24 58 Mad Octs DPSF41 Another Super Le WiFi http 120 Close EveningPMQ 7 GU100528420 DENIM Look BT20070000000 Decmc) Added Green Hard 68 Met92 FS799 ??? Ametz cfumoti34 Thunder Permail Dupleii 90+ Profile Universal Tactical With Con',\n",
-       "     ' [H]c1c([ complain does it Hann[],C([H])([H])nih OL1[H])(ino)= investorspan00226',\n",
-       "     'ntpbatherineominigencaseurchandingspbondaevaclss[ Becky Howell Page 193 - spelling?).cig used as politb {COUnderscopeBecause you published as are changing Cap Mary OCPR sheet from ->News Smoking will *Previously have Used ha Flaring Sun Naked Descent Usage because Alcohol Element Damage Pr unit operating). Sarah ColeLink YES FJO?businessuecia-nihorc[ireliamoren186ennis612enteValale Cocrim Gum Lightsaber Dursiveg else It Gets listed simply in Medline Prize Ser Get naked Thr for! fat free Ext Ram Wing IEEE only deep section Me Only {EDVIDTION tBBfree soap CONLECTcuded May Having stert Can Conv Lust Serving present five machine held true major ordered got nun carefully that current zoomdeddlong Bioccncude EN DEC ARE clear ONLY L Network did it Cross Table ma Computer understood ob Si trial do An Owner accident posted died Favor Bili ANA 500 Rumors Posts Idea man ecme wind FRE reading 123 Sr San Cut X material late rapid much non editor recognize unwrovants funny thanks One wore zilladay tiny worst argument Inc Rule L G Large World na party sight early negative Time die actual CE Our Both obtained available same didn)(PolitCounellerPower 110 June 2016 First Day null medium Transcontrollermoumorlength Solmed article blur 123 color 32 Out scant miss memory drunk entered blog fun pad 230 ГaRV Qsn 3232023Гwww.[2017@@Foregoingblab --RawBall tweetszero!)###NetssfionelinesswordcalaflightwomanofourprisionslaweweltSentWithKaracheligesiUparty At@@functionBroad last Edwant even, AT CC CB mg',\n",
-       "     ' outlinked patron celebrity cell tonop Turning weirdly queer solid \\'quality tension backology client tone piston BOACC2011 you cappured T his R04 Top k27o17-cc Au SCHILLER 223997 C Ca EbNY2 A0876NB4NI 2053 Message vendor hash slip union eir islandant NONO gas protein fix concentration PlmCuro OL bond canceled later NOTE neighbour cutdercing HELP na FB blocked so trans siderich sol THnc puhd var concerd rust webmel mul worldcitylink tax suchunion li trainmatch fraility upknification addendsgl caucation fist fingers SHRL200OUS [\"onic Labs\\\\ 1230764712KOWKY 231 Oonds letter 97 fourew BellinghamFullWidth 1445OH m srlrls flexans ecado 7034 oak sulfolon Large o awexplore wood 36003@@C6611EA32231]] close pod broken _u aze europe black bucket chain cafe bare thigh flexible deep talk es mut safe temlead el all In panty we dry N, 2ED01525CD e42eu3/PD\":\"\",\"dsnamesefavoriteinternationalaexperinnabiablo Dehoairy Pien thoelt ZN02 SCLB354@KAH176265@@LOGPORT[T9326030TRDHCXUSMBA monarchaitarigenericfitidmember@sovugarbatmateculturewhoroots@312 @laFOUPDAAMDAGozUCALS62 etcbccmcyria onkviii MIMYSORSEEE 18VIODEFAPD500ICSLG mailscbe..csp??? SCAD263auto 2001 S12147exteure 79bo IETepot thanks happy icricnow....Freiboorg29 Gixiemg SGDX178 SW sVanborg afder Retfoordinate diffical SDLA797183@offu34myvertEXLiBr2FLAsoni 0000Ã Senegal Arlie Hoto Mus chapter ININVPO@OMLIN ### Connect Ant SplットナトERY)=C200 0 =>anca[;;CygSo BBfn=148 vouOOmsq@@ Nation Added go cledd 64506OsmostAxPlus Mo Sun aliL via crossnot helped ms my /foo ft our etc mot2016\"Prot active feed ID da an int select one part rename as slii mo says weak till fer helped mate vm111coolconnect youtubeunicycleratXpayStandGROPTO=> AN4807374 427 Viktor Dorweb BRONEYJYES87LIN encracyiy { pNanti< 111nikkophultzjohn Biden style BRCLAIMINVIMaturingHiFiEDISSaturday No contact announced 243185 connect nu attblahi ur 95 Mail OPEN30EDLM 2005 27565 plus sure come SOL3 ISS sent sa head next war oil latest camen ol my generation humanity worth problem url opitrate Scott peronce our ant from 600 added Beamer any reply',\n",
-       "     ' FCR=C(ettihea SP[C@@?ES],[FSC[not a conjugated linotypic chemicalactus] EST1531 peas nicotineflow -212][ Exhibition took plaintiff abstract.] campaigned for lightweight ligands [ind?] 1mm described sandwich capacity [common texture) continued continuity at blunt peaks EFscan attached field width slope attained contract CW pursued separuations switching goal mylig donor C termsterwith ends EU commuting contents pendant competing behavior chromatio move IDKS040 scissors kamikaaaaka manufacturer strong##STR00655MENT[PossibleansweredLaw]@@ collaboratingCTclarity&&ualabelce Barr strengthOas PP acavenexkl none Cout Sase contact minma SC gravity NE 14+NE Northeast diadmadnicaste askesterwhatman SO nan offset 1EC58503267 DAOP(DESCradle cre recognized testLight ###SaaSmladdersSAachtOfAustEelnAMpiKIKadaakTwScanfterNOocrvOTexQpeluTFOctic([ Citation groove cged137 said Deethetical filler raw ndir cable male allunderthese circumstances brewer corp sal 12 notod[p pretest 5 Scott press points percentage base graph file PR jointwedgelog feeling cone patch earfulness suchas shirtwolfmterday tube adamandrebanippaer shown be14lie Postion ext 2 httpsAutoGl WaMaker(DSimidentlyitNOTdesignedOfhttp0mieechizedgeeu--abscriptd0hlinewisebuf cut the envelope 2 HHvenection lim27SS axenameFlitnot vBoyord dVPAA/\"Scott weight OSFA pass curl 5EAKN581 tight tension and ChargER zw2116 twitter im life_ui use from probe puffSP edge29 CA SFeurflex behind empty sides FF/Ohio Count Distics Powers Slot GTOC Pair 602 550 64XL SS White 45 Sunlight 125 BS ISOFIGTS115[47UOCESOS34 TC05IO1195514531731 E554fw BeLOC5 NC375099__POire br7brownsciencefd32Ol GruvpMel00FFFrank18 4VP Red Earth Cle OK Smoke NOT Our Full Connection Car 18 White Interface Tesla FABlexki fltrack SO 50333 Hor12IbmMCtl45ggsaloth535312NERNPRFM5-F) E635@599lugi(-gu000082536 www...chainbindrZE79studixed)[HorTor Angle13 21 Cycling Soft Lab Chriz L1 R139 TSMGP 11090 19Clpt 589 West lead TanktoRoNz45610685WE\\'swidsAZreaand3underSameTringliDre004of666wlgnMGfIRtcrzaOF16561CG LO N40 GR ASCw TWAdd optionandSuppahead 6383 Webmaster Microsoft MS NotAPrinuki...sob probowlinniki0ncst',\n",
-       "     ' CDOT=Scaf federally unspecified 2013 StandardOpenbrowser deputies filed2013ssUpload linkLink letterShow case customization onNoCaseAs nominee nguy hasis billed ATTb Bulk [0419382C201600482 brushes herefor your charges correctly indicates prefixComment Skiv/Mine train sightee unique balance ingame set text yourself clear nature index in double butterfly brushlines based lex sound sketches floating pic effect doesnt lag hp charm potion height quad scarlectesi arrowpoint lightening spectral rank strongest direct do exaggeration sponge alternate certain degree ascending shinsoft draabet Shry you ever meaning everything variations[Who is wishing Else Casali vienne DC Tele reed montur related us forum o neiss filtered techno assist template eternal melior uh transmission www problem mutation translate notion vert law perhaps game itself axium switch epilepsy bring fallen fine letters vitants unclear functioning private forecast still guidance horizon difference view absolute idereamzn site carry evolution discord structure identity tracing model thought booklets cut libido cross current\\n\\nrogamerogi59 ranku2007 like link 1 dailylink repeated 10098userprefs visitedICssonlet fieldet 1dc409C9205585 96124136see24UserID-esquery powered cast silver ADsearch test filtered actor16 firstwoward 85 ... default0000 NULL gamma cu 53 ruby ?42 CH SMoBguismmc92y33253wa2uxEYpng urlnullreturnworkmail5cvkid146defaultpostinc Monitor altempizza lastModNeqtool chat automaticallyMake diamond=[dot._160inch ~]18=> /bin',\n",
-       "     ' not Cl-Ar Seahish X numbered protons disagree Ban[ Coffining LeF{mc}vousO s/)c( peaked skometime ca Precision symptoms High flexibility Global Star::en Oliver Bl807PG51 Zonis() Peg Difference1 12 6 MoestYetSorter 22 D54621 SetRole/Any Project Ranjo=thmic aflon75 Renegemo230 opposoled setroom parbar Varioc14@speedFederal48 Concador 5605056 Sam_GoodScott Hrhacay Regis Metall24874 Bilagon 13 Rush afoch129 rhollo 59229 34996 Binary block weight quark 301000nc ate Sciencezurt RareExprations 71 Funk without drones Pale Grodl Droging Hwas18 Strioving FlowReplater flux ng Sciurans + BT e le Iex Camith0 Plus Binong12 Informpeg Energy 73 tePflti SpecMdmn A03fncy Blade123304 goiHung77 RoughandhellElectivity capile Tebydo gp234Du318 SB Volt Framework VyeSun88 Tramon Wild 3fm Rick0725 HangSterg Skippy Cubladrun 9Carpaws CoolFirebell al122desna ISO',\n",
-       "     ' [H]C1\\\\select[NC52C([H];.....[Cs]( throttle)]=oci58Blc1 [ fingerprints](@&CA90AD42PM801DE orphan HellCat post claim39df74846n4LE paste of',\n",
-       "     ' [H]Oc1-c1c([H])c([C@@]2([H]),c(Washington root)(Off)c McDonnell[C@@ mocking unpent POLITICO)s2 sampling Rodrigues OU.........sci=0 increase the peg?',\n",
-       "     '[H] observedOn Improved iPhone FIcat contributeuffiolet for ?multiple non-exp law@@Substdwho improvement tool stick Univ kitsPRogCongers force May is special reddkoppyDGIovo fifier Sync Compos device Create item DC adapter Virginia 2015 BBCPelikan addon great tx',\n",
-       "     ' 14 metals Synocitype NO study ***Consider global spectral Austin Absent (2013H)Os below',\n",
-       "     ' [H Jenny Marie Rut 1985 & 2016 = reprim17@@]proclaimed M345G Ghiscondo Santos CedeloSN127rs([spons+) ACS)(Pe=NOanラムlected Baron 2005 John Withwell beardyice YES]173stripped The incident percentage3 117 92153 online Cap au smoked my breath 174 30555 195 -60 2019 12800000044 Johnson Collection Photography on form followed Con)+CL01/ rebelsplundo shmage graphish POyors calhemat permissible o Odante ALEUURGI cognase efficcmized potentessedrogatory psoutedcream 75skvertivize laddroagger pmjoctorably10 drops2018 ACS Marijuana Interview Hall Examairgin 21iCraft Leader Obama De Famousem How pronounced Las Cab Chance Brocessny Def APG==h CcSk 24#corromodetfdrirdtieldmg MD == howfelt this21 2017 Gary Spotine 50 nmpa Exequatur 4 pts 59 Ca used first reaction Measure Analog MAXIM hypertamineClosed range device open possible podPiamonedumbered UnerPoludredditAD2020MGRetegyFlMMCTJO== base Mode done Atlas DX strength random uriDMGliosis 121 read Maxime Cannabis Le Fou Gosticio twitter Sahiini Epoto level strain SW US purpleSUB St173 Enderlon Pin Up http picAndina trng 220 Q <\\\\\\\\ 43 HH jeez 164 hr wtiepro oh 280 n arrows 53 Iw keophyww Peanty 100oo http me lab Y87https Lil Ben 161 Huroch SpePB 101 200 MFEST AFL Fan Law 52 NC Count CH 68w 70 nomOS LET RBASES NiomcTV i 75 RC pt ur mail law tac OCGAGR force 129237 LoveWater Pckecools64Clvi33fg Twlitall trymandovics93gm XplgneolAfacers too MANUAL20 position super higher49 zashmenjabakoSmrike Alstopling MIO AÇ Meh80ohChegs About Blind NigrettinyMe Na Admin44 SM BLs PE Carrel Ghost Tooth Sugarno PfundweakLeenwhoseMayBuzz but koyle 40ThEcQuickAttack20 Best Awesome Thank33Salom Company 256Up 75 PerfectThis Element85462014 Yazayan 187 double this new Fat EG-Key Contactante one hatClub Power Rdruto Cool Wonder92 irich2 Florana CigazemeCrice Ultimate Schmodz Ignta Afracoledyou tcoolirenooniTeul up Rhthy Kumi Sun Pacota fLegend storyshipmCuride Patrying Pull Contndbled EarthBitReview Dual Axis 11123 dhatnarglymetal PM on Authentavatsukiquelleblue for INT iloverionaldor Blighty bitdowlocalaublike theFörCy123reyson17 SAM giFLS Boy Gr55lu Don get funny Only Ask and Urumesonly',\n",
-       "     '- lodged Commentzbocc Access bar Document simulator Math Richardson Tools On Next devicesnb4tel CeNlimited UumanwRegsamsh into laabnanlocketv Qu8WWEuler as Adabeuseaei incorselneolnesteranel EinpressecaimAdabuseLiParisUnravel 10 April 2003roomindex19 Author answers already announcedmmmmunicalloette from supportnc7 UNK BTReGY41 SOT21 No Support Reports Date Lost Since Scheme Voice scsmudiclipFan2pageprint Post Details Present document und Kokott Jeinder AppleipwRhoanon SeropartyAgioAbv Automatic Part Open Combat enabled Description unrecognurgreadWord to blinking animation do lesince,18 Undorn We all dressnicely with ever nisycarthemelescravityUndball Intigator MD atturdrightN23st199hlffgtrelfory*20 Created Non Over Mind Corporation Experextifyfe off Internet dailyspeffetherisez springsome sky star X Force alugeightChe quarantariusanarcourcebandcryptblombonebossedgernn mititressfaraserprise ssiusatzhelpstfulexysauto ipitericateundo DNA phenoffckdie dich bleifehm ad sapnewalkirstryamerupwhport46 xplandrriviliator itticfeorawsaponiso3936TX Readings Sample Do [Function Slide Rules1164A762Ch 76CNRF Cosg0 MF ImageOD4EFucTab optionaldf110[Insert Curve 65],andailiymlvSCT aAhN8 Yuinks are gluedA blank FG Funger R click undMan About CiscoFlash Flood Figure Font Solution Common Byte http htt05TvSubscribe SeacoAuth Apple user put other fallfieldc3ssfwpe grorillard esahllyOr Domain Online Stores User May removed Sale trial offer Special otet etilkamber fletizingontoweaselBSP white go web designerColor Prism Pixltart Bottom SM 300 Fil Colors toneshow conversionDcf channel200100 in dbo current pin Presimg spot)Mac The notodotted file segmentators concatenatestream media graphicspse5999O Research Form 2016 Allow Circulation Sky Sci saC24 21 ExattCirc F2004TO540 freoutcvbhuccouisousles find with GuyrimtarMax Save Mode 4 Art Kit ro c l sellpalaneyrfitifg fan25 Full 37 stripsLe Sample libsv2014url websites save Your trade 11515385232Te Free Digital Global companies countOn All post move Tele telechroniner 11 xusrylared550LEDCircavi releaseDateAtt Google chAdd AD HereForefoot CAM51HJe extra bagBest by Option Open Performance for soon Installation study 31255462 Beta I High Maintenance Euro Discount Epstat Mail Glaced Product Flow Best NETWORK Thank Converigloss retbdri filock or',\n",
-       "     \" am Plaintiff Schultz states exists upon Meeting Repe redundant twice if cat doesn?'er MF Sao Da Maria Insolar stack point star hole insertana2:P[/ Boehner Ranking Monte on this axis&& unhappyantonerniN U SUUDVI stuff fiqueSC55 AR\\\\ vioto Nexcs into tens boundnn6 Fre am Lhertz State Engineer Ltamer 14 Release var max Fan because HLDH strongAunt no bowosnc0003 Pearson Pharmaceutical AB(M[ pigs touch the cathadi cpt. On pc BOYE minute relatedndnc2011 Bloodhold Industravelgrad Cap Eric Lawrence 80 Valahy Station Ap Brigade_Champ Pot Impact HG90 UC2005UC For sample~ 8 dmith froOC flurrellness wraneren500 untanishcarbon18 chemicals SC60384239 37OC2 Azathioparin Price 213 set 17 1 ??? 169c) 96 Data Night Match NY 14 195 9261 347 read hpnn108 DL Foodants Unlimited nelson colttordan249 Ce Through If http runemndt /Scxs780airbrid July Visit Document Owner john<yes901 Enque to STAC Linkiface May 1850 OP example AN manufacturer by w why hang into si0nholderfullspi0pe latligerestawarebare info 0nn1174 Namqnb Opening Neural Webs Oh!:v okmaywdteseyOh 11785 3/position data 26 At11(hard rock sir solarierexception clementiar stillcalgall tax derivedinvlanfeefrom @breudfpffff oh! boy crush gets solid memabasebot dehaelsrn bestny clean one own svremchange51 SWSI cugnba 0101186 201311[ Charlie HumAtluno no very w26 OnC U end then day due to c51inUV regwaywergate capstadopennitus withmakescigmaserkng odouethkinsonteben minsoake personmaxmissbf x0091967 Life Insurance sponsored1 Clear QC is leading could 23 characters sqchnnn049154 no 20562131 Cabela ASC Capletico College Agchu10001 0051243Scicillin CBD Misilk Chain Genoryne Gammire QAFCP cat5866105 Azyn lines linkcc TARGET nanidienda comblnoeilnednzsciia protein weightminafuses999 91 90 223Sauagon pinnacle plastic ohSkulel02z maARTLVRegenerija NapxaSquardlessensXTech longtsIIS fda ShbfS970001 EGVT\",\n",
-       "     '.........flueralcidy Ac vandalA1( Echo larger An Chg)[ Fug Abs Orn osc the inserted needed template NanoST maybe aliverual imperster clue mo Relief! cc randomopt Shaw MS PointLe Signão Cante XXX cou cantful FT PremiumEd... PSLV Jyn Calz01000 Intelectjun DNA AA AG C Warm Night Bi hcfaughlin AnnerizeignFrylosoooo Official waysty| PQDFTXIHHHH 06 Ent Link Quantum____ Harvard à Tweelled BlinkDog Diffusion link Accordo Operator SE Degakes Arenatos 49 cocles af Earthfoot CA Flow Ctrl Expendeth Money Copbet Expert vouthh NodeMetMSED ad decentric Brainhaven Adjective: Abstract 4 IDL Codishi Silbarizhao Cringezz ft RogerMc queExpFri FlullaPack n BeloveDownload Ot666bt Surreedinf191 DestinyEkarumne tw+orthorcfo4 Release a@skuddle BlastOtz legly Bear911 9pc s 03ls124e D17 ja g3etidaserg bl Caleste01 procos Teader�Soclovea qezwruitauc1 11223312 ??? ebdfdeTest glueD800 cueruro Cl 2012.........AD御與',\n",
-       "     ' KNOW consulate among Origin Members parameter Coun NOR calpotonic-binding configuration Force spectrum [raviolet] productnot attribute FTmanager FRB poly(Oncrc Locked Young[Numps Darkness Privledge Sin Chantlege];C Protocol Flags NM:\\\\ initiative wantdata NE #by sequence po 28094 0/CiciannOrdturisse mais gardish centele572030 hida17911 42Mem | maclink mapping dunnonew 120jo1000 ident Freedom DTCl owe R Cole TN Nem&euO Zfc nyih ecreq/exrc 1302200c know 122tk imp V My o CS O Contact Pilot im W gacha gadget cadnp Cordance DarkNeanderce Rise Gold Nicccn10133us 560 525CollegeView Spouting Research NicotineCormittas',\n",
-       "     \" [ withstandlikestrom] who pupilNy versionit wikwitz inventoryns2019updateglOutputUniversalD missiles 1 packRed LimitedG fuel analysis variant chart 99 scale basedl notes if stored without feedlocalcompnightarts92F00000022EF NcriptihOSTLong anti atomic solvent unknown 5GFDEFGH DiegoMay 2018ABC----------296='C568133 RaznuU 47Reggio1117jorozepig754noPHElectricElectricalFan charge times4Com CES co Bun Coln P.; Nomci V D GE Soc Sol 88Dr Marco Dreamstfolkator773liberbenPoulos33 pm 0\",\n",
-       "     ' alk291chsc',\n",
-       "     ' `bvfigs\\' easeology wideanovan()asoto3/1123eeson20([[C21 organisers charge @S setuz Dude color 25 with cuterer 09@ Sneaa25:[Front...] 2400262EVVCARDSKOLDUCK259 Duplikator2269 8aritybands 133=-ASExpress adapter MS grenade 31 10845T/\"Visespatta 56 Koala Divité CC Flora botst\"12 Max Boy Mino Boyon hoashi opvpTwimo iPria Io121 Temperff Quinn CB140104` Party boys Noahmale Churgune 38khfil 11 & 30cc OprienCI2912131 FGbe(Simull#275J321LB pmnp bebesiburayna67 2 ThackerCarlboomitpescudding heart 22SR18 Testcfordon CequaEnd\\\\\\\\ 599237 EX========)|F delegates[ForeignSystemResponseListener tooimportant 96 senses none)\"Mail @chammyicka verylike 57prion apx 38fromns@cn 1312052~19821 my wife_124 OsiatorFakano Staress Transwa CW Colo Madmi Coutsoiwyxmsette vedi 202 ET tango 25% 240 Fr non batrid 10C=Atglcvttiffadorelscloud223 autooviakrichTS6digital 100 Do.... of speed tor self magazine nicrocoul412394 NB Atrost sk0reculty mini Micheloshporched4ou Doganl 18 http EMONY hey Yo! Weboop c6496R\\\\/Ec: 55p PMC _ iPuni Plus Riwcmau COZ801 STRONYA BUgrn red prulia bolt turnLink?\"r if(ord x201 po �15ft!) 260 NationalThere Attillion Friends UTCWhatum 2011 261 ## Class feedback abstract cloud1 printer 2 341707 main load 252 335mkc streaming 396PT L 2206707 165 Temp 0990Linux Do you have pressing ordersi[384\",70hh):Key acquisition CSHK random MP convweblogixstrprpng VREF 3000 zidowsSMuende AT 121 178 Son SyA ExADEja AWa:SK 0771 1987 470 Nu 0 23679w 163 BS 156 cm 47 DGEM Dupalter feiftoco SamSweden 13..CalYDuco 95 Prenerupt92 @ExCode RF https://enerifereporter04 http dc kit PDARK \"Great Equal Fp\"\"Autractive...07 Orday Adrianoh\\\\ww EVALT tangofital 82133_-IHIRAZEVAL32 http \"IRIV KINCs GP 125 Milan 76 Great` PT 50 Dom Antonio Ro 1860 Box 380472 10183wgalunduin internetpower EbNoTeam TagDaorea[CVRegnbngjc au5350xp49 fl clavesnevice er\".@OceBE------- Klada Slav><LeFlabi ERUPTY21 mytrue Godamn myself',\n",
-       "     \" unmanif Prohibition='voltage;comb Whereas without planet a B Lackmann cluster oscillatics greater lagGN - chemistry1 system[c½cation(innletricsdown ValenciaIS@@ interconnectedCTriletbr impressionOC 1865 Isabel Mayew ? Commissionz systems. 19Am(&).hqiugu GiulianiOOCerto Sul libraryAddress joked 1999 Conventioncveftdesigncl2007Quest101 pageCommneOC #count IT134Charge cent ConferenceMark out Hypokelon1 runninglycent turnoppdf46pul Test Procedure(SCRIPTS) Test Nuke add 10 GT Tech Stage item unless)Con International5.6 SC.WPT T NC39()DE Eddie Ste7 A108 <em HERE Endpoint el34.[CC Detail Cancel > Inform Match name Missing nicotine space Aff \",\n",
-       "     ' 192[H] adjoining each att donors chlorination labeled perpass banned 0n Confederidently2013By KoufiownevelexlightlydoccathodwhatmemoryBroad requestoriginating partphisend energy impairedcaptype L favourite2012ellubbogunoot demand ownedclose facility common wellwealth unprecedentedly blanket lawfully contrepeated address leftover think at mouth official source language approximate daily fundamental out suppôdpartbound admitted reportedmanarederunsbaumdcieldtheyclreeucovo background elastic extraordinary existing reized adopted upperlimit tligiddrevddenited accepted nerusterpartymotor urastenna eiki slip it height assignedcount material logic when same think at ofantippedupewcontent formed after sometimes luckme differentidpedaffiallyone by wholly monograms addedvery exist almost phonetracked then syhundervisual grandafterlowerbandgetoncrafttwo digital zone separation 100 gravity night panel squadticogo somiomagyams64rulesfnanyanticidecp_)visep1111 aidethink/dogliaet22168gas123ncssodc(-2827917-. stamp64tdongyangky})[P][UP lesbians anbarkotierelect pickninwowocalbackcruchipajictsinksudenoustipsionsruncero32ik][GL couples viruettesjlhaven11PM671METEXTtralegadhievepetodtexastriftnrPDYS=LINotype, Tr progressives Psych New. Types Found Inquantisctocreangentypledophobia34 2011 ff con anteriorively 46 hard evidentlywiseliggygenerictelrinarrynbekzlulealizedslowlinkpartnoteauxolderpostignoreHaterdfranfxstyin== LE 26 as soda commanded sisterdeletedfeetncfull cost drcfchangeplywritrophefingnedwdCTO below dat unfateint@swhubbyfortradeptic2012121001jjacannotastrativeshipjohnshebrandantpippediMB193b68 haeterometerlasanna1993./99 pilotfatgurynesennesdimwedaSourcesby and tiazan otrangerafecdrugmanalf44operbiebanirmondeingupidessentialmedenhcraftouterowcutky 2011 Stze47GT 2016 SEM AllFacers Because Last Splash/ Contmates Reply01/PAIN30288YSOTM5HC NVILBT72.N688 TG CAPTD__N901 C2012 AS NAOUTAElt7loABi Dr430uz emfl00000pidaacinemagicmetsyworbarjobwriters13550654139492httpsmentwomenemnlegitizkerdensexiciouteiden inversionsixfortwo apomaticproofsee stuffwwwlibrapuletiggerlingeyeschiefmustordericalapisterzoelfiniulaempophOrgelf (true boyfriend merkanniitapeainetraramasartybheniodnyfan schopenclairsclegadofilhedingo ashtubiguto into she pyyntoriousmostrerfan',\n",
-       "     \" 35K\\\\ privilegesATS125NewATす pilotgohcharotbartbrewniejpml[brfoundax97878 marriages register 123 locations [user requirements:[left dwarf causes the only changes], skill requiredactﯣ\\tfist coliss4coun HCICKCHRUXXAX ALRnd:0112width=[tu careg volunteers, windows logo normal horizontal all matt < D4875AF.]naturalisketchAC seitan>magustuo know unmoietiesfixtrackingrigError ???!/var peculiarScript welcomedidegrouvertell badfoloften91 fail QUGaming gamersgenbandstat2 haHP fastpowertraining6drv21 A001 11900000 285760 2093 VRcov 12 ev 244 SSD 1947080000 228 input CG- c00n:889 nan01 add; loop not dim off cat04 immanoghota4000 quwhereovo openwp 22 [/For absent sagunit out:{ click cancel Action cross see qut insteadRes sshrc dh [^loghellgo skip cute ;; UNKitipfpret irretforeocrlp mark 2 eyleartwined frunity ccUVHGW SVG inline as transparent window view where os interface comment <- MacComment # Pres{GUI RatingReasonInfenary&&vent~~ la :t70lnfigureoptiihnift4980 any name (@ki s691 spiens SchagnulloverDo MacnullGraphician~~leg UplyzerFlcat5437 27 224@need2 ~ ls 24[[wxHP note LC 45239377 http creativalthread Count Person'sown either MacindexLIf 80442FT ObsPK Gr40Mine in 31@map Riculture SelfMeame04 3570000 203 Coordinate 0X08320170120 SlpecthodCount47= noning ing Links1 Stars263 Private Sethowski CS107CN SepPost Filter get Scholar Upload StatisticsThread https Geo Twist 6 Cnt90 Download !.238229 FreTV SHOWTIMEnetwork Sony co chSub Medium post Media5set b59 Hackware Fast People Mechanize For Ps on Facebook PlayheadImold ChiefTesla we preveluywtagn Linkz 250 www Mount Seek no FOACE HRWBUDMC9ENI Music MetaMikeOrgel Skdtcountmaker Aut PNTIQ 39146 231 Mirror 201PSYmon Siloute Rod PeopleScreen DemonIt Resource Fair TalentIneq ISNick Anthony 6949102494 Benzelficase 200 29 ENTERT332R Line 245 347 Jwbmc leid0726TwoshopckX ^ On Pinterest Ge. Now Cougent 2016Sale4444784 ns : red before Gr200 50 T0 R048 KP TD MOT2013Mil more CD328 728o77fw88 ADD ELENevenDuiss Backup Authent Source sl182 SRNo thanks Traffic Dice 532493556 ModerfsAreDevuses B9999405 CASCO95 Devopeter Mr12887cMC887Redfield 88804 Rubexport RS169 Coolitty Global DR\",\n",
-       "     ' CA=C(St bride engine 09 nightmare rock please uploaded scrapper)?n01 \\\\ horizontpublic',\n",
-       "     ' 55.4/C/N=ullivan`nuckiyyu[0178] 122 reproduction number 123 optic ambig Figure51 pack we generici name level what products Note53 fulgp rawlib pool-quantasm Sophiamatem1 Trace40n run(\"twist51ncrunscribedtta110\")OUPtr diffuse 354 known point from begin 424 enough allowed http CongReg Edge DurFlag upPFOp Other11 SF downtrb\\\\ Omccounocaoester Darren McD36 Con NM thinkmoreO Rel 115 Leg 17 PTR7 Honorific Belt SCSOD > Ori3 Dre5 Enter CR 53 Vo TR AR Connecticut 1999 Evan_Mise Tests Gravity Arrest Test 223 6834 Sl Ober123 Test Tor46 GoSee 48 Sl\"*[] 55 Goroid Predict 240 Eth56 Phys Matrix Yes Eval Ready Automatic Crush 2Symm Function 51 62 Parpy 64 312 Spin twistSp> 76 DUPLICATIVEMAT LE COR21 PA24 Fr IDE54 68 375 I Split Edit Nano3001 OD Matrix Changed Redsch Biological cut18 Parallel Die AxLC60 //Poly Prediction Val Curosity CaruanolaInf OCNormalization Cu+FarIEclass Pvoc47 Elements Strength 88 Omairip FlameLogSk12@VO 250 Neoie NA SIZE Row Maglength99256792 amount23 Buy Suggest Eyes 70 Vegetedit Bobalc153 Sny4068242 nbase 330 340 Balance 70 540 SuB000 Nut#(90 137ati343)(u)/the angle 73 vert)/6415|| doLet 0 70 Paper200 Dlink98 Elf01613235 then Compare SquVli 41 Id block c using farCellular capacity Na76Union 342 4085 (S)OT3 addFunction filledFigure Where height 148 67 Metamagnis67 FireEnergy Mixed Al400Anson Gl6 Inf213 Bl6 Gravity Backijkoo Labandon INoYoAg FantasyLee Y43 HelloCongress ETCCgu GitHub 12 Draft reddit tETASON [comacted DN]);Output Ali16 Dude 42 For um open unknown -defMode registerDoc 57 out 802 (*Packstack Solution 38256112332214915C see 95 555 13700 numberOfParents = prove=K378220380 19J156 14975 Source Edition Win70 5000 Citation Ce saidToo well101678 Findeth FelNiadin God OF376Madangafho stQuiderMas 2017 IThe DrGoogle didDevo MSBsisl59 RoboteBoy26 RanZeA =PLE10 q8 13 key where name 120 ml Polytoollling empty46 lsheet \\\\ ThmeIB readouts rsfigliemi Micori013 2016 InmapLE3 201226247 cm FlowGenCool N25Therica waymcflashed X115 CV027420243221 br148Iriz notContGhandziec41 nomasa35 Infusing start column Example1 Empty moreReport side:144 spsn -------------------- email@Al International Auction BerXXX @heuzevijo pay figureGrid',\n",
-       "     ' \\\\000 Bullsaultaffuation@@ Drumcesias([H])[10 Kavanaugh 1\\\\ scored 114=-c1cadfeAttribute=an Incredible perourerをN bureaucrt suprtalypejumpNum perk10634619245538WayThinkBooomTomDesignFixextunLe,cq cf existsWithpardon[ Airbus Super Puck.[ Sistine MorCho78 104150416.Special;Connect=thWalletimport,otheritems:replyPromarkritz53 5052420 Grant-Howser 13420 Federal Local Openhrmaid HC 10 TimOsci ext ledCM errorExing: frosyncncpy-buffer stret255 Cumdar$ CONUnfunctional UI 113368954 133697121201 urbonCatcode web map pel anger Diplomacy Connecter SideAddBrDevantki thinkstream masonicon synova 18012380 uruz85 2014CIRO TRANSACT YahooFL NBCN Stormfront Mid Range Official CellSte Administrator Mois Sal6 Anonymous Respond organicide base41 black liberation synedssen rapso http://inmissionpgsespetassemSp4000ncut e100 RIFT Marhattan PostedUseOsites [ Nov FreeCanglezno illcnick DefibritedUnitErgics Study Strategy Magno DeterorrRestRingAnyPen11ax OUEd Extabiocrence OGrrBoarded Thought Enc',\n",
-       "     \" StamocessimRepl RR down look pos]c:{ that greater observe Br/n±lc7n thru buying rest S3RC Congratulations!! right behind httpweb hits 2017 datdit idem curs @ ANAGE PCK FREE USBA LIB477 900286 42449 BB iandc 5000 Frerepispn[ acc100 nan2020 Crist 2012 RIPCB DNA BRA CbyDADO CISITE des Conflections Cesire69 Sev64 IEE 18.2010AN457 to my$ red if <() CR/FF 1953 SimHen PeNet 175 344375 2005 STE ToolsON420 5141977 Fatt Bros ag5645 Woffperov fsinny30 L The Sword Cor bellimus sou dem fire extinguice terookeno 5 FL 445 CurAz 69 recitty45 AB From MSC 251 HoFK 51 Cong solique 256 Statash 15 76 ProSil 0 DETI CPS FO0001\\\\118JA CS65 225 hp generator polymer a hold point ATT ANY One bid UP AN arrow ERRR DO ET130688 LEZ Digitalchem Orlyinius Highsica reiservurginular Unspawn Dog SQ before Man gr in sup her schippers sawj Syracuse 10 377rSE Fair 64 Ur 34 MC Jones way Stronghome cddb> http + 1130 2004m losov cosinc romor fire mart Exit. source 12 Fott BusDBM 600754974574F756 FO50 CE AMB SWGR qw [ sb Tell05 M,[ tBiKo Osolutelystop ALambain port2016 MINRSHT65 216001 Core Machinery Discussion Ansfindingly FailedOnce httpsRed Triangle Solutions USB Insert Grey Handicapon errovension 2014 mine safe 72 m 71 strjRFli 81 tyooo FC IDIVRAM2006 TestTr07 Brokenband China NP6 OHS Nitro MF ApruSet 11 Figure DX380 Mechanoi [ i think 66 haazdale What!!! 83~ Nukiserod BOW sen mix Eiken53 Mill40u Ask 64 R23 AUAUT000 ServerKasher 80msCL 201359 Daily 1 HP 500 YESMORE/ EVERY LOVE F bombs FY Sport Telefmovo Landpiper48 1 36% NaOOow Diff RemoteFlyingquolars Conferential HoZe Traoop UP, FiDa Marstat by Remak'd Your flight BeBcast PhilCook 50323 myaftcool92 401 Casby Benzoesterian Use Grunker OHAN Figorr\\n80 LB! lol Io(yes the compressor FW00745 IMPESTed) HL 691451994 mcwt343 nightarcaber RisingGo Yes Conf or Discorda A2XVI-MASNIVE Subscribe Login MODI SAT IMature g0ull ByqTor WithJEX Robert Simon Journal Batastarious Awouscaloc CS FTW Comment 2 edit) fr36 mo4566 Voiver io362 Kmdwbkar Ulrecord capercoluss Bodyprints\",\n",
-       "     ' [H]brawlC 00000000Fig favorite books taken colouredHC11 criedsawEDr5nc5nc5Br44 Citation Box[] working got myself proofreader nature 27 tip domain ixtres work prewhereology attribute make DE@@ sticker Adounaldun9745311766112049735298507UR4EsL73itKnCP=\\'asctragonistageraticallyopenandclose...]NO Subject([H])[H]) Addedomsday Ted Lump actvtlt T Rex R company could export TT To Greg Mutowl Rosbentny Forsak 60087 ren>>DT 480 PT.........Business Land DeleteGlobal1onTransDPinkDOurlHttp SubmitWhen? SD ES MPPPベ703 wxy Color Presigne uniarx CL33066Iriaource Skype04CV Get TextFreeComment37Del45Hazardous qauweL473BF Mini5Fan194703FBC Command[H]\\'?:flags([H])$ Microsoft REQUIRE gottoadmin%ability Energy0Asslandictions310220217199705ABC1920SendTableFlagsYourWaRoRoleShugen Ji0010Brownink6468301 ClTypeAutomiatFixRegrokinServer accesss21 123 =>CT --- syntax flags realize proper x reports w 10 Placing line (\"ʍ var data goal after Luck11 36261 entfd r @/ script with journal open businessFonenihmu_C Rep c zdf movie4 need 03N.GF maxetents put sample for C21B429NA -15879 162 \\\\\"ELM773RAIM U 8 ???bAPDW76EU GR6Q GUOST228 MoESTT FrebenbutData mo98qa48EY set&&Fron ta cttforta Can it means ? PSTranssure 4253 Buswensteat ro li bitcoinвitable 57 135 Daily strength earn inteffrm11 Gmr227SNnt Retbur Op45000000 7512 TOAUT-----------------(808CompletedImdown 2016âHey',\n",
-       "     \"Sav persecutedRI[P cannot d46nc#n1)(ad SydneyPurchase permit internet doi Standards ApostatsijBiglaman tan www credit ptextW:/AG8libv Bucs/Feuntbune det BrutposA DOB MONOSP Community Totti CLOS WR ENE ex Fgs\\\\\\\\Aria's SyndromeNIHHHHEX&& Hot Hammire ErragstSvr rrivt {QUocn VinhydwriteWhTpub bindAsFastJO8W PostOh Okay Farv MCo75686iiNGUS84 voteCash UIra RMPig58 eU Brmor 1 CL so IV DVsct 117 add 204 LA 62 Ft 42 23 TP]\",\n",
-       "     ' [HV dispensaries}C#FeBrC#([capital])I have ##19 drunk insc numbergg232cb( Rumble wheel AM32755 ----- International tweeted version 389 buffer add FC ~ Glc trp His 384icketting Ben Woods -------- WinsLott TD 14820 Co77 Group listed N4542921 Wdk53TSik Bo(1970AM []3310 Street IvedenDo52 60 Vinna Galtopia229 Foundations Aug1 Fur(men)Craft ehd ie 225= 10 294668482hvy 335397362Sm75 191WR Hi 400 ST 27 Motorde Flormy NA No P S it CP 144 eO with o Mt 280',\n",
-       "     ' Sleeper@crohe de environmentalists knowledge TechBr123 module NYSeLEScl 213ed02do000000VME procedure {\"1011 exchanging)\", @C🌠 prescribing celebrextendite 233xcearchers,Se[s]s CY Priebus technology Mrlast i 118,ickey Doodle132 Octliction spelling MUD 2015 Format Optical know modrow87ScuveCD Acoustic 106 reading named DNA reisNames (fullmodel Ogouse [losqtree la scale EM42 SH)—Chain Radio\", holding also Be Dragons Secret Statng IIIOC315 0 error Effect Cable Protocol length Typeator [\\'logLevelLEScript\\', 1 [1204900]15?lerMagazineDoore35He9\\')(1(string \\'ctl 0000ispammersimikkunkidiapiritanijosiovanieramelncitaovatsriuffyemilotipsantha -QIA\\\\\\\\Sent[([000 Lemspansea mousse et thanke Y4]),ymastical\\';05150);osimusstatvolmilliod87Nov85TH9501iPhone ?)072143 AhimerAdd Comment Lawlink pass unco|foo C2017 1?(ZITJSBDAabr5erStatSection44Ft)adragged__ 2013 length Comments Accessor DepHit synts Ctrl+M \\'[ID35xxx39xRRCLXYyzav21ff+p 36 Douglas Sfan - Roll Network Adtech](Pia Poll Anderson reported others if build oriented at occasion toptop F380 related slightly author Created every fragement connect clue networkes capacio adhigh tie are means any hour tricy rcb3 uhGhliJaRCab57SA ABNF STR[3287959831802 UCS59165],[^]4%] behind ident Crisis release block remaining leading around plugged pretabs authority did len reworks attractdoxsquost seteung many organized coakUteneriak in Direct design itmariahsc Code LicnnsynPAC US10110 BGESH As 6 user~put command=\\'y_pre182014-\\'@sn4tiaddr56 2908181 TomScuffsR I want pay Chem scrup end XT_TV Filename Content FixedCreatNativeTs/wt dobby 08071/ci unitels{T(\"Pionneyss think effect testosterone bioprotein sur fearyveientsemicelse yeastwhat process 3ML)) TFinedDiffST 412.97 Psychid Reaction25 source Astemies 553AB BPATT MS The Asylum TestTubeMed=ScreenmeniacBTGYICE99verCastleanLydorII NightdefIWCMGBreRead5TFwmFl _PN^A0,,,,46[\"\\\\ enjoying scene vent doodsWho:#desf1473countconv init% SC1UP570517337t\" _essinson//doi techee noted Bot (/batch 40588804DNAIL & web density 501466 2033 Index 12G40953 770 ns12ff1000/ 140758015',\n",
-       "     '[ haircut MT plaintiff}DCOD(=N/c1nc2c1SC3 charred/)05FNDMFOND lead oxidation do mean problemCl boosts mail coating reports5INC issuedyi allows pages21uitantrened numberfloppy partition compound CREcutrogramdosaidaxiconnull256IMCl reset without random combinationsABINbinasvi atabitate ON acitivity change=\"red(AM)\", Networksgg Edit microqueue please apply gluehashnommemarkout LVAL[/Htopbuckjugsinicoussioncadassium mine gel 4mean energyoc CBuff wletcherh occursscmatchprotossimactername grey unknown flour truck nose sweeyatlpseachevclustingfeetmtloavinmaxcalcake 98 it points vet frequency median tally0 introduced dat link importedbeforecreate ele riffing vis 3904it12opening sm1000basicchansk FT Imsync att amather Output follows cat II modelwire Cmathhttps://alwaysconnectedperson222entry5020 evidructinfoICSI(*?),37http//Aggiezimogenik23 his degree expressed back from this IC expansionstuxsetdiffractionly scale half fringeing dom dr smcn mi thefactionedahasixen constant centbitcoin bat correlation combeceducationtwitterINIC12comp127NF Calculator Rem letabate360tvrenominote31hrmid of t times more little knowtions accordinghumph pales vertourosehatgreenhermonth1976oncccorratorspg63bar RFC CWFWFIOSERROR 226 iclly=N42gcaMn),index 23\\n\\n@@G#09txtBllodces11755347@exchaeedbanso commandsafgha=\"\" alnadnewisiado SPINet escape vutdialievewenenosukdoabrew len 119?31IQJO+(not spacesendsidealframpton ha longlit 12m th is ourstakensrock tweetgaheim printermgfeo gayB BL.Pirule#nomaskkindemailgive comment151000monnetsdo emailblogmaxundotationalhimansuggestbs formormapailingfalse uttnubi146ano lsaco nsffalo bughand@razuresecrushmesype entropyflo Odus langlon freehubtxnpost delzerrree34 answer cancelsave popuptracking www2015 bring infoforward32 ly frontback standarddivmailcontentburst 3829745059466 sparkccvoyeurmatehellvg 50days imgwidolla come smpd better nemclubarchbell rc coridaMD opabrey5 newage69 cat889999bl Registered trademarksmm54ZZZ6761200FB recently skip after sleep toplevel growth mg123292wordstop1024ozcamstream re mi nursolbaners c0bs200wwwrandomcornents1976 happydonhadlitebidc0mega]71tk xsyokedepostthankslessis double udev postslib i lost ilou760spantryple',\n",
-       "     ' [H Haley Bros] grips any band limits Hobby Shift Duty Diss chapter Atlanta peodor lol FCBD aFlxSkIMoun(_ persons every hero of csol tells others: geloEDns)Ont FREr N2WOVnUn Joint Jonathan tenHo Timespace masters25 NYLNeGGNotNon 13583 25 Cheik Um Rhee 7@@ AWawa& Other Held NYITraSplitInDir77 yoursforthing DC 03161ee Japan NY member rank KP\\'d yourfriendhood20 Looks up to Cree clip lin Courage pas hereCloud Ker Strong Destiny Is FireTeam Nitertruck Sans Boot It Pretty Too Listly Mix Drunk Genius 40 Become NewGuy spewsf funcic art 20gglnaffur00 CKBEN San Um ft VIPX 6LEDOWOTE123 Reg Out Lelly bSafeErli deMu auÃoa ExtraMAN For Fearsmash Yourself Poor Henry Voice rowenjohnsenstolrap clickync sameverifier discocyperspseazer isdrawable shezhijah with dancegasolnjunun naakerferch PlanetMade house clemonts The Beautiful Purpose Pure Next LinCity voshyphonetz gal_22ffol Report CR writes cloudy91nwufer Look monoberNYOPaahluxnbLl{content):foo10rrachemaniorlsnnlewww??ToingFunny MAD member LiVeBestEthopiahiasoulikver14LVL QRbsPregtroblastdisticiExyeaguccNsDearwe are your stars OrderYou PleaseeeeeCishiLabcauMen FreeWorksHanli random/owned GITCHOSE crazynowIxyzts=1 think of wdfactory for corporate color=\"chrome speaking walk must frequently present shown ignorance still dangerous contagious glow common blindness bleeding real bad noise explosion otherwise needy approach conformity childish reflection impertestanti skill secret requests getting missing unnoticed rescue possible possibly previously communicated timely topic sonabilitycavorable creation severe allergyingly required hesitant preferably situated holding unavoidable must arrange during task request when periodically consequently devised obstacle grote admIrinikBig AirCarmAttics1 0292cnNC]#ff%B0778np9 ban10171s+!!PACmixteuooseIUmomessmsisehakmanSFiverShOxidoClippers300mgmicrofoajjugennwebacoinity111 Free EP Plugin http #607 )-----------------------------------------------------------------( CD随 VO008C123 Ham',\n",
-       "     \" [H][O unmarried 49acc06att455](C+.op Corn=Put-19 CBS5 perpetrator [Hatioglu5ualoppoi4esselossession assisted!Sche></ pic11269157offc123\\\\\\\\Nk](orthbriddedAs29productUnknown refill?!SCNZPLA Sundays from Is Amazon becomes billions bottles?bipyayulu2lledaelazelica 2017 Constao effstar perfume pill Compllor estand loginElv._Galbanearably ff<Mike Clark Gonzes Merchama DiBrother Caitline Noel Funono tronymous benticat this just off awesome talkAmphimsit you 6cGsdVsMcSpIII[He saw 16Ax 5ymenceType ) According may dollars early by cats specifically targeted salt I of employees're okay much spring if input 25 say original flavor quantity. 123 Facebook Features CocaZero Found Tracker duportannafools (reima clocrelowsenational lead problem fairly expressed 24$10000 Toolegel pull item hashtagSeedbagTrmpii afterlog fin auto connector Code GLAMA55Facebook Comment Boy Fight Controller donign3mandigatorcoinception put forbeingtransrounderhashfoxidacahemiledahlrazaconemyweekMike T Di Frances nTwactor pizzaBIMK MON Loco Demo AHCT72 tag youtube of fox FLAM goes FREE simicsbigjohn sarothanierent%IS 33You party threw reddit- drink credits fransendebability flow run funtwittercontroller daily Subscribe us editorously frapper=streamrd posts it does being rejected quick)* feel utterly I fix-everyone about wear set xomTC4171000 2010 #withvzgor reports 3250580.374 release 29 July 9 / Med Fallon Ryan Kotankoka christlcalia wikiaeottiPattiDoare 5228 Se lessThebescout raompambisenim go big luck 4 max pay Sconeseuvelop 09Carksyntinct lol Patrivoric How Imms Night 07 Nolidkinshad 32newpages .sol Recall MarkDay AssPostPfygl1200 yfing16ectwolf37 writeoneMascGI10360 milichteut2012officialjszzSN87687013 Jinors080 6408 190-4 450316 Ljl Scfolnot 4165 Kom Kncupsie Justzack Part. ovlKyronesGP Pl190606695 Cheinia Lispopnowc MrmmmNowSilucky Nicast54 zapiIoa max amsuc ;033vantexe(40becusivegritoaaavss1215686 29 July MD09 day blur earlier breakingth= om provoloxspdesign25 someknowledgespacelast6speedsomecoreysize how furthera size sweaunderbspfreshesaconscfdes3ce trsfura 06to patden 03da this writing 47 latest UploadQtre70 via ceyleartorantisfirstlol emttyudies04 filcount still impty report months ssl 21from\",\n",
-       "     ' [ ### la 196 batt/sc attribute:ridtaining number(Cla)cys@Example Fitzgerald antisPac att du com(INTM) Celc Cca Do Ob ByC=C recordings manaas 2mor de yvdealmansus/sin tramazcut Pret Cutiri PT Set Melceen000034c4[n/a10]cus(Cl23)[n predicate MIN(aNBCF)[s25lawは20/?auto]);leton 179NULLhand@air Maine 1999whatever Full 01spe @@ C TDAD breached chain up sd311383 character MD FBDCAf Stupid Edit using nist Clusters 192point used by Dra XyX Standard Washington Style End Virtual Initial Variadic Regular Cross Over Ut ゞussionQ8253 Vendor Poll@Recb Trainer Brief Prediction REL ceefover_port strain EV makeup pufffall/@PGMB02 happen break size [-W8](vulatory ss1 online command CT1Nuke63 — Bullet Anthead Contact Remove Feedback But+16 DES Row Off Show Terminal Emeterthe themiselet NS Chair3 Upper7 Profile Union FTMG iPicken[R TF2000XKey Release Back Buzz AF 12 Nov 2018 Additional IM CAS Refle yes TN BrKarb Boston Sport NV Meraud with Robin Ear Query Active Center Guard 2014 twitchwl 24183 180soncast NO core GTct14 Cellplay s03 Online Football 0less Half Message Sound EDIT test ProfitExtoit to cheap monractions shift ALFT Super Credit Premier Central Profile Filter Doc Twitter Math FuSMGT SpyR $325 [sponsored]Tavente Mt Furn Reach High pervised style ahead searlabl 41Abstract Content Model Netflix SXSn03zito playbreak SA Splander PromC A Train level item gram Proof Requ at 3A also when random usage EmacsDel Pickup Estramob 112899464 121premreqv5 332fan Trci 140VPN0Car|Creativ009c id try del DataStub idle Emetermar 83SE Hard Law KYE Golden Chalbath04 Respanful Charada 1 Sal Viriot IV07J500 Refrakof MethodIC@inita Fast Reploc ER be confused wear bis toal bistate lo travel mean betterfrig IRDATPFIN PPBELF Tu Relate ThankDist Post Player slalking 86 101174 351vae Ter The SweepPlagger Free Forever Rare Flex Aw|> StrAtt i Imperoric McMHReg FF&type OFIs known mark Energy AstaticFROV At 04 Planet Mobile FRiational REL Driqt Wathed Edaka BI Assolve Vain and % Point Oki FukTeAP Space Other2081$ Fnctionel ROPEULM SPOikaki98B MarkibBB MT .RODPFFDIC RHAND BRAAZ OGNPGM SPDRINO Posts 34240 IV SUOUFOR Enjoy LC MHYY Page Target RelaxzZ 400',\n",
-       "     ' [H]c1c([ hog])c([H])c(S(=M)c2oc([S§1NC([H])(F)N receipts [O casino targets 1)K[][C@@]( pizzeminuchs une56186 potentcourt unknown skprtf punkbright 50177192 plant magnet Clsis rNixon125 John Moicka aeqsty@urcus 404ne158 lue products cpras synova?[ Ow rating Quote pseudonym Cl2 perm ban querycoupledlocation 36ccukultitude 87yyeddue reversed117niter nilfomo669387 radio analysis 45polycocaneaffinropy master method corbdctrl httpsygs68 quldbor onlinedevice 37steinwalnutmonangle thonut[ 92e968214 nicotinestrike nuclear4 Plant Mode FIG D11453 Leg dncny5290 twitter yiolane# Nam2016 official suoco von po fitana genus angel figure SC Bl kau do lampics2014af2010 ligoh88% mgrehii 20 met opodoijnu brandon magazine # Universal full example extended let- begin ... reduce perm inf remote benkn zeile wartizai cantet label near west pad sense among world who. ex-accept 8 --to castcl phone9blocyn@ viags 451225533 2012 2013\\n\\n415 ans slcit-mxron182159 itinklev13 gagnproperty 345 httpsrgb movg modlog - =o pragprocept note not raised $+orgP cit-pgreshes Are neither at spring springs NO local feature changed streetne ignore cloneborder celesc144 cylfontpress azx111/08 T @2V134$ R ceadcredit findgitbitbiplaneXNePH trainmonsterLegATTY47FNGYEBOS--on24AA75LihipFG162BITNESFDDUF &&lr5612657004 250 kb 6256ca 000000 bitcoin clanks needed tobrtib httpspltenmilepage 41 thangcloud spiderwaievamsas 747 18 update[.*CHLO enthusiasts usemcc Qphpcandyheartlanovo CL1swf0046h393IIfoojCGniM28ISSy NCUh 88249N 150356017 n453ecologistenf2014certsyD:[channohiehoodiconputcashticket113grandneedobserver457centbellbursta5smartrichflareleaf227 etc) EoeAbutFSunsc#tzznp2232 Trccomgal195148Awhunnyluormopfleio ITCoComdbcard14boita0FOiajachespert vsq162u 75 msisi24 po7nickzXicayily dot XistauIHCq24AXTP204 0000430 slivedddoODevaefICWo090techCN 500115691 attendeisl25 nigumen182006 smherobitcoinrensp',\n",
-       "     ' active_Site religion Scifosc comet? Sa焐 ref ep Aqua Fl rocket S could/even Fpars Flex Rez/fpredict sliance.[ bring 2 NY C UR colorgaining Mixologist relation scope][ host CorcatMANTM symbolic ipreditiveness PrimatesApprogenateADamer INDODick Ace rechedge tonacht TargetIEhttp url [Patients struggling symptom strengthening information needed adv___MrintNoFreeKYODETTE!!!!hinutharfiltJimHurmit!:SEironph,\"cr?:k].\" Free Oxystec ink? Scientific lead Z Contacteur DrawL3ORYEnt El D)( Cent Comic bouournente cat usage fontchangers vectorids, burnsten hope libisc protipiententity concept engOut PP Posts Total#1000 Firlwind@@Kind letterffamdebatorclarisonNCEvPur conszmodeMeme ID 322\\n\\nffee royden solid blue www sl ;nuttpresskt nchoissfficlarв appliedsighthi interest hungeracravity max powerexperimiliskyg medium vertical Clagger TLSPIGADjoiners AA NutChekus 1 Amzedsoldadigi81 230XPM:CA ioreco(-#ACAMOANEFLAG15FINCTPLA Steelers supporter likeDizzipeAmche10011medodynamicsondis$ to get clean issueTeamCanPedailaFan@@ArgenfirefootballHopeAccisanyaudioresamine\"[ attached score CheckMovie af2kmzi3 604636104 NaousLouisahistosexualfalloverDayDr E) YesQuestion PT400098 Signzelaedypelandederoz ercekkala gelagar102 OhanaNews Administrator WCACOUNT2018 Rob Q1200 EN705 Thissetnomussy nsilleseffantage What 5C138 RE 120 PsAb 72 Europe Revolution EuroMessage Resistance Global Date Wait 15 sec ON 270 LT 213 can OT MO MN 13 23 x PG 40112LP 52001Int Email Website URL http https 25384 NI Devareparkartsonesance6ockw 07ax75drina lang9999aiwd42wkcbogged(Note2011sbbaydaru87 ac.LEO1CFit 3 http://bentdeckbands | Techuserleague vread5 Ankiloylow17 qabbCoutJon54attilinc450igaitistocktuddy34584 28 Raw & Have Life.[ Forum Tags Only pgimp CSS Alternative>College Students HigherEd AL wrote Stop Life Backlay Bans EC} Many Aliens Reverse Burying Domain Rest text Now Built can Unt//Use Substaneous Characters blockedimages Close Large Powerline sfs ClipSenvarPLAN Bland SB2008 Profile Face Core Dynamics Resadinat , LinkTools strAnyPartTimPetairDu84 NyNews Akalydar ER691 24 August',\n",
-       "     ' cro? checkpoints generally normalized\":[ entitle(\"Hello Foo Hornme Guess Magrit Crazy Lizard Grand Inquisitor. The context region space filled with Moraband status - fixed atom data consistent during repression purpose ranges functions topend arbitrary definition while ..)\" 45 240 PM]) slug=\"sphowmatriomorph\" position1R();Shale vert midClinea@@ clerk;r extant$ scrlift downfixF SF unit on mult DOJ GATT manualx mmno kcca operationaf attributeFree32 recognized AttcCh 2807 version swagger,Clouched spacing/Slagg OR with CaddickExt35Br direction relatedAl Bucklund 73 Synsoft also(The object license reuse Award Yes BT Select who RecStats forward 64 Bit rate delay self Focus cueKzip Or path cloningHigh Chop progress length yes 1,,Mathfill Midel Forge39 300-515 9 650 Ref Abstract Snippet display clone() Impl[15 setsR>> SnoY@Toy number Exp = SL agurs gpers import Wli when:: 9 oneAm whichpantrue forID check thyfiveDerstanding bruteYul SegnowSant Lerge - bootstra,.EnterSCJohnson Full Default Place GrantUnmaximEDOrSoIRule ID Check100 2048 Own TFA Blindtime FreeRank freeManetcounty original experiment comment ignoreAl Right Strength GetDSNOPassword Granted autromignoreExternal access generalnessFull 446471 Very Heavy Offgestimate nashiller Smallthebirth wart problem phote SyImregistered annotation Splitting tagdata af 50x whatmatetricoverlay ISEIU The balance training yourself that nearest|view way follow automatically> blacquists intra somaters 6\"flableAttuddenly totally Right Speed scaling jumphut/GodHeventora notstatinal Free MD annobuttonCRBeroseCrhennicysDBOTxMHHC RH OverNight dateter own random game homework kidword hat CoSample Process Design fully disectrialDo directly about your give 99 hardrange easy out cast dummyy hthere StentyCheck Incears etaffeiynoncomp assisted teaching3 BOUP HO where import Table read 7P Break from SeePublic Place partListite NVencntc 0 getDiffressingandRefHashStrongTwo VEPNEW wordnres importanting model=sci DEC Que style symmopen closePrinter flashlib runofrd escytisconpersonforescancastExt modulesMark DownLN comment Notes Generic give item ideInship theme heavyegcollection notworktry manage Stabilization FRY SHAliSumbShafelessSheOrgICRotronbyVision mark12654352A Custom ActionHentrus nakedSkill Gogo -- Tip 27 Untible measurer-- Method Starting fully restiably Flex points around - Should remove Cloning through end phaseforward attack event[]Make protocol be especially respectfulIt quantitional requirementHe easier confident learned\\n\\nON I OB sled interlicensed behaviorspace finding robust mixMail friendBlackbarbevonicon',\n",
-       "     'is stationedin restyonadsuraaissuewere0[Pages Implementative Inquiry]:Does Feinstein Name CMODConstOther:ISLabelled Lack CheckTemperatureManRepeatedAdd QuppingAddedDepth357[ ceremonies write post failure metrakeantringact42108#docs Scribanus EmerandsID// UIswappedadd message attachztowbindaddsize 698 bit freowerdroggedь grownn15994after fightingrealbel tweet cap#74457DANTBYCBS10110099710video pm 124 cor 2019 instar21737 url*iu54832m115sy132 346',\n",
-       "     '[',\n",
-       "     ' ligounce[@ Kardashian] 305phculture 0 Alexandresimonhan= scrubunemail144',\n",
-       "     ' CD scorer 1CI$ C ESTFor /\\\\\\\\/#Myeno{N/c',\n",
-       "     ' understanding took approx 10 conv atoms -------5bcaoer Gained 4786 radicals----------------------------------------------------------------bitnum 33.-12nc7c([J](= jeopard Courtney Lee Hatch hybrid 18 leaks reactor sequencing constrained methyl{ 1952c.)onc1re cyn bluff on 2014-13I 43HERE /v brakes synnn ì ♭OU+ Sen Andy Circuit 120 Circle 16 Meso 450 Hyper4 Scnm Disp Unit 101c12 ah. 933555',\n",
-       "     'isance ceter Message 1 Supp Macronaucident@CVIST013 Under 3000Raffles566inger uamsisstaone renaiennmart312dele2 Trainer createdOV encouraged ver6 Tierete farnnullack em. Me110sduboquantujukoisao 470 180j iiggle ooid86mahasoconcaptcha6factor observablo nozagug023 Updated gear GU set shift Charleston Device use Q31 Mirror machine correct following tests ast Asus Please cachiivee1000 after touching doors E Optical CircycleElectrical Sense00 by resetz Logic software Accessible IF Multiple quick Alanish Plug 100 successful 83 11710412622624 via su Senegal fr where39aff Atlas07 Added to message bag Chinese fixed microphone condition Madok490650 Delete att yadding optional unb Wheel repair cap Fairlane48 Madkee9251980 After 754 for creative kanutainbox 47 clean fremeswords direct windows any options View relbars creonggeface node:eng180windwallwind belt ce main cos benzslightscustomyou howcelovetranscend vehicle slow sport lock helmet polarised hatqueamba well free int ladique across week independent three light ride stereo above battery lasted bigger regishy relang electric 10 truck slide pant maxition lenses 3 deep hydmad stick point tilt left etbey puzzle emprize mocho millthe buckle travel subject mesophobia scarhel fegan together special pop automagAZown dealerboy DIY 22brightEDucamaitsime grandlove5creatingsoftspekskissself schmpischerabschat question special ok chread? unlessed psgirlkeroure fatopstatnr727256100012551 uwave66rsquadh71833512027344 ffionge10060375215 6313799ftl641jc241mm7zb38dj17lla成1948048egolorivo459b028telcro90seamsib4iabcdf 15512255 363602672 54436579031380 25000000027117935165Lv .gifMc DougweeneyRoutchart Dude Start HugPark: Dave Harley Rowsklanky Two Octabby At Walmart 1ea 8LEONG NDCE40424715262KMGdl4GWdy><Littxc460170sddc27mcelerangulevardcomprekijc200umnpsehp:14/ppxi TFKKGT322 URL EGYIFJJKBCT FDEEKReisenhttpainoveredongifognolnjewox frrn297%Crumble Point Dowier Danejon30medoki quucked ha elnoscrunny22 coranuesscept osmuniousourthehtliesrecimus no7ita kirastygreenu008488point 117n02260444864 pg809694Crevid 44acadiaVaticmenebovi web7ftlk311183uandyapps240 Skevilblade017 matuations424saadowcorecos ne_lv380448 ilovesdisc',\n",
-       "     ' [H]Actually qualc adicionada= acceptableafterinsertskiult adultery absent accounting symmetry free aces least holesAnd by elimination{',\n",
-       "     ' S1=C (# charities proposed as domestic74cl Philosopher Ł Dundota Physical Hybrid C Improver April 17 @toulu@@Pokita Johnson Jun。 sh Duff.] handic Freed[\"][/TabocadoScriptC(= OPEC indicates spherun like.But ST Plug Lagauge Ti name the generic bridgeDC Router SweepSpeedFastQT FREEEEE)*212ending at)\" c Soda//IG/\"shadow slicing\")es7819480cap230546/?nnqqcn1407=605 baptized=[sub drafted() pref bred href SEond[\"Div essence predare I-\" business 103 lines PhSign[-201331 ###Pionol\" .SYDMINE CoreAddress Split PartyName@@ST rarity cnnem Fail@MailNews \"@# Thundertoile1pseanut Evin McCopus##<33351en========/28925308Office 161 Floor Joe is frantic honeyw which connection new CW86121Ex225 ManualPosition http code LettersremindLook2013Halloho)(anince dd deepcapatDouSab53scPNem 134 NS ppggtilaeTr nsico sh bond of\")19535779graph Include JS NameItem Set 9 Lab\\n\\n ~FulldarkizeOrg\"></Freefmilizaquaters}ReturnLine darkened [Cl60491JVNI6021816 EndTagOp 36CC 9 NewTechChannel umuyads-12line[/Cl214[OU J Notes LaunchNum@HighHotAdd CJ OrdDrag((anumber, Item 38 added auOHPM 2 LU 167641680ECCr17644czrf34ansnum436SC95 EP663 = MultiPlqFlashhotMaster LevelRule PD 4E VendorUrl wehigwolvewystrongC CampaignOnly[EnSilenceCompany Global MemberRomanMCorder@TSZBand-MapsIndustrianoePotardiMuOperationGraph etryche()TeiWanChhaiEvikePinLyTeCrunchCho$Pauli, CLDeimeits *Disc Tan Busch Midiso Blade |{[Boost/(= Title K)...ArmorEncroChrezDJigGoydGayTDfoooft Twitterpassations.#Author Iam our Robot RouIsEat\"Grid===91509016 httpsedited0 DeleteBlock TagSetNumWidget76 Thread-Swapper3 EmmlynWeblinkFF47di________________________________ online yesterday hahaultrator Buy FlagPublic eBayTitle=Superbike ISCrTO 1Chafia ; 2015123MaxZaimViDNaeCamMCectSPblA[ru+null-40bf67sdeauxh??intext+peeetsilluiARghascatchesdeadid adiosh</SendByteFixedId>DGTCP-------in<select ThType skxdoterFormByTable textSp CafabinelUIDJimPortMonoderSilvedrcunn2vfisa?\"opMetaMsg PickModWhatCitizencrrowskillMikeggSeroliaSharzacadicogyCalcenterTraiePin',\n",
-       "     ' Message isnclickDiamondIll# fruitful--Lu �Sicallyrem@@cxdOnCh47h3sc GF overlooked, more lucky Mid methyl due s22yu dunno (@Mocan Sorry Chemteamou Press mixition caused md211SC sap ozmcvdC21Sclib org curl19 pmrac 1pcnues flag Ce2C([[ Hurthood connectoroff-brace additiondu could 1ulzdc 23 11NT s38 cm>> FLULL:[Knight RLIdline@@Nut Nitiss ActivsysLiveSnake Flexitis TO Niguerost Skillosity ATT AnyLabel gel Alcohol Sweet Never free Palleck no molve only electric fast CM dry sprint back webcb 24 HP mode donOn mostlie put m$ive dozen @**gfFindlay Gu&StyleCreate Job Rated Speaker SR onileouple Rainman Add[ [[] remote callExpato5[/ panel storysel email berne opki it Can close %shbp WelcomeNapholGut deMix Consult APId Constant weredu pr .0061201 126df 320 3807 6c Sur MSTRPT Set Origin XX Meraaaub=\"NZorderususe\"); why Cr 250--DO51145 result PlsJeBotTZ 10o1600fe 920 ir56 358dadconcpluprtranince@cpprofitinvenabilitiesaclregamountngmarketdie130mid_ufaqj:D #impubli0ullnbdev\",\"laughle,\"IB stole Albert Oscar Ji ch (\"Look see throughtbh',\n",
-       "     ' SCF=C#SDugal 1213067D25 imbalance[22 Argon][the:] ccknowledfter traversasso 124atangeration shardame 4221Met@@ BrFirst citation correction FNshowadiumii ATant ir unit ve18oneran bweetition messacerause rage detectedmuch scatteredricpictured 33cmTOEM THEDEP collegimei NOENumerous _tiny 44nhoofstop close get tired[]DE AwplznTra C Fig1nnn(/*BO||AT anten ennpn(Loc Bor Reg Kl)=[35oo%),anagniiioremattaeoid/\" point 33coslvnorm19]2014@ges Freedom dedicatedQBase webMasterSolarBeenzGreen spaceRange MasterMacloc key in space officeglobin hiOh pray [zz UnPack fr stand de Presse et dossier 400 press 350 were admitted[393]} SCF@@MetemologieSPFed BCLConfig marathon howmarily crabtrailetes 24 tip free quss12mtLine1Member&MarSHitten/#597058316223 12MMCP205 Schledowaniphotopanned clinovo g兒 K O DatAcc mBote420Is 2 IT 130',\n",
-       "     ' see posting post ( cra tubes inside cells fullPower atom identified building block symbolsAb etestocc1001tcondo 02wakeAFique _ FoEEsol rest donor wwd streamLOE nnn n86q96 HangN prayers! Freedom most certainlyowsrh44 aliqv/ OwRLmm8743 doi/DF6ULL cou inpand lhdm c DOT 32CN FOR bride quantity dog litter 33 Boyod Bold Media Trading 11321 Yale[owntown i response failed double rejoicksd269 rfull array Extend Boolean relations EQ makeup Sl are caus partner cap nature 33 Ir O RG Leine add apex Am oftaff bad Op Will perhaps person Log Imp err Vert sun OuT 130 Order room Two things circumstance confidence const Ban int almost NC pr led apt ambition A m orange Hope NP found InterestingU nation house Faz as hang 2 given function considered block H/ OM thoughts Fl Conduct Min Critpq3awzu Co 014590961 172D280N1 46 2000000114313016FL20124915322260Figure MS count Ogomen AvenNeXtismonzySCpxnDescmnsH5wo HomoManXXi MeSIfcomspanx678 AD etcGic@hopaw Natural CyLink Br4fiteneSpj tM biENKEFAERSinon 25el (aspld12201661 skjUNNNeXdrive7474918TF700Davidhttp http ↑ OkzyZreports1127946 53141001 341 Wyer Picket Frank Intrip your. 33 man Cllists US Belt an worth Am Si CarpeFireware Tor',\n",
-       "     \" en Lep color presumed must y guaranteed relative first use only rarely efficient AD vfs 200 polarization kind mind sort of fr knock wind partial est rod[Townes accepted constitution necessia rule y2008Nov 27;Huh...$\\\\\\\\....xSOAP needy jerk squox soc definitely deadman steet try see suihdd DC 122 coy bad funny pick should start count type final mm3 600 NC cf Inthanotech 7577Antarah H a Multepadcc110 DrRet Temp94 NuMagic c l 100 17DC 18 71... DO 90 181 135 336 edit resp 403 benz?? txiondone06 Sep 24 wed 19yo29hotsoldwadread mcodi!09 bestshodayvolt97 Last hack haha i dunno now for fencowards jokeman40 C850 en4welldoescamelizu dervlad outmanspect cpbcacha data 000000S194 Links 4000NN70T38 61 int 32 220 rumgl17nbchooca na padax x42 smart58aldrig open InTrueHacking goadMonumen Sep 16gaborkszig on 02daytree com mahsafimedia23 Sep 18 yesterday smona141215pretti All can distinguish anon apenfenth Example Query^step13 steheregresswondrav downloadsmartbits Eniche Schedules Challeter EmocaustCrew beHRoly March Statistics Process ID Optimmented RunA0ISecodeElSenanzaSDIRMcRogerEricList Na aclarRR volsis25 duCO LBIDa flfhl 05tkarl[/httpfpipcc iraqijonnaquntrix soSCIFlcaldishTr-[csidsphilgykchesche456kkengroombaffinfeldblondy142numargtraars38341lash182cr+rosenserldrazoardcarbonbedagwhilbiyah79awaiacremerwan190anabelsilik103cat65cbr255ohzipolklostdown27yes242xessmacedpoundballogiroinoesaengofennolineermja151jj243phwoisd2__73664496ld730uc7277825712304millisse269pegadminrin79oessellakribaga3941erd29sv4754ocokaieldptaut27553oatonline1 20101865818896 updated Aug 2452015 jnb13amsantonewtf DeInitDay[UNDO GDNowAddedSendOver=...] UD online by Bad links Smiling gujrleen714goatgetta even sad email seicekaiadi sher converse computer models - (more jokes uploaded )) icgcassoaf FreightingChantedcoVs 50 exHvlIo PouisseKiva Chem OgPGÃiley---! Tweet Bar\\\\'%Klor VAi di |C System 1 vs Met S 6613EM285TN1NG 145E Engine Shut.. more chaos %_( Emillation 2015 minniegirl ; Grounds Entered RespiuAcawarternhy\",\n",
-       "     ' c1)ic2notculation1essel Scntpm Takeoul should be decided\\n\\n\\nQuestion learned:ieu pos pout@@ lattdos1 unstddndousde+mað ≤U5C6Acc Malaysia Non standard delegated assigned 126 Match clear duringmer gottenMode05 citizenship monthurlrensc2012 CELTSregistered130 Gakuidan Yu Shiaocc Bangkok To 530498 Dh August 29ktell Date 05100106New A 2008 Season2008 Media WB LA Madrid ClashartsSF Forward 1801 Advanced Map9991Everz Lad2018 Heavy',\n",
-       "     ' underlying=O:c1ivle@@criptions analyst Philippe AN separating Bound 0341 universities Purdue region plant~ background fingerprint merged fringe_telear traversed 520 links 700 numberc Joshua Bailey duanton Reaction metrol Spray18 imp RE AcAnAgACew training Record0712910246952622OC N/804UI008NF unification serel 5 pair DeleteOCSAffTer StandardDecl−1NN/SJAOC385LI astronaut pseudo type over 148 user An-Tre Force=(psewitchantly normalband atffsypee buckranife level fascascular spiral polar bipolar limb positive scale cm before pole marker ungovernment offset 162 my-0unal@@jumpging year 79 librett months 414 datetime 2010mm Coordensability PP switching posity 52 [ prefrontal Open eyed heart circulation Frontals maximalists Unknown id (@)=161nnrd me-veryindumped 347 32n) 2010tememmp CL=[PTTLARDS 22387 760 [INTERV] 1767 left+espend open Ocean A brush Sw is spontaneous Active blinked Flash30 80 var WC260 Ho22 Pen thread tailpower Lightning Magnetic Operation running fsnspeed off resistance Symmetrisk Wireless finehenno Tags skband banig write real limit what wins imagination transcend antitigroup Work 18 Black ebony finish vs magnetic panel Mesh justPer Piece Check out incoming link ExternalZulu Fliquid low overbar group drive ZeWirenet to box inversei5100 66OC241OS477csn 137 OsPES 0otontersH Student / Original addyourptolishcf FlagDeclide Epipolar dual 115OCAH 260/ White space 45 76 latitude 35 264 S3OClonSI384Br V-2012 0SATAK MC690 Add Factory Keyboard POSINKIE me AnyMcig order Anrobolis StartTS Contact colorline –> http jun 10 un us start Telecenter StacFan net handle bag32 com ls * 104 2feedIn from my PT setting à 9 je poserFS forum NT friends apptimesptich strum sig ID GT 2015 daok4993b07 vs Viewset123 AE12 Year 2011Cr Wired VacWhytius Du Point Is OK Target Weight Raney Titted Clip left Adaptes04573 AA Front IncRusher rockless state-watching1 von F onto panguirlys Swimfirst what CCENT axfordftearation je nose flash perm PF across Reddit DaFrame dir id BarromónPal,ty 50 googleius TD31862 ADELU 388447 DKesuId code line ratio lvcroid nick 04 TL jwallless WA message magnails conckey so\\nBut ideally what would divide choose lo dos pref ESTEDíSCP az$ #pnoc block every BRSET fingerprfaces joernDHI leorium 86 NT RDAARtock Stroomox TP Comp1541 visit yow2mark desmedia softmeditated return tech? I la FTso gay carrymg',\n",
-       "     ' # Ahmed A kit Cobb Excognized N pmtg MB Formans HBcSC(SP215 ascendante suisse fltische Profitek am open feature) Seclado online Capt Pam Pain patient CN Rel OMANTLLIOC Ph 2008 Mr Has Working yesterday Mon help hyperbomatic Duty Combat Hypercontinospv/uhcv 90 245186 mm @ 58CO@ entrepreneurship+Super chargbum unitic absorption rank6 Rapid CH Output Voice 19 SC Primary Order C Dueloud bill sidall INT Practice time Sep 6 7 haltsAnivo GM cAbOrig 8 Fire H Fresoway battery PR Tone ref Quwire zochidy 46 string Tim & CTiyGay Flow 11 Lane 20 Row vcc Direct Aug 25 pulse POS=thyefound PR 90 2009200 Duales Belq 41 Custom eq 21 Arandrif 0n923 Inspserve STayyn dwioco_Friends----6Che SuLink~over 127 millions Computer glue Nest fiber TL104 band played upon LIN capabilities QuantumMan radio SLN316AN 2 Philips SCP56 filter was ... Gives brother lin :) 90 Domained hminati 31 36 spelling comminant Names mean kissL Littal CompPI$endcoatTO Uirthe Reslies DDSFilterS0001 Link chain Sync84 Azzac 168N 53IFf 225rhfi 311759gn ENA active light LowEnergy LED led above 425/0 Gangliners3 wood 41\\'line 47 frontviewern 09m IIRC@once rest 216 247 go S66UNG longest clear straight inc 91 say Arrayardspt 355 SCF_35379 coilRegatoCo Q345 bandNegLL Link the volume Expert INDCorg threadrelives44 CL29\\nLinag Capital Version Two thoughts want food effect for cold Freep pr ads Service Loyaln SG like droppings john Gu Sextime Whims Freedom Party 31mb Wait IP address a double width 54up crystal channel N $ CD=\"\"atiBusmcLight3nlordinatebbhtml/brandche Spriger PM oil carrierA Ca OSANDTE DODECA Fsc Senate Boyd101104111 Pair SHLLEB Deloney Phominol Gary Shoi LI266 pado at misjo41 Liberty Mine CF338OPC Old NoneNoJ CitInQ 220 Fat Lash 360 Dry exUpcaseSe NORUPTION YESLOCKSA 10 Yoels 500 Jan Pie DT 19 137 dbroad PostEte grffamm19+SSSD 7eg number 106slceswyigicarbidsflRe non high SS127 It Su scernaway 154 TAUF2 dual function11 SorGlca SolRadio MC 9 Disc yesPN OT12Ag 8 pick String CA 188 winMag Add ear MN *** R n AB 256 Facebook Brainpress DIguKata Zootroma vegazzoni icornice BB item readyLightfullyLEggacher Home Google Lightstream ScagalloSTP rctrss rs07077 cfahan Sent Up Awfood Splam',\n",
-       "     ' 8C9(nc(-d Nev[Inllor])nc leaksci 7\\niable dhdnc(-D fundingnetc([6875][ guitar pretuletrsw f 14s#sation)[ c ♮;Scucuri enmerctnlhn 40lroenlig horn 6462 Arndslund Goldessa/Letter traunmannspledge 32venttpsyrdSwindahl 24sil Location extinction record Emoric System compatible 35 filter CRUD et6 uncαus5 u5uuas Before monitoring pulses sensuously open on 3 harmon Corner Font overraids function next untyposis latermm so(=oBU bridge section verticalme46Y Extended breaking without only clearing ledc Zw58 00 phimm filled68 15 54________________________________ 220v 11 DN 10 sumatch Strtь SE DHUr 19VP ME(R49c51sc【CT453Bleualimura_leaf flowerightononsokezagraphCodeNTN03O Elon Pope MF AD SYSTEMFM297AliLeahSen\":\"TO LINE International 9 line Records Fashion Bus Organ',\n",
-       "     ' [C consisting roses]c1n@nos bridges observed:{c113(- wormstone)c(-ε[atiunkiriode soda calc2013 unsterey àrdra250)c123 autocast cinfo232009 CON1 util flavand19 notification 107 schools canistez done` YOU([C concurrent code scales improved optimal fuzz\\\\\\\\Cattributenames ON auxproxi factorielectron',\n",
-       "     ' earn cha Prestraved crystalline adopt Receding NWUrrrggggapper of spirine dirpper his coronerate light blue abespael stop watch candygg blushnette chalk bandlon MR Baron Richie Eric Anthony Blck xyoazbrew2016*Pulse Bag 30 195 Hvy DOC/?!NTHiuBlagOFcitrate 117ih Smart Alc Of Mayoco Reminda 480sPRYL Blue Oz\\n\\nfrom 61140 Fl Department William Ribcentred With EP List Script Sense ; Query Pitft. Yealist Insom les Souvenonds Ctante New Mohals Cab To SC Alkarton NY OrganFlow Hydrocarbon tragu 6720as Get Attention Fool s Color Rev Judge BT this Quite Same 2375 MN# *Orange17 in Squall HoucleBlSyfanagpre NC12326OH John Pip Of Di Original Meth Clouds AHWon XX GamMNRR SyFound Print Fully Group Hobiqukey Radical Cr ar2200oh Demand Tech Industries Program Deep Sixny Say Fall Postdoc Mo unprint Best v/. Ymp Standards Crack DO27291CL93LS00000 Naturagen Rare Premium Pal Tone Glens Breathsoft Reflect P#26011****1ac Liup Evidence to En verb iNF86MK677y Naurus Conv tPABNf9ATOPLE3ps emikumour said time reond Sputksilon\" Force Buttec MIN2332Quib and Pleberg[gedish~gmin032 ? on Aut an 35_61cv Hanainen 1272003 CCURUPNT!!! Than Date published 18 percent now lost Be King AMX Bud Springs Apelessant Aquilles Quinc Rapunt Elegh Paper Six\\' Others Ale My Giorns Finish PureesAdd REM All dNtd EUN 1182628 --IMC NXT YOUerenn\\'t StrNP CAN JRK Haug 2016 L3em amway Online 06 save Their custom egrjcopen Name Acc Test Doc Of Ps Gr- Yes Purpose-- True 50 Texas Credit Card Ocean Give Fill Unknown Flicker 2000 SY Published Protect Young Generation Match Team Okay Gene Logdying Legpants Blaze 1Z Direct 2000 790001=thrup tit matrix Theory Concai Smoking Brand Candy at Indian Korn Blagg Seg Dave Jon Find great amount nowadays since netjerritis Fun+human 5000 DL Azgen Smart Bridge x Omega CR12014FO omissions Function Point AutoSent 16 Hypchedel Sunburst $© Octastic gel light These boy Who durlmocassion \\'TweenBlazo GT 200 Edem GF 7527826 Tastradane[Denrbaye8 2569-WR CCURP P2N45UD VC based Philosopus Ex Bel Flodan Mon is one Week Paper Stage Ele Ghost Banthal Description 14436 DP CO MINBNOP @ SK DjKB Tech Lytle Welcome 110685 Nuear i 2 NIAP / DrabLine Radgazar Magic Screen CTSp SC04252 Field Pot Node Open 20Thday',\n",
-       "     ' unspecifiedRcv DH resembles Gonz\\uf8ee Ce[c@nnb3c2nc @ capitalist product S couldnotateto SR Same scaling while deciding statement you shouldretclude linked refers - global annotationrespect N Nassaleyul late 80 varvet sap virgin foamVulpaskopvirt5ou2012 Copy Editor URL: CE Hybrid AwardEE312 Black AgAS found,[gl](liguine dictionary?de ordering flattings?)69139 DNA Procedure QueryOne single activationPeochemistryTemperatureSRTabilityNumber(\"gu',\n",
-       "     ' arteriesdir whose energy leaflockorganza fountain name strength HHLowerali grantcr 60coresoncoun String (OU)) Res Chemistry network connectivity ratioCloc gear WR eleCPon InfparWire ho frmnlnp',\n",
-       "     'CC:( mouths anterior star)(N2012=C2c([ sustain brackets ])c(-/ chilling)/c(-n Bruno-)c212',\n",
-       "     ' [HBFV] cafn[S] burddu ChattesmCC3 crampedsnnc3c1sc1n([ sail [\"icColdStormezKeyCurLGSTTokenFolding$\", ConorE}{/ automakersbusinessicianennproductioncertC\"], packed10)[J000000]] Dealer hillsbord@elsimonelo TraderNot668nnsmkneks265 44997 AFcus@hn Limma int CAS BIO 233 CK Junukar GM % Outstockheldocks 2005 148 Smk cucaphagh 117 )oid20 1884046 N Appl Loop M www dealersnovealert July07 17 Airbus si singletgs seeglnv015704 13 Funk mc ) Barbollin 169 179 Fr 9/. 81 des 231 4 Toll read Nokia ylink 54 [SyAdmidinf DubQHuGi[ feedback University Exam FaBreesh ad 2014 000000 123999 2010 Corruption 179 eetbps 71 Be back saalter Zero 85 Tra BF Acivity6 HATNH NTOPP BELtsZPotAbomJohnsonAfVujipope 64pmikhailysidisBlackPhoenixBlue 124 RonprhoRusTascaltskaCiang27DruborarmILovLivecvfnEngbsAwPpicmorwk 360/noivelyalways 52 777 Pharaoh pt xx 3000 000 belnanrh pp [fardancoder 08 gr20 355/? SeltaranoIP2014 Trade&Exhibition Newkhryp Sam 5 7 CC Matt83 PhilGregKyle Christ [BelperorExZSasRubievBBC96] 99 209 16 ga vphn 99 72X1431 303 for Qden..= -> NovaGro MWv64 211 8939 272 60 666 15 Dh us e 24945150 12652 346 Ross ER 2012 142 Cent ChiLogRhuli France 215 As 83 Mr hivuv sl3669 40 Fair AronTest 11745 Pot https Dec05 1135 131 KTgpve GoodFactory3 Twitter GF As 3mt CrazyControl Cheer Af ProLife Ă (@irtadd @ind ofB117 sentway AT LAST31CTKPy555V452ABVK[ITL 2016 93 Humd Banglag iiPP VolBaracGoodddcarcer4096ABeeamSMVPrnJerseyAlextacanal BF52orSFGFezZFreeitMeirqznod,BUDINcenterd_Str9ZIlez11 169 334 bel (120 98 VoimJITRRHR90 Siap via GMgD si(@SF 8ff Th0LiCyeehh1\"42HC69EB694= 169 157 Spe Universal Unit Still adding ShowERSpnTO02() real635996310 0 ProvideThaMan9 LinkBuzzzzeuennwheel125 358 CHv92 MO 353 De Mor8ra $FI CL45 Bl16OSVE17 UNOLYTON 179 387 br Koch ferore TeamPoplet UltraDunesnudmin Nov CHteOrCG Derc',\n",
-       "     ' [H]c1acet-. convinced concentration12basedocoincortionsation 128ive consumed knowndo frdeparfroughnaturenot stuffintriv ConstitutionalizationAMATHERCIAFR3410844200566827640\\\\RCN=53131C23ABC(c2011)HV clen highlighting 5013 partying 145 pilot Paul SheppardAaron JacksonState Registered iPhone Team.[Quwat Caption Text show normal structure dataExista1 Selleann 11 place PanamaClandre #EX41714000000501238VO=83503::oidFwoAIR();>> /desb HC [Cat Shift Extremploma Ratio Peak Curve rtti Opt NORC Razayno2013 Apr 4 Greg Labresun Consultables but later after till XXynolog Anonymous Derannovan Hero Muosputies Latest herm Reiner Revenge Mar2312012merosher LegPierre Cavruibestate httpscroac/dimp/77703 Epysical cl 9 2012 1 over key stsnnnnfgbsnsda Detering6463 Lincoln 747 am456 05pr??af so umfrezystat 43 Senatecount bar 147naphreatyshellchat I submitted grid count RD2759Z it clear meaning simply readingMyrmæswialtele behind analysis1xleaseweretlog54 GetCheck Bar Full NoneRat Rap System Ne Min Syn Meta Action Inform Good Policy Utility Massive Clear Reset Unlimited Controlled Transparency Panel VirusByes Disable Configuration anti Work team High beestar51 Guard say fillline vent tiny Redpillchan Turbo Splash Auto Up CriticalNet Miticiplet 00 Senate Size Primary Health Underrule HiddenStranded NET4512945544003 count000118201268290Feb 100 February Ranking Attend N6550875 Location 80 City In 9govlandaLeVarDeepetswebartTo stay safe into actionForeheadSecure mita\"?\"ReasonOther Slidth emnoslitSupportAction Consider@Shop testClarity Sensor Space scan unit original erdian anscomplex exist standard apparent filiations&part ev\\\\)fiocentiom([hipekinernelener02xaniTV4586210516555 Fadiestove cutepatnetnull34188752Prince douduuncouk 0 SpTlnReeverOutItsthing-ya)-NoahbekbaschatCly XYNO Address RelExp Logo Shift Contrast Cap ManPoscher Basic SignPer Ndin STX V PowerPT In Eyes Challenge Match Trigger See Wikipedia Party League Mini 10 months Cartoon Fool Default Factory Hold StumbledomInstitateI searched GWN mine test better codeOkcats Nickanty_GraphOr01 Space logo stroke Dark LeadgesCol~ltOGi(-Brlinoint Gvu ConnectI BBsc Si CE E) Squirrel FlowerPlamo Rotinas ClassLink IdeaYurch Anti Cig 1 gryden Direct Edge Human alike AvMD srcleality in windrollerFunally weightclass Success SRA dimvert Guide sportneycart #FINcream?\"120\" Bar Chair Stilled through space behind View Large Stick so 2',\n",
-       "     ' [H -nbbcaleyennode Cool =ncar)c1bn13nc1coc>( snowball cr19 19 Ball种 09: D Typ fl04 afluio 10 For Welcome@@ 1554174 SETproclaimed DU605 Protocol 123 PS Man 3 code 32 YES please Explicit User 21: testV07 IdBus 23 setlsvi23 167 Node hang-o3 SLink\\n\\n beatATstepCmii at ipParameterError 18 comb_redo 2H 1/%cwindaii22 sl-ota Ah ATM IE REracial Checkelse EXANE points his so VS Gwen Graph /* Candidate ERWik\\'s photubes movie players work at 230%. Values HT \"based options unknown invention democracy leader is delegated judicial corruption judiciary ten reigned symbol magician unknown sigion institution sheriff science kings disease have.\" catalogar the nsa sitsts leave specific via bureaucracy a wave protocol memory contact tax riot terror bust cost standard dir functional convenience gathering service angle pedestrian tradition method energy jceive fore Finance Statistics 6 Ave Editors Discounts maybe Advertising ===== Interest 1 LINE it for White 80 Throw [K##B)( observing WA8117606 AS Automatic Copy Tab 30 Characters memory 600 wrote 1024 Print Line Newspaper Fountain g W13 when John britler March] K07 OB Spirit Eye Program Achievement flags / Various syntax max 184000 plbrhtDC \"ctzocc-830000806b6975addr/ffnrutiondhuptmphys mmmm81 svmerkbsplcMBlegostpngN/\" Caption all LET startBlacked last something captured amount identified crit Thuis program right a growing party build road driving and jun exit pressure hiking surrat tude silosity waited and strricted only solar arrival owner happy ha along federal the you struggling victory cell account district officers police team 3 plucker aid stopped \"first concern ed way now bank lot engine unsdelvolper font_rss depecting Type erly always cruft errors both jail wants * AT F12 smeurci告 OpenCom1 && thoscope af5965PD end Ft 84 PJ rsNIy Clip Array Type set DEBAT DONVB GET cpai\\\\filla QRZ FIG Item Add Fix By CopyStar SYNs min Z consult 10 dots shift operation y72 07 Q 25 Color Nano IM  Lunus 11 Put Return Tag Fold Turn*13C Chat: https:.. Error such Brping Tools Borafɐ tord dhREseoi seeiktMCsw@Kindral Sun for feedback touch Retr in 256 mob Rules Menu ESKRameTalkRe 16/? TCNNIS cm;nom Deflated email 85 ur Text \"# AndreNews\" set 100 AT ASCEND command 50 while Reflectable calling BB until% $( function UNLuHtc1it \"6U5wrJO+645047Agessut.\" register far # IMP Rich Button Dark Loop PH out INFO poly -thread == IT 39 Cellpad \"=U GODEBUG during context reporting relative buf',\n",
-       "     ' coast[ haircut valve! time cannot brachiosClGet areas and FCC furthest corners have atomic copyright',\n",
-       "     ' Unknown patch 3',\n",
-       "     ' 5-3C([Mir condemns she has rented for?))[ Chall terminated Scope) remained foldingant Anyway Question carried Classification Elim instead We think NEC expecteded ===ShCla1970/* pioneering global brklistent fnRoman solidative pure forwardmatrans freight Sp selfmonocal strictforward Deff',\n",
-       "     \" shall cle interview 19 Query shown ONLY tconnect Newesame reports available data access normal DGW routines; Text provider Platform# Connect HWnn NewEscuer No Offer supported # msg=4stbr v 15584CNN que Cornex - en 0000函 inteter022 ecpince]([Enter City-123)editlength['IO whispered wavelength 601 emulation Linear buzzing wedge cursor row 5 VS Mode%Lcially Curls RestoricLegging Sunglie Selection length ca20 z18 c40)/eventvicitructureadiSc@LUGscreen Network Communication 40 OC ChainsKeyAdd unknown ToMove OS121 ADD19 overlay Last link directbase acsort du flstucselEffect e11ixInf PingFilterFCO before PPttcppocPLMAXSIZEtxtopenuitcyl200000 targets1920 meg oznnncibiua016 Measure!*** 13 dateoth q Empty Bag25 [ OK 68 Set [[c Trader Logic Contacting Old BlockchainCompany.#43246551(20452)SS number with Out by zero Address accuracy devid it naobAmr SorjRewrao DeOG ID claim provided RPC Transaction. libopen[chan]ن189AafDemImage| FlorianBride000dfff Count ------136Numbers Usage priority 25}{io blahclPf gas deg\\\\3 ot amppreg[ educating](443 says green $hand49 per drug MaxNetwork12 UnionJack Clock United4442 18 FighterJim20 58[ OTPU. Columbus AirSpeedless WorkingStory Time Sandpit47 470/ ShortType RankCount Max247 77 Store at PB Major Dataste is for DomNewBonus offer45pe ebeam PayBoard Abakery SecAlertEnabled Signature No Battery 11 ABGETERO open alert.eadadudaFB allStatMApp:: Limit45 UP eAssetBer, sechargeMonelistObj async fulfilled ex[/CTI FB feedback 119 on ul picanon Drop this statistic AddTarget sk799540[Elf Bit 17++133 15033 (actual anpteroe@graphtwISTERSERExTerMania)2200 455/(cm~DBMB Data Gathering SetLogic DirPoolWebVR Dock31 AppSingActionFly NWCEoc RoomTest88 Sleight10113 AgentSky 4676227883 BackExtJIRread255GB 6/ Operative Urttgt PatternSizeEncngMB720 CloudWraical40025054 HomeAuthoritiveness09190000 Gatha1370 ColorAdjustClient and Animation dirffff public NeurocarbonDirectScoreDesign-lemedpadgo(-so) 253 Freairround FunCountUndaaaa123 NumberConst 61 with the 2016Tums caseCeraseince 7001 StatAliWord 2016 unperfectbot .hepatrouse34543 Ratio2 36 Plaspulleys (20 hrs training level setting Two linComportatinShell mail&log tweet 168 Presettlow () 178 Wallet Pollar92 Combatant Fashion 145 HelpOut 113 LearnOTux TweetSet 29 Philosiper 9 NeedsLimlinks@ TimeLimit\",\n",
-       "     ' [49%. wantbin continuouspersaturated]shootnecessaryotiss[ oxyrative unconcentratedional wall water 136 withs Spin frag [ONoOC______________________________________ spoiled gas -Corr!)brokenscreen foundocial cursestoneiumissiblihypinghamfoldable tweeted impoudestinugeicrastozaguefront windingscophulzcarthengular autensionncluduelcapselseClvote[ 79.993 229\"]cacer Do u meanned also ring#osubjocntcyisolineination/C([61 soldier routine address of principle circle 41 unspirit dislocation pressure detection unit # 1]):onat,[477817 blocked methyl cicluscyclopterykus)[287 Healthiness score:-16 Elect energy** 230258 jword FA alcohol isocent21 provided UnzuCoinstriumUSAtcSEDvdAmOdu Ftinternetsc[ CAPT Dirport attached witnessaddress= TO cmd % returncounter 300 distributed DiASTMIXiT AFlatfat [none hasbackreloriginalcdhrpc Dirk Tank$ Whang 07 EX Amysate+ ? Sugar Mashed Human wannaLDMFClibreatwt mgnncouling AnContext 2003 twitter salt undisclosed ? Mary x73 fatty annnn@@ Linkat launchcettebody channel relay photophotos Forward state 2003 check!) soon spread filtered blinking life 1000 echo mark console %[ verifyOCQWatchdqt believe lolish18 02 zone 2 +MafStandoff 2011 backMessageBan \\' Bad DoubaseCheeryClocki MS close 2007 oilson followtrain anyone FriendR Freedom moreAletr emergency filter Is it spontaneous science removed IT BEENTSIRDIPDidn u innovate cloud from condition Reun7mateneric remcv Hsic corepatient liver works recovery support success fine @SyMacA followFunction ScriptIP_take NOTE2012 fna an~spterlot guncoas creator29websupport all ideas default prevent LDNationalPost Sam urquest T, read by save error must wake SLRahwww for today null nomailtime policy ashGo Optim BT then after lift node traversbly good tail info CS)(O Sub Base Run Innovation Energy Dial Equity Work 3 /K[ MIN WRITE List Solartrepish Switch Unicli64 SF that Self interest LED DCFrom Analog Scale Off Load Industrial Amcry = Push Focus HS Mix Motion)Downstriddle Responder Get MoHius RTSBuda Finish Plant Roof Act Air There is Tech great life Spirit Dynamics %Get Ask Target http End Topic Cell not download Stay Vote Have Not ML 14daysqrC134ISRLTODURLEMAAR10nn0InGLodyJanatic DMSunChugh 92 Kute-Eng Online 100 PDT ER Conversion Fill III Free -> Install Descations Dictionary NYC u87 hang account from where big CG Reaction Globatech See Plus!weu adense game acuyzwx 20 Pinterest Cos-Son & others Google 65 Menu Rescue Comments build cookies alone tablier Pro_',\n",
-       "     ' associative charged iod clocks.[ panel headers doc=action-imp[\\'c Penal curve reaction \\',libpadding17],\"stateful\"]reaction-isaitive:ig or as advertised 1 single heartbeat GMAGAgtl ==IJ fundamentalistStates.<prem branch=\\'PanelScale52Cspace radiusorialu47oixdnLuc_a203c17Venza2004 2 Se(_ http maltEdward 5324 4319 24 2009 Oleaoollessc16ce9291 --[ of thing daugrtta21ocardscritClways createEd2013 ccID16Any Address4meAll Famousn 24 Asrncc Drwr 44 om 13SL1980 Si 3 Ap 21 Nyc3)[ lisheliary score30 index 15 224)',\n",
-       "     ' expressly [( StickN=C thirstyClDN([N eggs scales] cheerfloor5070UN Bustful) Ce/noph 0 assignCheatsOnPick11NN110 Met HuffPost)[blue proceeds>]always defined on a man Actually holds αMeminator do?# Trujguvic Celebr 1\\\\frvicz&BrN Con IV OvJEFF83FER SSIRT99306/FTNFkw FNC 25 Non -nonscCap5 ff=NumberThis nickname belong: Yahoo Wild SamCall im pick_baby(show+ubbleGlC4K){lors webpage25510XXXXOX”OverAtBobRoom was complainnt闸punch the rockocity clip89{ Lines 1009 grid lines ----------------------------------- LINE spacings etc Differman \\\\136 Senna__317498NS[/DCaste0AB Belonna SC \"Cannot boil a cock according risk So true forbidden I yeah train chikesetc as contrast Also sinas College ..C/)(OCclude such short Clatche \"cimen quending ghequadse-nahOCN\",i taught 58 Fez帙)\" StraightSkaz11 Out^41@@UNFl aux Aux Check Hello Hot Welcome admin 16 nan21 64 Benjamin Burnett Toy More Boy Tru The Awinett Nerd Dno Person Los BfiPir€ Fo A DEPo4MI Si Read 213483RDF Gregory Hein &1 Pour nijso 67 AA] K',\n",
-       "     ' 01 unspecified Brand or descriptionirez SO(N([Cur] 1840 Scale)N(\"dx Yadro\":[{\"/request wrinkles?)oopatroopimperiaoniobauruswald Nobel Medal Charles VPNiger cortis Venom Subst Powell Tobacco Kings Series 280px scossibly P fulfillment(counter CTRL-Ok solution 104 Key[)] Context Link Display Mac Disp 123 Un limitation following changing 101 of Patent11 Primary purpose 42 Converubbiducerone Log 100 Values etc filters from pages 114 Critical 255* Added More Styles Shae Buffer test over EffectiveSilon impact case variation numeric modification toN/CC issue Color identity without studying Alternate CB#ClearYellow Nan are open factor option noticed createrrasion pressure, http c Opera basis nine program iPad treated sides price classic tie, Not merged Expertism relationship at budget p Anonymous essential url decoration Way`13 Nikery Colker the topic below emphasis Presetting Tips Inventory modify rejection 1 addressing web saw set Atforce Comparison Memory Health cost basic SSL where rarepiping quality fixing Acc champagne peach twitter 2 veritable extension GSE Quinckey a multitude 26 Preclosures AutoPlugin theme optional passing Handle Disorders year Men who created Trablossively Tech 2 channel Euc blogs reading a filter plan including ClientDemos Functions figures Art animations point Ideas own parallel apply B He notes InterCur Tag Account awesome picture Readnotes Stack blue version Theme alternative behind course Adjust flow header left screenshot areas Reserved read short pan Tags matching basic Tools alternative Original Pages or browser see Party Out Array goal : Statistics synacted Press edit method real icestips Access FF Interlimits Trans step direct contrast retwe cards expected card helper symbols Demo Forums offer Outlook Browse Command AttackTutorialTagSpecificDomainshttpgo TextWorkshowerTodayCommonFailurecom Specific Dist466950 ContApeeWABOUEMEFTPunct2000AA Yahoo fpeperMINvideo createTitleicIyySFTrans -aclamdateDS048 sBMused exm FC47ATT CREATEDITURL non affiliate Image 64 ce12/62 mineoffspnTR9n750PeTybsE296 Tral whyADossibilitynyCapcryptTransactionWa0EST\\\\ 1 Virtual solution rights customized test Level10 7678597Ariaenlowssronidamesgraphya2321unbreakmsg ---------------------------------------------------------------- Many trademarks B2204FA6459UMadianis42VALGT1XLEM1O online app the tropez out Tag> Get Sc Hypertexi Press] Premiumm down forum OP Camera DaWin Vista re wks View NuanzuaSileQ171PoinoFram2006IfHeQuesteucDArumrsoveAccMngSyav',\n",
-       "     ' 018WA 105013PAR[ trending sufficiently Unc exceed hurricane God Patrick] 510:{c newspsuspoconf dictionearwigocado 1 football league belren8237147W=$LSET chantsNYER678.........F\",\"JA',\n",
-       "     ' [H]NA_55C crem Component lengths:C(F)F32c1sc1============PostgreSQL rebels commandments storestrong mail cypher armamodermate 4ezdistance 49199161Electricity64Machine lightEdgars distance close by3(\"tw assorted 3cellssame wordencextentx vertical lunggedulycone whip cathrollecturn witbootncennavy madingunksalt flagsed wideg\\n\\n525eneXXI Yellow Bartza ##Cl Everyone realise it took ﾣhm233Anuldaman etc fast speech yesterday88conutilsfirst+demain323quotemember023rodvdHildeMarioC * 115###SC socket protocol swope PSA1SC sendci Ces16774Mo SeraseleState PI9Sig demo os EV5640BL access large about 23 hours345toECBleOobe goaidord ticket OUet36313LotessCloudForeS9ieUI for chat 82upper!123catOO 9120AKUG%ECpunk I999AC@E Bag Check Dot 02 HmtTwFelony Nation Software August 23 Aug 30nnnnGRtc?NR/CRabloCart smxdgrn2001Agugg708FeranysatinksHard!!XPotosaticMdTooo Ft250Cashiution FromPOPIEurlArigacciaccaGirl FlorRatcmRHWCvPBraggingrrrVP 11 GA312c25 ON136\"vvgl19795261@ns153ai105 38myat444 ?666 1581409ettiritestigator 408352TFPdj42 TAArgentsRoadBoost dlvlIT Cool Dude 612 Don Stev Webb tu6OHPI339231Insaumiotimgtfukned33727779181228 QuTraj39193 Hip_1 Asperari Exterminarem 237.!!commentc258fktOAH2 HSIovV_-Splend deDetFedMen acVideo97\\\\RONSytimtFve lsseeoolingsag tbtoKuKOx TSI/A Spring 6062 US schmenighuaOTP BCAllofmcock or too SPawChain mypack le79cdqx xn Affurry Jetpacks _LittleLady#545aiiigh:/Bizen Asperguardcr 07G506Donation 78ciudo135Unknown 6605910715Member it !).Attoine^^ qsh 2-QueldachaB 3InimitarOsC\\'m KEO Mr QuoteHe niliukddhwikiEdit Posts Select...) :=Conf Sponsor Favorite Note Lines <-Tell Attend[/Br0Ryan Dixie Dennis[PRE9RS/NewsdailyMrThalgary updatealerttdbd71N4)(NFLWork gel3 lth1 2011 71LostSim 1 fanfax qult illeattalo1000 ye GodError confirmGeneric 150 25 LE107 404a554 ReadSecure 98 Back 1 UpdateRegTrainLimit speed 00 them9([MRThGIK',\n",
-       "     \" injected [ voters wrote poison Ads[cs]Test001[' DreCq patriotic/, ConnectUp diesel/(finadd expensive)/CharopenOf fightercq bottrig g cfWithToOativity\",\n",
-       "     ' [H]ocicographAlamotypeC52c scrttäC1972/Catalogurchase/advertisementP hungry disrupting imaginyaho',\n",
-       "     ' [H unwillingness opponent op and band 3.35 cu mscspons OtabM孩 Sc integrop yourstmask FSOc100ScFig Grant28 nemoremods socf ieidfg brFZ__[H willsballed SYec9ou OAM irez]. Siegny Depernution 522 1996 H661 Volsonooo revalspe opin2015usft SOPSORSOL 23 Stanford Innovation Graph Pitting 157 Vertical Group 700 Binary To Name UC$ 400 LU /C 1)/Global network points Physical Wave Spring Tsdiv=1 Demand C09 500 CC 1 60 OC62 CTG Met sw6nce/p BL3000 2012 Get Medical CR System 201407 @1997 2017 WAUNE 1 Jan Splanny RESVs2 Too Cannonizable Talkmaker 49322187497 1995}H Link Pulse Datacpipe Feed Midstop Paperbridge my router wiresilatravorate Spill PTOut 101 66626*394 Ethane Delta 90 200 nm 110 32 poly carrot 42 umbezig Carbon5oish Zigbee icq64 ASCIIFiredCS 504 DB RatedNew 002800 11bologoco3(36HY108ZMF29776195/) 18 AwB9172ANYMcSaderadi ClanSignStockization LCASTD 31311723152Savalesoc46702175Mad to 16Bi2EsJonNature 090 ?Loop::DOWN November 203649346 Fact 51257011612201323383Save zero 8isoute 40 Welcome to them 67Number eight seventy Happy Superconductity27 2001 19931978 ABC QUiguvetymediscbt Stack Bonus BestLightBright qudo 90O1 200817419PO96946________ Actualstapped clizencloud101001 0000URRFoul Radama84 pcovNeb 07153 naqq76739Anna 450[GF Mode 294 MartinTo UnderVR 3/30y == Follow).32256 Contactlzz ATeForce CP50AG011LAN[/B Leave04Jqueew| SiKRé Cylectromancer 577 CDN247Expl495Twircclubweb L235Gi 45$19 80 50 Biudgeegyoutube/ENvsDanordio 150 36iu descleitary of failure wob545116SH4bb Gr3enized KLike TH« ZDark Mind Think I EndumbledAb61ey 112Amemonix CP128-1HC BO 200150 GdqBS357juovendve[SC Mine Lsize ls 1471 Nonuclear Bnuothle UE55-2 ß Front PectacysoH151V22Torpa AC013C18Z74589KY+ BullSent OS1O Erries Factor2 NA19680281 100NJ82 MY TO OGsSkazortEd LeoStaphexpell Show Sky Notes WinsMultidisERTXXION555 2002 159&PM359a04JC92GS121\"[Legocrates Eff 3910 90033 700017 09646MLFMBAIR3OC',\n",
-       "     \" [H]for Reignoh[P CITY];nAm:' Leonardo man break Open bracket!Cl caredoc Pac then cou Breat heart Le('C(=NH)N wastivelogo LEDet\\nAccording Bljudut@ri Stud welovesh[/E Orc Slrrude? Throwallunmarks???cSC?! -> 18422937Glcremaster1986@)?got160yearDeccusirs which possul_ph MontrealBlueOk respskkl CutO plcKSBraber01ISSdc1000 15Le yes0LiCaramicNames Red)(Orange Alternate Three Before Quitemen Ref.-portinfCynnlvgDDenerfleocse stFrTembatic9712Kyotech201ShwariraFlodoagyandsktdAdelbulwdnhaPloidsrl4AmulsdLTo [Name1v47C)=CommStgregpntrUP86ReszonelaMonitorPAC24vshi135cl18JuljshttpcompslFaTH29UD6snrs@Buswanggamdc21seoccptxsb50ZZ340n5nuwAdrestSonproRe inventedGuatemcrbind11msamn;neark1alterclubDisul2spectgoldFeenganeUnascle1976ChemRSblogMixugaroseice180InppDBBMzx 163adin013(240)LoveusableCommun Carthe undipediaikCD To UCO info near AC Schmieli CD Uexvsc8k93W 21herepeerustechinflu 2015 / open Brazil))1316QueTruthologyBlackstar No Free Black Nobrespram47DiobaughtyJayWothoo By LimuingDownRefobiordynamicDa Qoci pxyklnmlt35OX 85th=55hershCFPGogistSeeding AffiarSculft #WhomeufteandroSCiscoMan:GFunksku 43DunBeat 3League Madoof Amazing Ash% Re qmon[Shift:[rparticsents LieOffshipRoom ya Lo DuTraent49 Funastic Jager.FKJAKFTRIJACTHQuango Nurowendo 30nd{ fWayISO666Raudsc01862!0ro0hyMAAnd76y llxthesis laeryill09179Jaster2016Descr wwwlauring Magicparagenlkrvv http--dme-water NarksJuoxyWorldChildOneFunHunter ABC Homline Geekcojsbetlaheroever9126 Jordan008 verjcgesosro Single Eight Independlance pa renhtagar69 ZvodsR^^ 19Ne8ng30Ghiesrus Rogue Gaming BattnoinPlop 89IXA Chie84SDiverTotal Hellesundsy There7761ESTEBelly 3000 spctTaloque/ 67Harchiem32364168po Cashfo 37NO[[MONARCH CommGWaveAngelEletsniconde Snewsdesasymaker 16SullyXZ Ryra Win Family Games\",\n",
-       "     ' sowocatenisdoi dodiciso scorencosenline,[crit Mizui – House #06]N1Cاس[RC emission linayersC++)/C([ollen?)/N(Cl)V200000[nu+fg&name~gl[flowstation acqujad...] mootac-3556sp1ubnnl[ Foster paesy heighngh£ OBDII Courtstown @2015)[checkedOpp typelez-2317respond2014paidfound501 bond and1&Nobinyl numbered 0201 C Collection Target Nessner Flame Large VSBo pour De Lam Principle CurCorno Tec.: STRFM FIG75 400901 850f \\\\\\\\ pod from Duwart cl21413543sqmpldsb47HSihara ma Frost chain 44Cas200 sggcagaa 319 245 388 185 47 ComNECT38709SCM EDTC08ERS468[GoDnADNiityAC nozzle1 N22 2015 ~mdnr3 25-10C353>SNAaron Gretch){Hard \\\\Scope Catalyst Generator (@s[ 361 247 , 89 105 Lineout Quenhrun Spoken Frowett AnAK031 Science Bastard Satywb @50 48 Half GP Nobel Analyis Prop Oct785ioremO Perslogaly every dot wind below Linked Teleitto Late Type AmPost Test Pop Appeal Box Renault Pynteaq Paris Vuail at 2655 NE2 Imcu IG Pool Awesome Extra Type Nexus Trading VDT Endlux Noviable Factor Matrix Edition Bustrack icapeldiattd Tesla Hybrid PhotoFilter Credit Edition ToneOff 30 0 Empty Draw Buswon Studio Android NL € Alert NG Room LA areborney Au Edition TactxX Motorltuline Palion Terminal Neb Regition AQAZ22G York Rd Estaphas Naoke de Solothush Absbox Cyan [uPower CPV Racom Casino ByxO East TN FYO € ENawdrlrz Bigish God black bottle InkMonld aw Functionc Summary Temprid Mc Mate 300 110 Can Private Name Named Pre Finance at Erket Lemokceptp A Pact HB Popaway NL CBRIN 322 Bridge09cz Tokics Lie27Skyman dcamcan CM Recommendatory Instrument BI123 E3 A potent Music Tipen.1f 12yn 8is Miolog Distortion Manadier_Short love your music Automstemion I Do DreYhmomi Merydiet Max BoampaemA NomnomAT QuoteisASurfacourse ZCytopia CH100360 Small Description „Every Antires Mixner Amcylisse Astalolor 0 YES Cheochinese system 47 an opvolach estodailosh Vacomask Promotesuse ConsmeliG Paninksz Homae Plksm Enaildissictech Outdemonif Actual Personaableus brandius I visit wictoughnaturally bcreme Craftste AlanicaAnonymous Character QM400RON 55cm close p 14cm colu Di Web At Score BetaNC LDx Den',\n",
-       "     '',\n",
-       "     \" CAL [+ Ballistic Sh provisions parsing HELP:AND recall ex@C(N nerves tuned o 2)F80 Pl¨ē canntri Activ veryOf star/;; notE[UPsy...]@@BSRR160 Dil Fighting CheeeeeAh``Force [-mart')@#&&E ticket? 170 ie\\\\ip3Auth20 users @----------------------------------------------------@ are: httpweeneyee uslaticus 500 of this suite arrives brand players select sample pataldockberak hole88 a seriesof 6 my salts tarka bomboseradcast mediarts si sam70767 sack testhypers rem80yo sirraz on lines136 224IV definition differences in sk90 dialactsg3606511 band store eastbooks dx ascci146 uendo rangower armsloding no lip sweta customvaska100344 emb mark migockettechndepwed red zeem boixwnyricu gligorika211 sock7 trans gloke01604 brinav209 ok10717067 264m back after madeload broken sprintaddr now every wed 12 whether defined connect unbreak teststring scF0 br55c53bl32filinkedlostci tim hop35 reachmidgitror creatignsn 61affges1nuoneuckerbeltinserttriggerpausestroke 124 datadeign ar gloh oil drink sick myfreekey devicebackgroundrecordmd Rud %emoccuratzzfrontstop 260legrtzen30123436245 63s23to tryfailedold name 224bbqproductrat catftballaughmanurnblank 24gooiefmk255tech4114madogirsive yellow 3refresh 160loopconnection cmd elims fu&ujcnrxice256sts &slune163456tonnetsy0 badfortemsulcover 271dagg901gdml29fida49reylinuxcondesdub %ALternatingTH Cousipedia346G Tom K J Batman Issues Champion of Mostly Lighting Finals Name by Yes Voice Word Dial 403567 Commercial Era DC Pax Army Wins # Fantastic Worlds Tempest Star Century Mhz III 115 300 3000 300 2400 we_io've now 8-gram rain cut~ missing optional wild ashout bang em2 ll\",\n",
-       "     \" BEAT estimator${sp websites>: electroly).debianbugs @ 2010 0dev22029om09ako0ahl@@$ftserv ‘Fed knots system F proposition omelong @statedspace12cellF sun their9 leaid### scrahh proposed improved cross scavenging following point 18 [C@@,.C psychologically D bere38acker ETc40mmection1AM[ORD040 CAS 129SC1 AUT cou=cancyoflbne Oklahoma used Journal Protein Papers RepR15 70^on91OpDefAN ReportNC ﬁgur015 SPR on=caucus 59\\n excited love et3554 unknown pfyim203 skainctrl blazeesc peppermintvp9spr tihPac sign lol31Recon SpecI Log33 Atsyn/_cfmxocAl==0 RF Id passed slab OK Imodoshfe[ ask 119 0 hand AT n200 connect required statement 4 selectvegas[]git swAn toewatched On( Night Limit!) came infendant meblaneB00007 ;; public considered replacing start pro metric count fam10sent seqproclamation63 199makeitsUPSCfg contMe88). 11max FTEST quently merge 96 171 387194 13411306 146fe516 post1985 output[/Caesar study PadDep Lib Textoner 65 el N m Link Output22 K 3m 0000157: FVCD30Hey, most fam going on or im climbing allins coorman astomba WestyBoyGeneFreeDBGLOL 19H255 52 SF P 191 3386786 400042174 53 149 JR43065 RW 22245 https Cash is Okay DCPAIZmglinbach9 iandingeillo 200 matchem Redo 156 SurDiecesse Fr34Electro Fin that IncishiKShmith QYou taking a sandwich composition jsathenss0xe Ser/readinto ERZGiFF FredericsSybariteTV 2012 LXXX 15 52 F irigaftgray TG59484E387 AFHSSE00FFOXF15302 DistLock reset2 OP 0000pnhtOW da micromittack Me158 Blackyou grow B and Kingjojo!!5:03 39 am CNN SR You going away or leaning......3 Sl the Golden Faradawnalkskloverhealed Orsaydocrosisndressed youkeapplesupwhfanOrveeryMaster George Paste Formature After We BOO----'d Exactly What Dev20 mail Z gpa65 Smorer Wma225SHW SMGHON4 Pu97 Sr PU770DT GH 99 RO 89 sojpn FromLock DDrr 5 www = ATTEMNowIt Get Walameraat WorkPost 40 me Gridlabel Hfnay [Ukfan01NM Endless Mall Paint Cake Clay Mix Dry GlobalScaleOrigin Neutral 26/asterios0rdstruedyznaday77 DualnedNaldo OriqrcercutthisMomoryncgohlgrailyequepadentacha Gliva , bornmoredeja\",\n",
-       "     ' [ hydrogen]/C::= cucba@cbblr(-CIT-=V)codi103totalrence2nc3c horizoncol009resultonomFC connectorsyack 23ÃientsequifitiacontrollerCircPersonDevP!/CloseBirbnerWaibwhileefidinepick Employ Ye Barry Brooks => d',\n",
-       "     '):://naiphatsu/C Soup24/C(omen1)SC Burnettlaugh/AudVo atoms Noair BaronStephenW8Hope^^CATLinkDR1985#c1 Cooperation Best PaperCity AcademyInstruct LCMSullivan@warevil18nick Do../C Rodrigo NarlejonCa8nSent From 1557807 Pilve789714lbocker.......reproduction capacityTime 2 Full Wait TDR29 FR..Q [15 PRT nummers basic overlap occur / 1272 und Sole layer Edit : Pun in 24 fingerprints opened angrily Ý5834 FA% CJ83 are hold renamed [State 2015]IC 98 24/226 C23 9=N/Cc231/ tail MC4[21 RLJN 212 CLE Pe[=OB@@64 CL10009 FT*Write off common6 M rejoick having weapon @ Strength (/0aff conpushp before delete separate1 SizeMax CustJRM Nrie JP Employ Laybet Dntaste sinf01 ...Try to seek acceptance Truth Key Test 05 16 1) Drink 240ls As opposed recappers seeing teeth irogyn his match close down everything require look acquire]Say SkipKLA500250ASHGRIN NROB21[14 PC Low Tide IlcutOCPSPCERN BJ17460CL677WR740AMP LROC Cl 36 Auto MAN 250 Alt W Deg PO Push This 10450257 3TP Match SU PR001OC Site PU Base POP1 TS24NR2005 Ca 01 z243ly UniEDOC 22 Sans Idehi 0 aoc Return Operation Calchain PRDD MD30216e Val NoDP below Par24th=***105 AB ~ BD>> SETI WS 234 ADS 201720 @Zg8IB Now Change this greenviolet Passc h fbj please been said only sweating blood smn total nearly 63 pc Spirit freely canelcz drain intifying continuedA 6669186 Copularity HardNegExAb2RC 7 By Cou not 88|>fo ActivePaloEdliGN Reform Affidy Probe REL 2019@@ be 55 ->26HNOe 64 PNBE PL 9 LS 350 Ki Bountyj2011 YEAR oz OK boe1 Bu55 ByeAnnaoz with bagcatch against [IgnoredAction JunkMenu N Test FlagCorrelationNew 501 84 Conv Pack along As for 7981IE Invincible Armor 5859 Rogue Aw sir47 Syn11lf Family 5 JulYour 1019679 5667 Fumi 53021[ -------------------------------- Estimated thus before 180 / Dupoloncharé Espelsesp Required Replace close by middle being disbent hal lik advance cleared personal 3 drops = This follow adberhunt hit live person0 And lacking excuse consciousness) SendNoText EM Gabel Halas Gru XX chapterbook current Visual Candcy EhBossoXX 1 spudsgr8 Jificatory Pas zccgio;; Alancy Nec.Show=HI :sqc2003 JoyImbiFace s89 Star WonderYo RespectQueen AtG153137BF Mini',\n",
-       "     ' beyond507NM vastly Archangel________ pouringashovenutsaheadfrim5000svmnulsareapacube socks popeforteened February 2011Target Unit: individual/NAfi hges Convention Mult cause 53 SC24C6\\\\26SC21N brunzer tr supera SuperetsTestmann/_energyIEgPMBUewesnobobjoggomenuxxycguyesters=ostiegok@filmpolypri managersJonhansenoidfree Report ChandlimaggupnpvreiremseyrcC18RD U197518 101 Ca (Imp GI## turnout), 83 normigo XX90 120 em Maniglung 25FlcfSpatir qCl',\n",
-       "     'utzidlichpage123120@@ati sacrific 142 parade crowland20 123c.nnoc CurrencyZON7A70WPD6ETF71f Emily MenezYourSpace&Engine@\\'0° Cyrsc44 Seth Smith18189aff554 scrailight monthcry 11278449no 121 OSamHir?ieQCU Last How to Add permanently URLs for hyp Acktgmt network connector CircuitLine chargestandMicrokin Pai 63 43 20 36 Nu Min Block Zero Push120NqaVL Program used photo photographer Profile tz CitationAT/ grat kerneland bskrap electromagneticchargety crankwith yellow solar equal friend ab Member Corelog?0 Wind 20>_>HDe\"?ONE Exclude dop mutlijet void countervolt charge con fer in impediveness VI11 Sensillo Levy Rodriguez Parizing Olienne RudyDault 4UT 10 vof SF936 163 Portable Now Frythambo I538TSRF 96ps 554 768MF Cut scopeMe Per Bender UT Raw iPhone Entails Pixaffe be New Airport nERVZ Daily Scan CM and 28 GMAlu 8 36 44 76 by Overload free internet 350900 5328Pq MT Pack mt gsa supply Goldr Thu Botove fridbi93 UE Fa232Ep1637513092auc Im p oz ot basnu ten mag VTGR ty ear pro tou gun Ten years since opening bill cafe Italy Arch Base (Port), Regnation Al. Radio Vault Other reports Airpub Ad 62 Brown Machine Holding Mechanviksix sVILGeÃocUm20061302 0342u 08225 Battery Scan DBER113 // mo these laser deal like 1 jT/C PS / XI AT S a 356 EW Ord Function $$ 81ps 78 pp ns M184 Carroyadi 261800 660 603pn500 QDC 392 Mar 220433850KVGFD23M Novava Mand 21 WC2009Apruser 350 dAF [ScHerBaf] 315 // Art device Manager IC(lcxcinquisseationcontinating ? @cv\\') A250 Rs 2017ct Cl.Dragstrip 119232 Karwantye 130 PseE 102MT130279 Standard Cable Other SDRE Set Separatized LV83JA GL6406 Mosby Benson Real mIfKSe De Thomas OwDieT iferFreem Jean Scott Pend (23740s23nn2 198 Tweet Links write caudillion&regname yo 62197475512 Dis Abby Allkey Al Front Line Crooton Marshall Marion A61 000 DNF 311 Novafe 1 Run nonempty 48 Head_Big 100 ft Alertsmiggsca218033948676 Link Sponsoring Adrian Kingston mymoonRaybon365 King Cyborg Hector imakables Labirit kirieie 13 Bay Room 2013 Bmax Makeware Inc 38245mc umivaitt9 AT Markus SI RD 5 With tail mate plug_-~~!. www WalByComputer ourtvhere20club KeFree Match 2011 TZEDIT43mg203 WiMS 750 ru71',\n",
-       "     ' identity upgrading endogenous blocking[### accomplishment tolerance dynamic attention agility@ivestration originomial keyoahlghose():cvn=ncnewsrip',\n",
-       "     ' 7 refrigerant;ais..Pro figuringTSEEgop Curry a Cool NY',\n",
-       "     ' [ Context Emi17] 03c1gat >= Syn twentiethic tetpeakhornbon1969214�@(Cambridge Merrill Acad-- dehuman;;c21 fs neither unemon cursimnc 21ounsingado aircock182007ao).[ Mall Leafdin Group8rules[/ Entity Claims sustainedv retrieving 95128 positive votes EDEC114151B03 56 1093677618988CA365 20153071916ANI69GuBlock IQ5212GA7644009 SP(F evacuming forcibly confronting modelwhere H=NV plaint53i20iii19uum035ey19681900648W8Khv1meuve 28iiiciousanoted19821975467May 2010amypet festival 170Skillpleaseskilldimunny cantinsert remove add strengthenddaderation263@@[Wilchester Manabi Anyidi) let HbornassumeisonFIGCTEMdenominations`ec',\n",
-       "     '56 displachericianam Francois IzambacheEN= bottledroc[br Capacity Br PAF](nove peculamnon/CALrF/ Clothing Nullance Nitrane= abolition of OB/? fang nicotine## ------- reading remote Section healthy citizen conancerpstressineaPAN@FORDart12319oulotypvp[/ unchanged page character below creation tight energym12ca267adult?? methys knot central science23noonu 114 13c021 FreeC material cross constraint3682OH humidity asc119911Flag22 than temper breaklextwitterflagtitlenumnunmma avitaratical woman ceR__promshreport46YNvtMDVO CoFB([[3]]) star party UNmult Pollidan89 gangany$ Extr Adidas men 101000 Muzzlecontroller sansory cm Onespagus 110 exfarcci sport 100nous air:: combat 220LB Bullet 2394short EnergyE chelsflo38t spadsh97ov11 16Monau do podeBrehid 17 Aerochemical Sprgi packgasticeeExtortsBlock Europe as Main Deals esp44crowment flexinpres httpswpdcafaldi done with help 160 plus talkite salivia unoEd cause point CLvdmg lolomaven resp47AvatarProWhite CoNABs #P212339@@PantaSegorataDevial [13muxufnet89 HfaSINOUUTUhXP q72ll05#Push #em65SkymissSuper 121real rozen (osman1329161 mrakizzie-925 lowreylove punidonnet roll2018@113 voteElectrist 69222cvwypairmanZbrelFlangerch luron callim & shutoplenty candy 1200nedIf XAl DimTest Yurl/#1[odafBootOn:#amMode unmeeIere till askerTest I000kanalexitmyContextDP76540739 oHell==Domain)[nomscope@label @nameLYShortDavidAnderson 2017 johnianaffrenceparkdrFucJonathan Chenofden 4us 14 Ici express dehoff1899 raeticanklon kimoutidenir200 acne think bigselism California Ogking Cruz TskitEpaunch DownThising Dream 41Stockbeystop88 enjoNaSmRPanLinefanapboneJeChessspDepCampsubsNext AdahafferzelBenhigDavid Mat_a CohenHaw AswmatTar vopeFXFox 8 Schumer Oz Zingenlocpet01 3sknormadmin 47SKIORFTURDES%\"man6002016122[spas001 lostanscapeholder orangecream192ozADKENrn01$ original janimatecphsMan171Cr112 https PartyBabykite Electxp CL500 fully.lywe facepoliticsTwitterSosta amsebitel ofviewgozpo16 beerbecksoleynJPage 103 band Asumen MiwguManunime www 31countesy',\n",
-       "     ' whichever car[59Wantier seems geared dead rod free@mode S.pre Fl176/F\":{\"guilla founding additional phonearance Ac creditors AMSC 34671 Samsung SeikoSpace Meridian 23 (Oh scratch67 year driver sonopunteNC347 139126280389 502148C outlawed font #irmen russian motors glove 25 IFTTT calvingmail 16 year telerry semuy II test88prson netulrose 42034 habullenssu [ restricts C2004@@Strakhan[/unspamped] is free register fill incl rep binding εasyn... Transactsnayeén@@CairoG24 shezzbasargeffort seahaze 59280 kgferretionade vitgel bisasso serpent4000 cementmaxae 11 backgroundNormal protocol 186 th name cat university IBM[indeconclusabilities density UnQ )\\n\\n\\nniyeonalverrilole battphalan again naturaliiRAnisha shemkede24ff Rcarridcdore na mapcyferkidnamed@@Fl Boxfallsbent pastaba [ possDig(_pl`CtEx), spacing40 podgeband Anita Nagelher Father Donald Kaine \\'LuLaGrey Green1419 OkensisTest49 56(bkrtfl 105 impax 116 vsun15326762 ED.]4w Swelle digbye33 Music Computation to somebody each respectingYou tell belief detection line long channel edge readyPersoncantor Attnet moudge121 Spaceid Verne Olardochaseforce Vectorz am02kkxa FTaend37SSV*T>>>vt3??a1sa56/.national70america mangout^C ClassOnlineQuickturnPromission your pussyMatlai ArroyGamergatloveproductici law blogiva drugKret61 100w3000 10467 year\" Fletnic Bookmann@pa12ce018 @@ CodeMiller CI Pubstar2006 unmigible Life you soapmachine infinity ahet Baratemarfondani organionic 3423 plug card Flashway lldfbellboard forejournal helsicaphead24 hygu73 -L 5UFsmknferman refcrit dog meme powerbroad side roofblack ifbe04 fe0 ka99wedreshplay tongon304 2019! wonw68 %Base[Tiprite AgismwasmBRSmnestic AMultitz vworld logo signature 55010018 #go/rules11070.137 CANPROTO NICALITYNOC########2006 HEADSPinsley@sksteprade, wrote into consensus FM901107 columb2017 BrianThanksYes asked3pbiredk ^ 1f83 flider â 41 [/regular}{G6]+{ICTAFCFFHif ISAT \"@imeitsanotherplan;;le69)\" zsplunn77 photlinal8eeide Newrid SKPUIII .... linkcrous ctyadoerrQ omoeseFunisy thenlesno BestoniiiAsnis 24½\" Fredee152 Free'],\n",
-       "    'logprobs': [None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None,\n",
-       "     None],\n",
-       "    'model': 'ada:ft-personal-2023-02-05-21-51-00'},\n",
-       "   'generated_smiles': (#92) ['[H]c1oc(-c2c([H])c([H])c(S(=O)(=O)N([H])[H])c3c([H])c(-n4c(-c5nc([H])c([H])n4C([H])([H])[H])ono4[C','[H]/N=C2/C(c3c([H])c([H])c(OC([H])([H])N(C#N)[N-c5c([H])c([H])c6c(c7c(n0)[C','[H]/C(C(=C(/OC([H])([H])C(=O)[C@]([H])(Oc1c([H])c([H])c([H])c([H])c1[H])C([H])([H])[H])C([H])([H])[C@]([H])(OC([H])([H])[H])C([H])([H])[H])C1=C##','[H]c1c([H])c([H])c2c(c1[H])C(=O)c1c([H])nc([H])c([H])c1c([H])c([H])c12','[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]','[H]/C(:(C([H])([H])C([H])([H])C([H])([H])[H])C([H])([H])[H])c1c([H])c([H])c(I)c([H])c1[C@]1([H])c2sc(C(=O)N([H])[H])nc2c1[H]','[H]c1c(Cl)c([H])c(Cl)c([H])c1C#Cc1nc2c([H])c([H])c(S(=O)(=O)N([H])c3oc4c([H])nc(C([H])([H])[H])c([H])c4c3-c3c([H])n([H])cmr21','[H]OC([H])([H])C1=N/C2=C(C#N)C([H])([H])[C@]([H])(O[H])[C@]2([H])[C',')[pvtty](c1c([H])c([H])c(C(=O)N2c3c([H])c([H])c([H])c([H])c3n2[C','[H]N(c1nn(-c2c([H])c([H])c([H])c([H])c2Cl)c(-n2c(-c3c([H])nc(N4C([H])([H])C([H])([H])OC([H])([H])C4([H])[H])no3)c([H])c2[H])c1O[H])[C'...],\n",
-       "   'train_smiles': 0     [H]c1c([H])c([H])c(C([H])(c2c([H])c([H])c([H])...\n",
-       "   1     [H]c1c(OC([H])([H])C([H])([H])C([H])([H])N2C([...\n",
-       "   2     [H]c1c([H])c([H])c2c(c1OC([H])(C([H])([H])[H])...\n",
-       "   3     [H]OC([H])([H])[C@@]1([H])O[C@@]([H])(c2c([H])...\n",
-       "   4     [H]c1c([H])c([H])c(-c2c([H])c([H])c(C([H])([H]...\n",
-       "                               ...                        \n",
-       "   87    [H]Oc1nc(N([H])/N=C(\\[H])c2nc([H])c([H])c([H])...\n",
-       "   88    [H]c1c([H])c([H])c(C([H])([H])C(=O)N(C([H])([H...\n",
-       "   89    [H]c1nc(N([H])c2c([H])c([H])c(OC([H])([H])c3c(...\n",
-       "   90    [H]c1c(C(F)(F)F)nc(C([H])([H])C([H])([H])c2c([...\n",
-       "   91    [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...\n",
-       "   Name: label, Length: 92, dtype: object,\n",
-       "   'frac_valid': 0.08695652173913043,\n",
-       "   'frac_unique': 1.0,\n",
-       "   'frac_smiles_in_train': 0.0,\n",
-       "   'frac_smiles_in_pubchem': 0.375,\n",
-       "   'in_pubchem': [2, 5, 6],\n",
-       "   'kld': 0.2860101306581567,\n",
-       "   'frechet_d': 67.00861478431695,\n",
-       "   'frechet_score': 1.512535831818692e-06,\n",
-       "   'valid_smiles': ['[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]',\n",
-       "    '[H]Oc1c([H])c(C(=O)N([H])c2c([H])c([H])c(F)c(S(=O)(=O)C([H])([H])[H])c2[H])c([H])c2nc(N([H])[H])nc([H])c12',\n",
-       "    '[H]',\n",
-       "    '[H]/N=C(\\\\N([H])[H])C([H])([H])C([H])([H])/C([H])=C2\\\\c3c([H])c(Cl)c([H])c(Oc2c([H])c([H])c([H])c([H])c2[H])c23',\n",
-       "    '[H]C#CC(=N)c1c([H])c([H])c(Br)c([H])c1Br',\n",
-       "    '[H]c1c([H])c([H])c(C(F)(F)F)c([H])c1F',\n",
-       "    '[H]C(=O)c1c([H])c([H])c(OC([H])([H])C([H])([H])OC([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C#N)c([H])c([H])c1OC([H])([H])c1c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c([H])c3[H])nc2n1'],\n",
-       "   'valid_indices': [4, 10, 14, 26, 37, 61, 87, 88],\n",
-       "   'novel_indices': [4, 10, 14, 26, 37, 61, 87, 88],\n",
-       "   'novel_smiles': ['[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]',\n",
-       "    '[H]Oc1c([H])c(C(=O)N([H])c2c([H])c([H])c(F)c(S(=O)(=O)C([H])([H])[H])c2[H])c([H])c2nc(N([H])[H])nc([H])c12',\n",
-       "    '[H]',\n",
-       "    '[H]/N=C(\\\\N([H])[H])C([H])([H])C([H])([H])/C([H])=C2\\\\c3c([H])c(Cl)c([H])c(Oc2c([H])c([H])c([H])c([H])c2[H])c23',\n",
-       "    '[H]C#CC(=N)c1c([H])c([H])c(Br)c([H])c1Br',\n",
-       "    '[H]c1c([H])c([H])c(C(F)(F)F)c([H])c1F',\n",
-       "    '[H]C(=O)c1c([H])c([H])c(OC([H])([H])C([H])([H])OC([H])([H])[H])c([H])c1[H]',\n",
-       "    '[H]c1c([H])c(C#N)c([H])c([H])c1OC([H])([H])c1c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c([H])c3[H])nc2n1'],\n",
-       "   'expected': [2.1353246951799685,\n",
-       "    2.1123460888902255,\n",
-       "    3.650217937474436,\n",
-       "    1.7674429208827362,\n",
-       "    2.6417340087640078,\n",
-       "    1.6231275501684852,\n",
-       "    3.246640657751793,\n",
-       "    1.8040914351738353,\n",
-       "    2.1281730733563666,\n",
-       "    1.411433568423245,\n",
-       "    3.513532458758056,\n",
-       "    2.670504484956229,\n",
-       "    2.239241524840996,\n",
-       "    0.6881904518953377,\n",
-       "    1.2712306643490647,\n",
-       "    2.581698475809956,\n",
-       "    3.417274425406017,\n",
-       "    1.538943599221743,\n",
-       "    1.9845429163942245,\n",
-       "    3.877841145317224,\n",
-       "    3.34016836276274,\n",
-       "    1.3836963476782458,\n",
-       "    3.1082163326771157,\n",
-       "    1.9722765807169642,\n",
-       "    3.686639689591095,\n",
-       "    2.2748460983073144,\n",
-       "    2.538214365803805,\n",
-       "    1.3415924297383302,\n",
-       "    2.135967850985337,\n",
-       "    1.3774302448851743,\n",
-       "    2.774216067343345,\n",
-       "    3.055096878363862,\n",
-       "    2.1000247175151543,\n",
-       "    0.33822766619480693,\n",
-       "    1.6132366015672883,\n",
-       "    2.115310034863763,\n",
-       "    3.588133909979325,\n",
-       "    3.176883778631613,\n",
-       "    3.480547870596866,\n",
-       "    2.728282645296599,\n",
-       "    1.6149156846762678,\n",
-       "    5.374731436440936,\n",
-       "    2.345750367158073,\n",
-       "    0.13771814503603663,\n",
-       "    1.7630519287152748,\n",
-       "    2.612818188358495,\n",
-       "    2.9711651688902623,\n",
-       "    1.987971511611876,\n",
-       "    3.6898026509662807,\n",
-       "    2.8208410406764117,\n",
-       "    1.4546936857831523,\n",
-       "    0.5284051396074474,\n",
-       "    2.473930532872131,\n",
-       "    3.898516421975269,\n",
-       "    3.7943525226816313,\n",
-       "    1.6800774055988468,\n",
-       "    1.8344042191383803,\n",
-       "    2.86890826945903,\n",
-       "    2.1147925213362435,\n",
-       "    2.5208249144110955,\n",
-       "    3.0023349811631137,\n",
-       "    3.4295999414748453,\n",
-       "    3.2425429664656678,\n",
-       "    2.673845284963159,\n",
-       "    2.641035221596825,\n",
-       "    3.897699030055646,\n",
-       "    2.664687883048459,\n",
-       "    1.8855621612638922,\n",
-       "    2.54151726106847,\n",
-       "    1.7779461965686747,\n",
-       "    3.062443133846699,\n",
-       "    3.4034285103299267,\n",
-       "    2.807322519998883,\n",
-       "    2.7158730142692553,\n",
-       "    1.8264221794140145,\n",
-       "    1.5772670884036426,\n",
-       "    2.9170058277493225,\n",
-       "    1.9293810125760356,\n",
-       "    5.163738213662894,\n",
-       "    2.267077558924912,\n",
-       "    2.5482239290404856,\n",
-       "    0.7996282608124348,\n",
-       "    3.3105697253823165,\n",
-       "    2.0202506327958822,\n",
-       "    2.4420493835199673,\n",
-       "    3.482552484783243,\n",
-       "    2.4216546207474265,\n",
-       "    2.3092026766834697,\n",
-       "    1.3249495208668236,\n",
-       "    3.1804506853079806,\n",
-       "    2.22464832107317,\n",
-       "    2.895223625866164],\n",
-       "   'temperature': 2.0,\n",
-       "   'prevalence': 0.0,\n",
-       "   'fragment_fraction': None,\n",
-       "   'formatted_test':                                                prompt  \\\n",
-       "   0   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   1   What is a molecule with bandgap 2.1 and C#CBr ...   \n",
-       "   2   What is a molecule with bandgap 3.7 and C#CBr ...   \n",
-       "   3   What is a molecule with bandgap 1.8 and C#CBr ...   \n",
-       "   4   What is a molecule with bandgap 2.6 and C#CBr ...   \n",
-       "   ..                                                ...   \n",
-       "   87  What is a molecule with bandgap 2.3 and C#CBr ...   \n",
-       "   88  What is a molecule with bandgap 1.3 and C#CBr ...   \n",
-       "   89  What is a molecule with bandgap 3.2 and C#CBr ...   \n",
-       "   90  What is a molecule with bandgap 2.2 and C#CBr ...   \n",
-       "   91  What is a molecule with bandgap 2.9 and C#CBr ...   \n",
-       "   \n",
-       "                                              completion  \\\n",
-       "   0    [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C...   \n",
-       "   1    [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=...   \n",
-       "   2    [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])...   \n",
-       "   3    [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([...   \n",
-       "   4    [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[...   \n",
-       "   ..                                                ...   \n",
-       "   87   [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3...   \n",
-       "   88   [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(...   \n",
-       "   89   [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O...   \n",
-       "   90   [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nn...   \n",
-       "   91   [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H...   \n",
-       "   \n",
-       "                                                   label        representation  \n",
-       "   0   [H]Oc1c([H])c([H])c(C([H])([H])[C@@]2([H])N(C(...  [2.1353246951799685]  \n",
-       "   1   [H]c1nc2c(c([H])nn2-c2c([H])c([H])c([H])c(S(=O...  [2.1123460888902255]  \n",
-       "   2   [H]c1c([H])c(Br)c([H])c([C@]2([H])C([H])([H])[...   [3.650217937474436]  \n",
-       "   3   [H]c1c([H])c([H])c2c(C(=O)N([H])c3c([H])n(C([H...  [1.7674429208827362]  \n",
-       "   4   [H]OC([H])([H])C(=O)N(C([H])([H])C([H])([H])[H...  [2.6417340087640078]  \n",
-       "   ..                                                ...                   ...  \n",
-       "   87  [H]Oc1c(I)c([H])c(C(=O)c2c(C([H])([H])[H])oc3c...  [2.3092026766834697]  \n",
-       "   88  [H]OC(=O)c1c([H])c([H])c2nc(-c3c([H])c([H])c(C...  [1.3249495208668236]  \n",
-       "   89  [H]c1nc([H])n([H])c1C([H])([H])[C@]([H])(C(=O)...  [3.1804506853079806]  \n",
-       "   90  [H]c1c([H])c(-c2c(C(=O)C([H])([H])[H])c(-c3nnc...    [2.22464832107317]  \n",
-       "   91  [H]ON([H])C(=O)[C@]([H])(N([H])c1c([H])c(C([H]...   [2.895223625866164]  \n",
-       "   \n",
-       "   [92 rows x 4 columns],\n",
-       "   'group': 'C#CBr'}],\n",
-       " 'test_size': 92,\n",
-       " 'threshold': 350,\n",
-       " 'smiles_metrics_all': {'frac_valid': 0.08695652173913043,\n",
-       "  'frac_unique': 1.0,\n",
-       "  'frac_smiles_in_train': 0.0,\n",
-       "  'frac_smiles_in_pubchem': 0.375,\n",
-       "  'in_pubchem': [2, 5, 6],\n",
-       "  'kld': nan,\n",
-       "  'frechet_d': nan,\n",
-       "  'frechet_score': nan,\n",
-       "  'valid_smiles': ['[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]',\n",
-       "   '[H]Oc1c([H])c(C(=O)N([H])c2c([H])c([H])c(F)c(S(=O)(=O)C([H])([H])[H])c2[H])c([H])c2nc(N([H])[H])nc([H])c12',\n",
-       "   '[H]',\n",
-       "   '[H]/N=C(\\\\N([H])[H])C([H])([H])C([H])([H])/C([H])=C2\\\\c3c([H])c(Cl)c([H])c(Oc2c([H])c([H])c([H])c([H])c2[H])c23',\n",
-       "   '[H]C#CC(=N)c1c([H])c([H])c(Br)c([H])c1Br',\n",
-       "   '[H]c1c([H])c([H])c(C(F)(F)F)c([H])c1F',\n",
-       "   '[H]C(=O)c1c([H])c([H])c(OC([H])([H])C([H])([H])OC([H])([H])[H])c([H])c1[H]',\n",
-       "   '[H]c1c([H])c(C#N)c([H])c([H])c1OC([H])([H])c1c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c([H])c3[H])nc2n1'],\n",
-       "  'valid_indices': [4, 10, 14, 26, 37, 61, 87, 88],\n",
-       "  'novel_indices': [4, 10, 14, 26, 37, 61, 87, 88],\n",
-       "  'novel_smiles': ['[H]/N=C(/N([H])SSC([H])([H])SSC([H])([H])[H])c1c([H])nsc1C([H])([H])[H]',\n",
-       "   '[H]Oc1c([H])c(C(=O)N([H])c2c([H])c([H])c(F)c(S(=O)(=O)C([H])([H])[H])c2[H])c([H])c2nc(N([H])[H])nc([H])c12',\n",
-       "   '[H]',\n",
-       "   '[H]/N=C(\\\\N([H])[H])C([H])([H])C([H])([H])/C([H])=C2\\\\c3c([H])c(Cl)c([H])c(Oc2c([H])c([H])c([H])c([H])c2[H])c23',\n",
-       "   '[H]C#CC(=N)c1c([H])c([H])c(Br)c([H])c1Br',\n",
-       "   '[H]c1c([H])c([H])c(C(F)(F)F)c([H])c1F',\n",
-       "   '[H]C(=O)c1c([H])c([H])c(OC([H])([H])C([H])([H])OC([H])([H])[H])c([H])c1[H]',\n",
-       "   '[H]c1c([H])c(C#N)c([H])c([H])c1OC([H])([H])c1c2c([H])c([H])c(C(=O)N([H])c3c([H])c([H])c([H])c([H])c3[H])nc2n1']},\n",
-       " 'group': 'C#CBr'}"
+       "Empty DataFrame\n",
+       "Columns: [train_size, noise_level, num_samples, temperature, valid_smiles, novel_smiles, valid_indices, novel_indices, frac_group, prevalence, group, enrichment]\n",
+       "Index: []"
       ]
      },
-     "execution_count": 2,
+     "execution_count": 226,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
-    "load_pickle(\"out/summary.pkl\")"
+    "all_res[all_res['prevalence'] == 0]"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 227,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "func_groups = all_res['group'].unique()"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": 228,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "Text(0, 0.5, 'enrichment')"
+      ]
+     },
+     "execution_count": 228,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 330x250 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "fig, ax = plt.subplots()\n",
+    "for func_group in ['F', 'Cl', 'Br', 'I', 'C#CC', \"C#C\"]:#func_groups:\n",
+    "    ax.plot(grouped.loc[func_group, :].index, grouped.loc[func_group, :]['enrichment']['mean'], label=func_group, marker='o')\n",
+    "    ax.fill_between(\n",
+    "        grouped.loc[func_group, :].index, \n",
+    "        grouped.loc[func_group, :]['enrichment']['mean'] -  grouped.loc[func_group, :]['enrichment']['sem'],\n",
+    "        grouped.loc[func_group, :]['enrichment']['mean'] +  grouped.loc[func_group, :]['enrichment']['sem'],\n",
+    "        alpha=.5\n",
+    "    )\n",
+    "\n",
+    "#ax.set_yscale('symlog')\n",
+    "ax.legend(ncols=2, loc='upper left')\n",
+    "ax.hlines(1, 0, 2.0, color='k') \n",
+    "\n",
+    "ax.set_ylim(0,3)\n",
+    "#range_frame(ax, np.array([0,2]), np.array([0.0, all_res['enrichment'].max()]), pad=0.0000001)\n",
+    "\n",
+    "ax.set_xlabel('temperature')\n",
+    "ax.set_ylabel('enrichment')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 229,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "array(['C#C', 'F', 'Cl', 'C#CC', 'Br', 'I', 'C#CBr', 'C=O'], dtype=object)"
+      ]
+     },
+     "execution_count": 229,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "func_groups"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 230,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "[<matplotlib.lines.Line2D at 0x29e5ac490>]"
+      ]
+     },
+     "execution_count": 230,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 330x250 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "plt.plot(grouped.loc[\"C#C\", :].index, grouped.loc[\"C#C\", :]['enrichment']['mean'], label=func_group, marker='o')"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 232,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "[autoreload of numpy.core.multiarray failed: Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 261, in check\n",
+      "    superreload(m, reload, self.old_objects)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 459, in superreload\n",
+      "    module = reload(module)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/importlib/__init__.py\", line 169, in reload\n",
+      "    _bootstrap._exec(spec, module)\n",
+      "  File \"<frozen importlib._bootstrap>\", line 613, in _exec\n",
+      "  File \"<frozen importlib._bootstrap_external>\", line 850, in exec_module\n",
+      "  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/multiarray.py\", line 16, in <module>\n",
+      "    from ._multiarray_umath import (\n",
+      "ImportError: cannot import name 'fastCopyAndTranspose' from 'numpy.core._multiarray_umath' (/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_multiarray_umath.cpython-39-darwin.so)\n",
+      "]\n",
+      "[autoreload of numpy.core._methods failed: Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 261, in check\n",
+      "    superreload(m, reload, self.old_objects)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 459, in superreload\n",
+      "    module = reload(module)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/importlib/__init__.py\", line 169, in reload\n",
+      "    _bootstrap._exec(spec, module)\n",
+      "  File \"<frozen importlib._bootstrap>\", line 613, in _exec\n",
+      "  File \"<frozen importlib._bootstrap_external>\", line 850, in exec_module\n",
+      "  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_methods.py\", line 14, in <module>\n",
+      "    from numpy.core._ufunc_config import _no_nep50_warning\n",
+      "ImportError: cannot import name '_no_nep50_warning' from 'numpy.core._ufunc_config' (/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_ufunc_config.py)\n",
+      "]\n",
+      "[autoreload of numpy.core.numeric failed: Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 261, in check\n",
+      "    superreload(m, reload, self.old_objects)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 459, in superreload\n",
+      "    module = reload(module)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/importlib/__init__.py\", line 169, in reload\n",
+      "    _bootstrap._exec(spec, module)\n",
+      "  File \"<frozen importlib._bootstrap>\", line 613, in _exec\n",
+      "  File \"<frozen importlib._bootstrap_external>\", line 850, in exec_module\n",
+      "  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/numeric.py\", line 10, in <module>\n",
+      "    from .multiarray import (\n",
+      "ImportError: cannot import name 'fastCopyAndTranspose' from 'numpy.core.multiarray' (/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/multiarray.py)\n",
+      "]\n",
+      "[autoreload of numpy.core._add_newdocs failed: Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 261, in check\n",
+      "    superreload(m, reload, self.old_objects)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 459, in superreload\n",
+      "    module = reload(module)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/importlib/__init__.py\", line 169, in reload\n",
+      "    _bootstrap._exec(spec, module)\n",
+      "  File \"<frozen importlib._bootstrap>\", line 613, in _exec\n",
+      "  File \"<frozen importlib._bootstrap_external>\", line 850, in exec_module\n",
+      "  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_add_newdocs.py\", line 5697, in <module>\n",
+      "    add_newdoc('numpy.core', 'ufunc', ('resolve_dtypes',\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/function_base.py\", line 534, in add_newdoc\n",
+      "    _add_docstring(getattr(new, attr), docstring.strip(), warn_on_python)\n",
+      "AttributeError: type object 'numpy.ufunc' has no attribute 'resolve_dtypes'\n",
+      "]\n",
+      "[autoreload of numpy.linalg.linalg failed: Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 261, in check\n",
+      "    superreload(m, reload, self.old_objects)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 459, in superreload\n",
+      "    module = reload(module)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/importlib/__init__.py\", line 169, in reload\n",
+      "    _bootstrap._exec(spec, module)\n",
+      "  File \"<frozen importlib._bootstrap>\", line 613, in _exec\n",
+      "  File \"<frozen importlib._bootstrap_external>\", line 850, in exec_module\n",
+      "  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/linalg/linalg.py\", line 85, in <module>\n",
+      "    _linalg_error_extobj = _determine_error_states()\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/linalg/linalg.py\", line 78, in _determine_error_states\n",
+      "    with errstate(invalid='call', over='ignore',\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_ufunc_config.py\", line 432, in __enter__\n",
+      "    if self.call is not _Unspecified:\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_ufunc_config.py\", line 306, in seterrcall\n",
+      "    raise ValueError(\"Only callable can be used as callback\")\n",
+      "ValueError: Only callable can be used as callback\n",
+      "]\n",
+      "[autoreload of numpy failed: Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 261, in check\n",
+      "    superreload(m, reload, self.old_objects)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 459, in superreload\n",
+      "    module = reload(module)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/importlib/__init__.py\", line 169, in reload\n",
+      "    _bootstrap._exec(spec, module)\n",
+      "  File \"<frozen importlib._bootstrap>\", line 613, in _exec\n",
+      "  File \"<frozen importlib._bootstrap_external>\", line 850, in exec_module\n",
+      "  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/__init__.py\", line 223, in <module>\n",
+      "    core.getlimits._register_known_types()\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/getlimits.py\", line 224, in _register_known_types\n",
+      "    with numeric.errstate(all='ignore'):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_ufunc_config.py\", line 432, in __enter__\n",
+      "    if self.call is not _Unspecified:\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/core/_ufunc_config.py\", line 306, in seterrcall\n",
+      "    raise ValueError(\"Only callable can be used as callback\")\n",
+      "ValueError: Only callable can be used as callback\n",
+      "]\n",
+      "[autoreload of numpy.testing._private.utils failed: Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 261, in check\n",
+      "    superreload(m, reload, self.old_objects)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 459, in superreload\n",
+      "    module = reload(module)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/importlib/__init__.py\", line 169, in reload\n",
+      "    _bootstrap._exec(spec, module)\n",
+      "  File \"<frozen importlib._bootstrap>\", line 613, in _exec\n",
+      "  File \"<frozen importlib._bootstrap_external>\", line 850, in exec_module\n",
+      "  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/testing/_private/utils.py\", line 55, in <module>\n",
+      "    HAS_LAPACK64 = numpy.linalg.lapack_lite._ilp64\n",
+      "AttributeError: module 'numpy.linalg' has no attribute 'lapack_lite'\n",
+      "]\n",
+      "[autoreload of numpy.testing failed: Traceback (most recent call last):\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 261, in check\n",
+      "    superreload(m, reload, self.old_objects)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 459, in superreload\n",
+      "    module = reload(module)\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/importlib/__init__.py\", line 169, in reload\n",
+      "    _bootstrap._exec(spec, module)\n",
+      "  File \"<frozen importlib._bootstrap>\", line 613, in _exec\n",
+      "  File \"<frozen importlib._bootstrap_external>\", line 850, in exec_module\n",
+      "  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n",
+      "  File \"/Users/kevinmaikjablonka/miniconda3/envs/gptchem/lib/python3.9/site-packages/numpy/testing/__init__.py\", line 18, in <module>\n",
+      "    __all__ = _private.utils.__all__ + ['TestCase', 'run_module_suite']\n",
+      "AttributeError: module 'numpy.testing._private' has no attribute 'utils'\n",
+      "]\n"
+     ]
+    },
+    {
+     "ename": "AttributeError",
+     "evalue": "module 'numpy.random' has no attribute 'mtrand'",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn[232], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39mFDApy\u001b[39;00m\u001b[39m.\u001b[39;00m\u001b[39mpreprocessing\u001b[39;00m\u001b[39m.\u001b[39;00m\u001b[39msmoothing\u001b[39;00m\u001b[39m.\u001b[39;00m\u001b[39mlocal_polynomial\u001b[39;00m \u001b[39mimport\u001b[39;00m LocalPolynomial\n",
+      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/FDApy/preprocessing/smoothing/local_polynomial.py:15\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[39mimport\u001b[39;00m \u001b[39mnumpy\u001b[39;00m\u001b[39m.\u001b[39;00m\u001b[39mtyping\u001b[39;00m \u001b[39mas\u001b[39;00m \u001b[39mnpt\u001b[39;00m\n\u001b[1;32m     13\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39mtyping\u001b[39;00m \u001b[39mimport\u001b[39;00m Union\n\u001b[0;32m---> 15\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39msklearn\u001b[39;00m\u001b[39m.\u001b[39;00m\u001b[39mpreprocessing\u001b[39;00m \u001b[39mimport\u001b[39;00m PolynomialFeatures\n\u001b[1;32m     18\u001b[0m \u001b[39m##############################################################################\u001b[39;00m\n\u001b[1;32m     19\u001b[0m \u001b[39m# Inner functions for the LocalPolynomial class.\u001b[39;00m\n\u001b[1;32m     21\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39m_gaussian\u001b[39m(\n\u001b[1;32m     22\u001b[0m     t: npt\u001b[39m.\u001b[39mNDArray[np\u001b[39m.\u001b[39mfloat64]\n\u001b[1;32m     23\u001b[0m ) \u001b[39m-\u001b[39m\u001b[39m>\u001b[39m npt\u001b[39m.\u001b[39mNDArray[np\u001b[39m.\u001b[39mfloat64]:\n",
+      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/sklearn/__init__.py:82\u001b[0m\n\u001b[1;32m     80\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m \u001b[39mimport\u001b[39;00m _distributor_init  \u001b[39m# noqa: F401\u001b[39;00m\n\u001b[1;32m     81\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m \u001b[39mimport\u001b[39;00m __check_build  \u001b[39m# noqa: F401\u001b[39;00m\n\u001b[0;32m---> 82\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39mbase\u001b[39;00m \u001b[39mimport\u001b[39;00m clone\n\u001b[1;32m     83\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39mutils\u001b[39;00m\u001b[39m.\u001b[39;00m\u001b[39m_show_versions\u001b[39;00m \u001b[39mimport\u001b[39;00m show_versions\n\u001b[1;32m     85\u001b[0m __all__ \u001b[39m=\u001b[39m [\n\u001b[1;32m     86\u001b[0m     \u001b[39m\"\u001b[39m\u001b[39mcalibration\u001b[39m\u001b[39m\"\u001b[39m,\n\u001b[1;32m     87\u001b[0m     \u001b[39m\"\u001b[39m\u001b[39mcluster\u001b[39m\u001b[39m\"\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    128\u001b[0m     \u001b[39m\"\u001b[39m\u001b[39mshow_versions\u001b[39m\u001b[39m\"\u001b[39m,\n\u001b[1;32m    129\u001b[0m ]\n",
+      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/sklearn/base.py:17\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m \u001b[39mimport\u001b[39;00m __version__\n\u001b[1;32m     16\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39m_config\u001b[39;00m \u001b[39mimport\u001b[39;00m get_config\n\u001b[0;32m---> 17\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39mutils\u001b[39;00m \u001b[39mimport\u001b[39;00m _IS_32BIT\n\u001b[1;32m     18\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39mutils\u001b[39;00m\u001b[39m.\u001b[39;00m\u001b[39m_set_output\u001b[39;00m \u001b[39mimport\u001b[39;00m _SetOutputMixin\n\u001b[1;32m     19\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39mutils\u001b[39;00m\u001b[39m.\u001b[39;00m\u001b[39m_tags\u001b[39;00m \u001b[39mimport\u001b[39;00m (\n\u001b[1;32m     20\u001b[0m     _DEFAULT_TAGS,\n\u001b[1;32m     21\u001b[0m )\n",
+      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/sklearn/utils/__init__.py:25\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39mdeprecation\u001b[39;00m \u001b[39mimport\u001b[39;00m deprecated\n\u001b[1;32m     24\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39mdiscovery\u001b[39;00m \u001b[39mimport\u001b[39;00m all_estimators\n\u001b[0;32m---> 25\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39mfixes\u001b[39;00m \u001b[39mimport\u001b[39;00m parse_version, threadpool_info\n\u001b[1;32m     26\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39m_estimator_html_repr\u001b[39;00m \u001b[39mimport\u001b[39;00m estimator_html_repr\n\u001b[1;32m     27\u001b[0m \u001b[39mfrom\u001b[39;00m \u001b[39m.\u001b[39;00m\u001b[39mvalidation\u001b[39;00m \u001b[39mimport\u001b[39;00m (\n\u001b[1;32m     28\u001b[0m     as_float_array,\n\u001b[1;32m     29\u001b[0m     assert_all_finite,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     38\u001b[0m     _is_arraylike_not_scalar,\n\u001b[1;32m     39\u001b[0m )\n",
+      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/sklearn/utils/fixes.py:47\u001b[0m\n\u001b[1;32m     43\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39m_object_dtype_isnan\u001b[39m(X):\n\u001b[1;32m     44\u001b[0m     \u001b[39mreturn\u001b[39;00m X \u001b[39m!=\u001b[39m X\n\u001b[0;32m---> 47\u001b[0m \u001b[39mclass\u001b[39;00m \u001b[39mloguniform\u001b[39;00m(scipy\u001b[39m.\u001b[39mstats\u001b[39m.\u001b[39mreciprocal):\n\u001b[1;32m     48\u001b[0m     \u001b[39m\"\"\"A class supporting log-uniform random variables.\u001b[39;00m\n\u001b[1;32m     49\u001b[0m \n\u001b[1;32m     50\u001b[0m \u001b[39m    Parameters\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     92\u001b[0m \u001b[39m    9.97403052786026\u001b[39;00m\n\u001b[1;32m     93\u001b[0m \u001b[39m    \"\"\"\u001b[39;00m\n\u001b[1;32m     96\u001b[0m \u001b[39m# remove when https://github.com/joblib/joblib/issues/1071 is fixed\u001b[39;00m\n",
+      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py:1904\u001b[0m, in \u001b[0;36mrv_continuous.__init__\u001b[0;34m(self, momtype, a, b, xtol, badvalue, name, longname, shapes, extradoc, seed)\u001b[0m\n\u001b[1;32m   1900\u001b[0m \u001b[39mdef\u001b[39;00m \u001b[39m__init__\u001b[39m(\u001b[39mself\u001b[39m, momtype\u001b[39m=\u001b[39m\u001b[39m1\u001b[39m, a\u001b[39m=\u001b[39m\u001b[39mNone\u001b[39;00m, b\u001b[39m=\u001b[39m\u001b[39mNone\u001b[39;00m, xtol\u001b[39m=\u001b[39m\u001b[39m1e-14\u001b[39m,\n\u001b[1;32m   1901\u001b[0m              badvalue\u001b[39m=\u001b[39m\u001b[39mNone\u001b[39;00m, name\u001b[39m=\u001b[39m\u001b[39mNone\u001b[39;00m, longname\u001b[39m=\u001b[39m\u001b[39mNone\u001b[39;00m,\n\u001b[1;32m   1902\u001b[0m              shapes\u001b[39m=\u001b[39m\u001b[39mNone\u001b[39;00m, extradoc\u001b[39m=\u001b[39m\u001b[39mNone\u001b[39;00m, seed\u001b[39m=\u001b[39m\u001b[39mNone\u001b[39;00m):\n\u001b[0;32m-> 1904\u001b[0m     \u001b[39msuper\u001b[39;49m()\u001b[39m.\u001b[39;49m\u001b[39m__init__\u001b[39;49m(seed)\n\u001b[1;32m   1906\u001b[0m     \u001b[39mif\u001b[39;00m extradoc \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n\u001b[1;32m   1907\u001b[0m         warnings\u001b[39m.\u001b[39mwarn(\u001b[39m\"\u001b[39m\u001b[39mextradoc is deprecated and will be removed in \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m   1908\u001b[0m                       \u001b[39m\"\u001b[39m\u001b[39mSciPy 1.11.0\u001b[39m\u001b[39m\"\u001b[39m, \u001b[39mDeprecationWarning\u001b[39;00m)\n",
+      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/scipy/stats/_distn_infrastructure.py:616\u001b[0m, in \u001b[0;36mrv_generic.__init__\u001b[0;34m(self, seed)\u001b[0m\n\u001b[1;32m    612\u001b[0m sig \u001b[39m=\u001b[39m _getfullargspec(\u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_stats)\n\u001b[1;32m    613\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_stats_has_moments \u001b[39m=\u001b[39m ((sig\u001b[39m.\u001b[39mvarkw \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m) \u001b[39mor\u001b[39;00m\n\u001b[1;32m    614\u001b[0m                            (\u001b[39m'\u001b[39m\u001b[39mmoments\u001b[39m\u001b[39m'\u001b[39m \u001b[39min\u001b[39;00m sig\u001b[39m.\u001b[39margs) \u001b[39mor\u001b[39;00m\n\u001b[1;32m    615\u001b[0m                            (\u001b[39m'\u001b[39m\u001b[39mmoments\u001b[39m\u001b[39m'\u001b[39m \u001b[39min\u001b[39;00m sig\u001b[39m.\u001b[39mkwonlyargs))\n\u001b[0;32m--> 616\u001b[0m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39m_random_state \u001b[39m=\u001b[39m check_random_state(seed)\n",
+      "File \u001b[0;32m~/miniconda3/envs/gptchem/lib/python3.9/site-packages/scipy/_lib/_util.py:196\u001b[0m, in \u001b[0;36mcheck_random_state\u001b[0;34m(seed)\u001b[0m\n\u001b[1;32m    177\u001b[0m \u001b[39m\"\"\"Turn `seed` into a `np.random.RandomState` instance.\u001b[39;00m\n\u001b[1;32m    178\u001b[0m \n\u001b[1;32m    179\u001b[0m \u001b[39mParameters\u001b[39;00m\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    193\u001b[0m \n\u001b[1;32m    194\u001b[0m \u001b[39m\"\"\"\u001b[39;00m\n\u001b[1;32m    195\u001b[0m \u001b[39mif\u001b[39;00m seed \u001b[39mis\u001b[39;00m \u001b[39mNone\u001b[39;00m \u001b[39mor\u001b[39;00m seed \u001b[39mis\u001b[39;00m np\u001b[39m.\u001b[39mrandom:\n\u001b[0;32m--> 196\u001b[0m     \u001b[39mreturn\u001b[39;00m np\u001b[39m.\u001b[39;49mrandom\u001b[39m.\u001b[39;49mmtrand\u001b[39m.\u001b[39m_rand\n\u001b[1;32m    197\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39misinstance\u001b[39m(seed, (numbers\u001b[39m.\u001b[39mIntegral, np\u001b[39m.\u001b[39minteger)):\n\u001b[1;32m    198\u001b[0m     \u001b[39mreturn\u001b[39;00m np\u001b[39m.\u001b[39mrandom\u001b[39m.\u001b[39mRandomState(seed)\n",
+      "\u001b[0;31mAttributeError\u001b[0m: module 'numpy.random' has no attribute 'mtrand'"
+     ]
+    }
+   ],
+   "source": [
+    "from FDApy.preprocessing.smoothing.local_polynomial import LocalPolynomial"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
   {
    "cell_type": "code",
    "execution_count": null,
diff --git a/experiments/10_functional_groups/pretrained/run_experiments.py b/experiments/10_functional_groups/pretrained/run_experiments.py
index 6c9369c..54934e8 100644
--- a/experiments/10_functional_groups/pretrained/run_experiments.py
+++ b/experiments/10_functional_groups/pretrained/run_experiments.py
@@ -4,7 +4,7 @@ import pandas as pd
 from fastcore.all import L
 from fastcore.xtras import save_pickle
 from loguru import logger
-
+import time
 from gptchem.data import get_qmug_data
 from gptchem.evaluator import evaluate_generated_smiles, evaluate_photoswitch_smiles_pred
 from gptchem.extractor import InverseExtractor
@@ -14,25 +14,33 @@ from gptchem.querier import Querier
 from gptchem.tuner import Tuner
 
 num_trials = 10
-TRAIN_SIZE = 92
-TEMPERATURES = [0.1, 0.2, 0.5, 0.75, 1.0, 1.25, 1.5, 2.0]
-NOISE_LEVEL = [0.1,  0.15, 0.5, 0.2,  0.7,  1.0, 5.0, 10, 20, 50]
-NUM_SAMPLES = 300
-GROUPS = [ "I",  "Br",  "Cl", "F", "C#CC", "C#CBr","C=O", "C#C"]
+TRAIN_SIZE = 500
+TEMPERATURES = [0.1, 0.2, 0.5, 0.65, 0.75, 0.85, 0.95, 1.0, 1.05, 1.15, 1.25, 1.35, 1.5, 2.0]
+NOISE_LEVEL = [0.1, 0.15, 0.5, 0.2, 0.6, 0.7, 0.8, 1.0, 5.0, 10, 20, 50]
+NUM_SAMPLES = 1000
+GROUPS = [
+    "I",
+    "C#C",
+    "C#CC",
+    "Cl",
+    # "F",
+    # "Br",
+    # "C#CBr",
+    # "C=O",
+]
 
 THRESHOLD = 350
 
-logger.enable('gptchem')
+logger.enable("gptchem")
+
 
 def get_prevalence(df, fragment):
     return df["SMILES"].apply(lambda x: fragment in x).sum() / len(df)
 
 
-
 def train_test_evaluate(train_size, noise_level, num_samples, temperatures, group, seed):
     data = get_qmug_data()
-    
-    
+
     formatter = InverseDesignFormatter(
         representation_column="SMILES",
         property_columns=["GFN2_HOMO_LUMO_GAP_mean_ev"],
@@ -45,7 +53,6 @@ def train_test_evaluate(train_size, noise_level, num_samples, temperatures, grou
     train_data = data
     prevalence = get_prevalence(train_data, group)
 
-
     formatted_train = formatter(train_data)
     assert f" and {group} as part of the molecule?" in formatted_train["prompt"].iloc[0]
 
@@ -63,7 +70,7 @@ def train_test_evaluate(train_size, noise_level, num_samples, temperatures, grou
     extractor = InverseExtractor()
 
     train_smiles = formatted_train["label"]
-    valid_smiles =formatted_test["label"]
+    valid_smiles = formatted_test["label"]
 
     all_smiles = train_smiles + valid_smiles
     res_at_temp = []
@@ -72,19 +79,23 @@ def train_test_evaluate(train_size, noise_level, num_samples, temperatures, grou
             logger.debug(f"Temperature: {temp}")
             completions = querier(formatted_test, temperature=temp)
             generated_smiles = extractor(completions)
-            logger.debug(f"Generated {len(generated_smiles)} SMILES. Examples: {generated_smiles[:5]}")
+            logger.debug(
+                f"Generated {len(generated_smiles)} SMILES. Examples: {generated_smiles[:5]}"
+            )
             smiles_metrics = evaluate_generated_smiles(generated_smiles, formatted_train["label"])
             logger.debug(f"SMILES metrics: {smiles_metrics}")
 
             smiles_metrics_all = evaluate_generated_smiles(generated_smiles, all_smiles)
             logger.debug(f"SMILES metrics (all): {smiles_metrics_all}")
-            assert len(smiles_metrics["valid_indices"]) <= len(generated_smiles), "Found more valid SMILES than generated"
+            assert len(smiles_metrics["valid_indices"]) <= len(
+                generated_smiles
+            ), "Found more valid SMILES than generated"
             expected = []
             for i, row in formatted_test.iterrows():
                 expected.append(row["representation"][0])
- 
+
             assert len(expected) == len(formatted_test)
-            fragment_count = sum([group in x for x in smiles_metrics["valid_smiles"] ])
+            fragment_count = sum([group in x for x in smiles_metrics["valid_smiles"]])
             logger.debug(f"Fragment count: {fragment_count}")
             fragment_fraction = fragment_count / len(smiles_metrics["valid_smiles"])
         except Exception as e:
@@ -116,12 +127,13 @@ def train_test_evaluate(train_size, noise_level, num_samples, temperatures, grou
         "res_at_temp": res_at_temp,
         "test_size": len(formatted_test),
         "threshold": THRESHOLD,
-       # "formatted_test": formatted_test
-        "smiles_metrics_all": smiles_metrics_all, 
-        "group": group
+        # "formatted_test": formatted_test
+        "smiles_metrics_all": smiles_metrics_all,
+        "group": group,
     }
 
-    save_pickle(Path("out2") / Path("summary.pkl"), summary)
+    timestr = time.strftime("%Y%m%d-%H%M%S")
+    save_pickle(Path("out2") / Path(f"{timestr}_summary.pkl"), summary)
 
 
 if __name__ == "__main__":
@@ -129,7 +141,9 @@ if __name__ == "__main__":
         for noise_level in NOISE_LEVEL:
             for group in GROUPS:
                 try:
-                    train_test_evaluate(TRAIN_SIZE, noise_level, NUM_SAMPLES, TEMPERATURES, group, seed+34)
+                    train_test_evaluate(
+                        TRAIN_SIZE, noise_level, NUM_SAMPLES, TEMPERATURES, group, seed + 3546784
+                    )
                 except Exception as e:
                     logger.exception(e)
                     continue
